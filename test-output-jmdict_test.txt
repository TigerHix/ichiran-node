bun test v1.2.23 (cf136713)

packages/cli/tests/cli-parity.test.ts:
[dotenv@17.2.3] injecting env (0) from .env -- tip: üë• sync secrets across teammates & machines: https://dotenvx.com/ops
[dotenv@17.2.3] injecting env (0) from .env -- tip: ‚úÖ audit secrets and track compliance: https://dotenvx.com/ops
Database connection initialized
Pre-warming suffix cache...
Suffix cache initialized in 119ms
(pass) CLI Romanization Comparison > romanization matches for: „Åì„Çì„Å´„Å°„ÅØ [547.28ms]
(pass) CLI Romanization Comparison > romanization matches for: ‰ªäÊó•„ÅØ„ÅÑ„ÅÑÂ§©Ê∞ó„Åß„Åô [162.40ms]
(pass) CLI Romanization Comparison > romanization matches for: „ÅîÊ≥®Êñá„ÅØ„ÅÜ„Åï„Åé„Åß„Åô„Åã [146.01ms]
(pass) CLI Romanization Comparison > romanization matches for: ÂúüË∂≥„Åß [17.54ms]
(pass) CLI Romanization Comparison > romanization matches for: „Åø„Çì„Å™ÂúüË∂≥„Åß„Åä„ÅÑ„Åß [92.73ms]
(pass) CLI Info Output Comparison (-i flag) > info output matches for: „Åì„Çì„Å´„Å°„ÅØ [3.37ms]
(pass) CLI Info Output Comparison (-i flag) > info output matches for: ‰ªäÊó• [7.29ms]
(pass) CLI Info Output Comparison (-i flag) > info output matches for: Â§©Ê∞ó [5.45ms]
(pass) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åì„Çì„Å´„Å°„ÅØ" (limit: 1) [6.66ms]
(pass) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÅîÊ≥®Êñá„ÅØ„ÅÜ„Åï„Åé„Åß„Åô„Åã" (limit: 3) [43.67ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -7,21 +7,21 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "everyone; everybody; all",
+                 "info": "„Åø„Çì„Å™ is less formal and more emphatic",
                  "pos": "[n,pn,adv]",
                },
                {
                  "gloss": "everything; all",
                  "pos": "[adv,n]",
                },
              ],
              "kana": "„Åø„Çì„Å™",
              "reading": "„Åø„Çì„Å™",
-             "score": 234,
+             "score": 144,
              "seq": 1202150,
              "text": "„Åø„Çì„Å™",
            },
            [],
          ],
@@ -69,32 +69,32 @@
              "text": "„Åä„ÅÑ„Åß",
            },
            [],
          ],
        ],
-       509,
+       419,
      ],
      [
        [
          [
            "minna",
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "everyone; everybody; all",
+                 "info": "„Åø„Çì„Å™ is less formal and more emphatic",
                  "pos": "[n,pn,adv]",
                },
                {
                  "gloss": "everything; all",
                  "pos": "[adv,n]",
                },
              ],
              "kana": "„Åø„Çì„Å™",
              "reading": "„Åø„Çì„Å™",
-             "score": 234,
+             "score": 144,
              "seq": 1202150,
              "text": "„Åø„Çì„Å™",
            },
            [],
          ],
@@ -225,11 +225,11 @@
                    },
                  ],
                  "kana": "„Åä„ÅÑ",
                  "reading": "„Åä„ÅÑ",
                  "score": 12,
-                 "seq": 10339469,
+                 "seq": 25625504,
                  "text": "„Åä„ÅÑ",
                },
                {
                  "conj": [
                    {
@@ -267,11 +267,11 @@
                    },
                  ],
                  "kana": "„Åä„ÅÑ",
                  "reading": "„Åä„ÅÑ",
                  "score": 12,
-                 "seq": 10622440,
+                 "seq": 25917832,
                  "text": "„Åä„ÅÑ",
                },
              ],
            },
            [],
@@ -312,43 +312,50 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 16,
              "seq": 2028980,
              "text": "„Åß",
            },
            [],
          ],
        ],
-       505,
+       415,
      ],
      [
        [
          [
            "minna",
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "everyone; everybody; all",
+                 "info": "„Åø„Çì„Å™ is less formal and more emphatic",
                  "pos": "[n,pn,adv]",
                },
                {
                  "gloss": "everything; all",
                  "pos": "[adv,n]",
                },
              ],
              "kana": "„Åø„Çì„Å™",
              "reading": "„Åø„Çì„Å™",
-             "score": 234,
+             "score": 144,
              "seq": 1202150,
              "text": "„Åø„Çì„Å™",
            },
            [],
          ],
@@ -410,11 +417,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -443,32 +457,32 @@
              "text": "„Åä„ÅÑ„Åß",
            },
            [],
          ],
        ],
-       503,
+       413,
      ],
      [
        [
          [
            "minna",
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "everyone; everybody; all",
+                 "info": "„Åø„Çì„Å™ is less formal and more emphatic",
                  "pos": "[n,pn,adv]",
                },
                {
                  "gloss": "everything; all",
                  "pos": "[adv,n]",
                },
              ],
              "kana": "„Åø„Çì„Å™",
              "reading": "„Åø„Çì„Å™",
-             "score": 234,
+             "score": 144,
              "seq": 1202150,
              "text": "„Åø„Çì„Å™",
            },
            [],
          ],
@@ -529,11 +543,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
@@ -563,32 +584,32 @@
              "text": "„Åä„ÅÑ„Åß",
            },
            [],
          ],
        ],
-       499,
+       409,
      ],
      [
        [
          [
            "minna",
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "everyone; everybody; all",
+                 "info": "„Åø„Çì„Å™ is less formal and more emphatic",
                  "pos": "[n,pn,adv]",
                },
                {
                  "gloss": "everything; all",
                  "pos": "[adv,n]",
                },
              ],
              "kana": "„Åø„Çì„Å™",
              "reading": "„Åø„Çì„Å™",
-             "score": 234,
+             "score": 144,
              "seq": 1202150,
              "text": "„Åø„Çì„Å™",
            },
            [],
          ],
@@ -650,11 +671,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -766,11 +794,11 @@
                    },
                  ],
                  "kana": "„Åä„ÅÑ",
                  "reading": "„Åä„ÅÑ",
                  "score": 12,
-                 "seq": 10339469,
+                 "seq": 25625504,
                  "text": "„Åä„ÅÑ",
                },
                {
                  "conj": [
                    {
@@ -808,11 +836,11 @@
                    },
                  ],
                  "kana": "„Åä„ÅÑ",
                  "reading": "„Åä„ÅÑ",
                  "score": 12,
-                 "seq": 10622440,
+                 "seq": 25917832,
                  "text": "„Åä„ÅÑ",
                },
              ],
            },
            [],
@@ -853,20 +881,27 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 16,
              "seq": 2028980,
              "text": "„Åß",
            },
            [],
          ],
        ],
-       499,
+       409,
      ],
    ],
  ]

- Expected  - 14
+ Received  + 59

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åø„Çì„Å™ÂúüË∂≥„Åß„Åä„ÅÑ„Åß" (limit: 5) [27.02ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -60,11 +60,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -72,20 +72,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -329,11 +331,11 @@
                },
              ],
              "kana": "„Åç„Åà„Åü",
              "reading": "Ê∂à„Åà„Åü „Äê„Åç„Åà„Åü„Äë",
              "score": 336,
-             "seq": 10057202,
+             "seq": 25334349,
              "text": "Ê∂à„Åà„Åü",
            },
            [],
          ],
        ],

- Expected  - 6
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Âè§„ÅÑÈßÖ„Éì„É´„ÅÆÈùûÂ∏∏Âè£„Å´Áå´„Åå„Åô„Å£„Å®Ê∂à„Åà„Åü„ÄÇ" (limit: 1) [171.83ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -64,11 +66,11 @@
            "yofukashi",
            {
              "conj": [],
              "gloss": [
                {
-                 "gloss": "staying up late; keeping late hours; sitting up late at night; nighthawk",
+                 "gloss": "staying up late; sitting up late at night; keeping late hours",
                  "pos": "[vi,vs,n]",
                },
              ],
              "kana": "„Çà„Åµ„Åã„Åó",
              "reading": "Â§úÊõ¥„Åã„Åó „Äê„Çà„Åµ„Åã„Åó„Äë",
@@ -148,11 +150,11 @@
                },
              ],
              "kana": "„Åø„Å™„Åä„Åó„Åü„Çâ",
              "reading": "Ë¶ãÁõ¥„Åó„Åü„Çâ „Äê„Åø„Å™„Åä„Åó„Åü„Çâ„Äë",
              "score": 1495,
-             "seq": 10549876,
+             "seq": 25842529,
              "text": "Ë¶ãÁõ¥„Åó„Åü„Çâ",
            },
            [],
          ],
          [
@@ -186,11 +188,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -198,20 +200,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -367,11 +371,11 @@
                },
              ],
              "kana": "„Å°„ÅÑ„Åï„Åã„Å£„Åü",
              "reading": "Â∞è„Åï„Åã„Å£„Åü „Äê„Å°„ÅÑ„Åï„Åã„Å£„Åü„Äë",
              "score": 840,
-             "seq": 10611950,
+             "seq": 25906707,
              "text": "Â∞è„Åï„Åã„Å£„Åü",
            },
            [],
          ],
        ],

- Expected  - 13
+ Received  + 17

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Êò®Êó•„ÅÆÂ§úÊõ¥„Åã„ÅóÈÖç‰ø°„Ç¢„Éº„Ç´„Ç§„ÉñË¶ãÁõ¥„Åó„Åü„ÇâËá™ÂàÜ„ÅÆÁ¨ë„ÅÑÂ£∞„Å†„ÅëÁï∞Êßò„Å´Â∞è„Åï„Åã„Å£„Åü„ÄÇ" (limit: 1) [543.62ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -29,14 +29,11 @@
                },
                {
                  "gloss": "optical fiber; optical fibre",
                  "pos": "[n]",
                },
-               {
-                 "gloss": "Hikari (city), Yamaguchi Prefecture",
-                 "pos": "[n]",
-               },
              ],
              "kana": "„Å≤„Åã„Çä",
              "reading": "ÂÖâ „Äê„Å≤„Åã„Çä„Äë",
              "score": 25,
              "seq": 1272780,
@@ -315,11 +312,11 @@
                    },
                  ],
                  "kana": "„Åæ„Å£„Å¶",
                  "reading": "Ëàû„Å£„Å¶ „Äê„Åæ„Å£„Å¶„Äë",
                  "score": 0,
-                 "seq": 10544132,
+                 "seq": 25836374,
                  "text": "Ëàû„Å£„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÅÑ„Çã",
@@ -346,11 +343,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -358,20 +355,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -569,11 +568,11 @@
                },
              ],
              "kana": "„Åø„Åà„Åü",
              "reading": "Ë¶ã„Åà„Åü „Äê„Åø„Åà„Åü„Äë",
              "score": 336,
-             "seq": 10589494,
+             "seq": 25883112,
              "text": "Ë¶ã„Åà„Åü",
            },
            [],
          ],
        ],

- Expected  - 11
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÂÖâ„ÅåÂ∑Æ„ÅóËæº„ÇÄ„Åü„Å≥ÂüÉ„Åå„Åè„Çã„Åè„ÇãËàû„Å£„Å¶„Çã„ÅÆ„Åå„ÇÑ„Åë„Å´Á´ãÊ¥æ„Å´Ë¶ã„Åà„Åü„ÄÇ" (limit: 1) [166.58ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -70,11 +72,11 @@
                  "pos": "[n]",
                },
              ],
              "kana": "„Çπ„Éû„Éõ",
              "reading": "„Çπ„Éû„Éõ",
-             "score": 96,
+             "score": 384,
              "seq": 2641300,
              "text": "„Çπ„Éû„Éõ",
            },
            [],
          ],
@@ -83,11 +85,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -95,20 +97,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -310,11 +314,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -322,20 +326,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -515,11 +521,11 @@
                    },
                  ],
                  "kana": "„Åó„Å¶",
                  "reading": "„Åó„Å¶",
                  "score": 0,
-                 "seq": 10150864,
+                 "seq": 25430295,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Å¶",
                },
                {
                  "conj": [
@@ -532,13 +538,18 @@
                        {
                          "gloss": "to stay",
                          "pos": "[v1,vi]",
                        },
                        {
-                         "gloss": "to be ...-ing; to have been ...-ing",
-                         "info": "after the -te form of a verb; indicates continuing action or state",
-                         "pos": "[v1,aux-v]",
+                         "gloss": "to be ...-ing",
+                         "info": "after the -te form of a verb; indicates continuing action",
+                         "pos": "[aux-v,v1]",
+                       },
+                       {
+                         "gloss": "to have ...-ed; to be ...-ed",
+                         "info": "after the -te form of a verb; indicates continuing state",
+                         "pos": "[aux-v,v1]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v1",
@@ -550,11 +561,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å¶",
                  "reading": "„ÅÑ„Å¶",
                  "score": 0,
-                 "seq": 10547541,
+                 "seq": 25839478,
                  "suffix": "indicates continuing action (to be ...ing)",
                  "text": "„ÅÑ„Å¶",
                },
              ],
              "compound": [
@@ -583,12 +594,12 @@
                      "gloss": "to smile",
                      "pos": "[v5u,vi]",
                    },
                    {
                      "gloss": "to sneer; to ridicule",
-                     "info": "occ. written as Âó§„ÅÜ",
-                     "pos": "[v5u,vt,vi]",
+                     "info": "esp. Âó§„ÅÜ",
+                     "pos": "[v5u,vt]",
                    },
                    {
                      "gloss": "to be dumbfounded; to be flabbergasted",
                      "info": "as Á¨ë„Å£„Å¶„Åó„Åæ„ÅÜ or Á¨ë„Å£„Å°„ÇÉ„ÅÜ",
                      "pos": "[v5u,vi]",
@@ -605,16 +616,16 @@
                },
              ],
              "kana": "„Çè„Çâ„Å£„Åü",
              "reading": "Á¨ë„Å£„Åü „Äê„Çè„Çâ„Å£„Åü„Äë",
              "score": 112,
-             "seq": 10162680,
+             "seq": 25443020,
              "text": "Á¨ë„Å£„Åü",
            },
            [],
          ],
        ],
-       2616,
+       2904,
      ],
    ],
    ". ",
  ]

- Expected  - 25
+ Received  + 36

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Áà∂„ÅÆ„Çπ„Éû„Éõ„ÅÆ‰∫àÊ∏¨Â§âÊèõ„ÅåÂÆåÂÖ®„Å´ÊØç„ÅÆÂè£Áôñ„ÇíÂ≠¶Áøí„Åó„Å¶„Å¶Á¨ë„Å£„Åü„ÄÇ" (limit: 1) [122.18ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -83,11 +85,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -95,20 +97,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -212,11 +216,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -247,11 +258,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -259,20 +270,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -408,11 +421,11 @@
                },
              ],
              "kana": "„ÇÇ„Å©„Å£„Å¶„Åç„Åü",
              "reading": "Êàª„Å£„Å¶„Åç„Åü „Äê„ÇÇ„Å©„Å£„Å¶„Åç„Åü„Äë",
              "score": 440,
-             "seq": 10556381,
+             "seq": 25848847,
              "text": "Êàª„Å£„Å¶„Åç„Åü",
            },
            [],
          ],
        ],

- Expected  - 16
+ Received  + 30

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Èõ®‰∏ä„Åå„Çä„ÅÆ„Ç¢„Çπ„Éï„Ç°„É´„Éà„ÅÆÂåÇ„ÅÑ„ÅßÂ§èÁ•≠„Çä„ÅÆË®òÊÜ∂„Åå‰∏ÄÊ∞ó„Å´Êàª„Å£„Å¶„Åç„Åü„ÄÇ" (limit: 1) [189.12ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -33,11 +33,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -45,20 +45,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -165,11 +167,15 @@
                    },
                    {
                      "gloss": "Ench≈ç era (923.4.11-931.4.26)",
                      "pos": "[n]",
                    },
+                   {
+                     "field": "{sports}",
+                     "gloss": "extended game; overtime; extra time; extra innings",
+                     "pos": "[n]",
+                   },
                  ],
                  "kana": "„Åà„Çì„Å°„Çá„ÅÜ",
                  "reading": "Âª∂Èï∑ „Äê„Åà„Çì„Å°„Çá„ÅÜ„Äë",
                  "score": 0,
                  "seq": 1176510,
@@ -267,11 +273,11 @@
                    },
                  ],
                  "kana": "„Åó„Å¶",
                  "reading": "„Åó„Å¶",
                  "score": 0,
-                 "seq": 10150864,
+                 "seq": 25430295,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Å¶",
                },
                {
                  "conj": [
@@ -317,11 +323,11 @@
                    },
                  ],
                  "kana": "„ÇÇ„Çâ„Åà„Åü",
                  "reading": "„ÇÇ„Çâ„Åà„Åü",
                  "score": 0,
-                 "seq": 10441195,
+                 "seq": 25729836,
                  "suffix": "(asking) to get somebody to do something",
                  "text": "„ÇÇ„Çâ„Åà„Åü",
                },
              ],
              "compound": [
@@ -450,11 +456,15 @@
                },
                {
                  "gloss": "Ench≈ç era (923.4.11-931.4.26)",
                  "pos": "[n]",
                },
+               {
+                 "field": "{sports}",
+                 "gloss": "extended game; overtime; extra time; extra innings",
+                 "pos": "[n]",
+               },
              ],
              "kana": "„Åà„Çì„Å°„Çá„ÅÜ",
              "reading": "Âª∂Èï∑ „Äê„Åà„Çì„Å°„Çá„ÅÜ„Äë",
              "score": 312,
              "seq": 1176510,
@@ -523,11 +533,11 @@
                },
              ],
              "kana": "„Åß„Åç„Å™„Åã„Å£„Åü",
              "reading": "„Åß„Åç„Å™„Åã„Å£„Åü",
              "score": 525,
-             "seq": 10228482,
+             "seq": 25510481,
              "text": "„Åß„Åç„Å™„Åã„Å£„Åü",
            },
            [],
          ],
        ],

- Expected  - 8
+ Received  + 20

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ë™≤È°å„ÅÆÁ∑†Âàá„ÇíÂª∂Èï∑„Åó„Å¶„ÇÇ„Çâ„Åà„Åü„Åë„Å©ÁΩ™ÊÇ™ÊÑü„Å†„Åë„ÅØÂª∂Èï∑„Åß„Åç„Å™„Åã„Å£„Åü„ÄÇ" (limit: 1) [233.73ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -247,11 +249,11 @@
                    },
                  ],
                  "kana": "„Åó„Å¶",
                  "reading": "„Åó„Å¶",
                  "score": 0,
-                 "seq": 10150864,
+                 "seq": 25430295,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Å¶",
                },
              ],
              "compound": [
@@ -511,11 +513,11 @@
                    },
                  ],
                  "kana": "„Åó„Åü",
                  "reading": "„Åó„Åü",
                  "score": 0,
-                 "seq": 10150860,
+                 "seq": 25430291,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Åü",
                },
              ],
              "compound": [

- Expected  - 7
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Êúù‰∏ÄÁï™„ÅÆ„Ç®„Çπ„Éó„É¨„ÉÉ„ÇΩ„ÅåÂ§±Êïó„Åó„Å¶Ê©üÂ´å„ÇÇÊäΩÂá∫„Å´Â§±Êïó„Åó„Åü„ÄÇ" (limit: 1) [118.45ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -172,12 +174,12 @@
            "shunkan",
            {
              "conj": [],
              "gloss": [
                {
-                 "gloss": "moment; second; instant",
-                 "pos": "[adv,n]",
+                 "gloss": "moment; instant; second",
+                 "pos": "[n]",
                },
              ],
              "kana": "„Åó„ÇÖ„Çì„Åã„Çì",
              "reading": "Áû¨Èñì „Äê„Åó„ÇÖ„Çì„Åã„Çì„Äë",
              "score": 286,
@@ -207,11 +209,11 @@
              "text": "„Å†„Åë",
            },
            [],
          ],
          [
-           "f≈´/kaze",
+           "kaze/f≈´",
            {
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
@@ -399,11 +401,70 @@
                  "pos": "[prt]",
                },
                {
                  "gloss": "right?; isn't it?; doesn't it?; don't you?; don't you think?",
                  "info": "used as a request for confirmation or agreement; used at sentence end",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
                  "pos": "[prt]",
                },
                {
                  "gloss": "indicates „Å™-adjective",
                  "pos": "[prt]",

- Expected  - 8
+ Received  + 70

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈõªËªä„ÅÆ„Éâ„Ç¢„ÅåÈñâ„Åæ„ÇãÁû¨Èñì„Å†„ÅëÈ¢®„ÅåÊ≠£Áõ¥„Å™È°î„Çí„Åô„Çã„ÄÇ" (limit: 1) [84.62ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -29,11 +29,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -41,20 +41,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -182,11 +184,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -267,11 +276,70 @@
                },
                {
                  "gloss": "indicates „Å™-adjective",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
              ],
              "kana": "„Å™",
              "reading": "„Å™",
              "score": 6,
              "seq": 2029110,
@@ -446,11 +514,11 @@
                },
              ],
              "kana": "„Å†„ÅÑ„Å™„Åó„Å´„Åó„Å¶",
              "reading": "Âè∞ÁÑ°„Åó„Å´„Åó„Å¶ „Äê„Å†„ÅÑ„Å™„Åó„Å´„Åó„Å¶„Äë",
              "score": 1001,
-             "seq": 10088984,
+             "seq": 25366852,
              "text": "Âè∞ÁÑ°„Åó„Å´„Åó„Å¶",
            },
            [],
          ],
          [
@@ -531,11 +599,11 @@
                },
              ],
              "kana": "„Åô„Åè„Å£„Åü",
              "reading": "Êïë„Å£„Åü „Äê„Åô„Åè„Å£„Åü„Äë",
              "score": 112,
-             "seq": 10534393,
+             "seq": 25826256,
              "text": "Êïë„Å£„Åü",
            },
            [],
          ],
        ],

- Expected  - 7
+ Received  + 77

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÂΩº„ÅÆ„ÅÑ„ÇÑ„Åù„ÅÜ„Åß„ÅÜ„Çå„Åó„Åù„ÅÜ„Å™È°î„ÅåÂÖ®ÈÉ®„ÇíÂè∞ÁÑ°„Åó„Å´„Åó„Å¶ÂÖ®ÈÉ®„ÇíÊïë„Å£„Åü„ÄÇ" (limit: 1) [270.95ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -88,11 +88,11 @@
                },
              ],
              "kana": "„Çè„Åô„Çå„Åü",
              "reading": "Âøò„Çå„Åü „Äê„Çè„Åô„Çå„Åü„Äë",
              "score": 216,
-             "seq": 10524471,
+             "seq": 25816344,
              "text": "Âøò„Çå„Åü",
            },
            [],
          ],
          [
@@ -212,11 +212,11 @@
                },
              ],
              "kana": "„Çè„Åô„Çå„Å¶",
              "reading": "Âøò„Çå„Å¶ „Äê„Çè„Åô„Çå„Å¶„Äë",
              "score": 216,
-             "seq": 10524475,
+             "seq": 25816348,
              "text": "Âøò„Çå„Å¶",
            },
            [],
          ],
          [
@@ -253,11 +253,11 @@
                },
              ],
              "kana": "„ÅÑ„Åà„Çí„Åß„Åü",
              "reading": "ÂÆ∂„ÇíÂá∫„Åü „Äê„ÅÑ„Åà„Çí„Åß„Åü„Äë",
              "score": 585,
-             "seq": 10600425,
+             "seq": 25894387,
              "text": "ÂÆ∂„ÇíÂá∫„Åü",
            },
            [],
          ],
          [
@@ -313,11 +313,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,

- Expected  - 3
+ Received  + 11

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Èçµ„ÇíÂøò„Çå„Åü„Åì„Å®„ÇíÂøò„Çå„Å¶ÂÆ∂„ÇíÂá∫„ÅüÊôÇÁÇπ„Åß‰ªäÊó•„ÅØË≤†„Åë„Å†„Å£„Åü„ÄÇ" (limit: 1) [106.78ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -227,11 +229,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -262,11 +271,16 @@
                      "gloss": "to be equipped with",
                      "pos": "[v5r-i,vi]",
                    },
                    {
                      "gloss": "to happen; to come about",
-                     "pos": "[vi,v5r-i]",
+                     "pos": "[v5r-i,vi]",
+                   },
+                   {
+                     "gloss": "to exist (in a completed state); to be (something unchanged in its current state)",
+                     "info": "after the ÔΩû„Å¶ form of a transitive verb",
+                     "pos": "[aux-v,v5r-i]",
                    },
                  ],
                  "prop": [
                    {
                      "pos": "v5r-i",
@@ -341,11 +355,16 @@
                },
              ],
              "gloss": [
                {
                  "gloss": "to continue; to keep up; to keep on",
-                 "pos": "[aux-v,vt,v1]",
+                 "pos": "[v1,vt]",
+               },
+               {
+                 "gloss": "to continue ...; to keep on ...",
+                 "info": "after the -masu stem of a verb",
+                 "pos": "[aux-v,v1]",
                },
              ],
              "kana": "„Å§„Å•„Åë„Çã",
              "reading": "Á∂ö„Åë„Çã „Äê„Å§„Å•„Åë„Çã„Äë",
              "score": 384,
@@ -501,11 +520,11 @@
                    },
                  ],
                  "kana": "„Åß„Åç„Å¶",
                  "reading": "„Åß„Åç„Å¶",
                  "score": 0,
-                 "seq": 10228484,
+                 "seq": 25510483,
                  "text": "„Åß„Åç„Å¶",
                },
                {
                  "conj": [
                    {
@@ -517,13 +536,18 @@
                        {
                          "gloss": "to stay",
                          "pos": "[v1,vi]",
                        },
                        {
-                         "gloss": "to be ...-ing; to have been ...-ing",
-                         "info": "after the -te form of a verb; indicates continuing action or state",
-                         "pos": "[v1,aux-v]",
+                         "gloss": "to be ...-ing",
+                         "info": "after the -te form of a verb; indicates continuing action",
+                         "pos": "[aux-v,v1]",
+                       },
+                       {
+                         "gloss": "to have ...-ed; to be ...-ed",
+                         "info": "after the -te form of a verb; indicates continuing state",
+                         "pos": "[aux-v,v1]",
                        },
                      ],
                      "prop": [
                        {
                          "neg": true,
@@ -536,11 +560,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å™„ÅÑ",
                  "reading": "„ÅÑ„Å™„ÅÑ",
                  "score": 0,
-                 "seq": 10547535,
+                 "seq": 25839472,
                  "suffix": "indicates continuing action (to be ...ing)",
                  "text": "„ÅÑ„Å™„ÅÑ",
                },
              ],
              "compound": [

- Expected  - 12
+ Received  + 37

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "‰øÆË´ñ„ÅÆÂõ≥1„ÅåÂõ≥1„Åß„ÅÇ„ÇäÁ∂ö„Åë„ÇãË¶öÊÇü„Åå„Åß„Åç„Å¶„ÅÑ„Å™„ÅÑ„ÄÇ" (limit: 1) [160.43ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -165,11 +165,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -177,20 +177,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -223,11 +225,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -235,20 +237,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -520,11 +524,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -532,20 +536,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 15
+ Received  + 21

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "‰ºöË≠∞„ÅåÂßã„Åæ„ÇãÂâç„ÅÆÈõëË´á„ÅÆÊñπ„ÅåÊÑèÊÄùÊ±∫ÂÆö„ÅåÊó©„ÅÑ„ÅÆ„ÅØ„Å™„Åú„Å†„Çç„ÅÜ„ÄÇ" (limit: 1) [104.33ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -47,11 +47,11 @@
                },
              ],
              "kana": "„Ç™„Éï„Å´„Åó„Åü",
              "reading": "„Ç™„Éï„Å´„Åó„Åü",
              "score": 660,
-             "seq": 10492829,
+             "seq": 25783245,
              "text": "„Ç™„Éï„Å´„Åó„Åü",
            },
            [],
          ],
          [
@@ -83,11 +83,11 @@
              "text": "„ÅÆ„Å´",
            },
            [],
          ],
          [
-           "kokoro/shin",
+           "shin/kokoro",
            {
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
@@ -196,11 +196,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -208,20 +208,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 7
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈÄöÁü•„Ç™„Éï„Å´„Åó„Åü„ÅÆ„Å´ÂøÉ„Å†„Åë„Ç™„É≥„ÅÆ„Åæ„Åæ„Å†„Å£„Åü„ÄÇ" (limit: 1) [76.15ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -31,11 +31,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -43,20 +43,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 5
+ Received  + 7

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Ç´„É¨„Éº„ÅÆ‰∫åÊó•ÁõÆ„ÅØÊ≠£Áæ©„Å†„Åå‰∏âÊó•ÁõÆ„ÅØÂÆóÊïô„Å†„Å®ÊÄù„ÅÜ„ÄÇ" (limit: 1) [35.96ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -50,11 +50,11 @@
                },
              ],
              "kana": "„Åó„Çâ„Å™„ÅÑ",
              "reading": "Áü•„Çâ„Å™„ÅÑ „Äê„Åó„Çâ„Å™„ÅÑ„Äë",
              "score": 840,
-             "seq": 10104968,
+             "seq": 25383436,
              "text": "Áü•„Çâ„Å™„ÅÑ",
            },
            [],
          ],
          [
@@ -124,11 +124,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -136,20 +136,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -325,11 +327,11 @@
                    },
                  ],
                  "kana": "„Åó„Åü„Çâ",
                  "reading": "„Åó„Åü„Çâ",
                  "score": 0,
-                 "seq": 10150898,
+                 "seq": 25430330,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Åü„Çâ",
                },
              ],
              "compound": [
@@ -391,11 +393,11 @@
                },
              ],
              "kana": "„Åó„Çâ„Å™„ÅÑ",
              "reading": "Áü•„Çâ„Å™„ÅÑ „Äê„Åó„Çâ„Å™„ÅÑ„Äë",
              "score": 840,
-             "seq": 10104968,
+             "seq": 25383436,
              "text": "Áü•„Çâ„Å™„ÅÑ",
            },
            [],
          ],
          [
@@ -460,11 +462,11 @@
                },
              ],
              "kana": "„Åù„Å†„Å£„Åü",
              "reading": "ËÇ≤„Å£„Åü „Äê„Åù„Å†„Å£„Åü„Äë",
              "score": 112,
-             "seq": 10147625,
+             "seq": 25427729,
              "text": "ËÇ≤„Å£„Åü",
            },
            [],
          ],
        ],

- Expected  - 9
+ Received  + 11

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Áü•„Çâ„Å™„ÅÑÁï™Âè∑„Åã„Çâ„ÅÆÁùÄ‰ø°„ÇíÊîæÁΩÆ„Åó„Åü„ÇâÁü•„Çâ„Å™„ÅÑ‰∏çÂÆâ„Å†„ÅëËÇ≤„Å£„Åü„ÄÇ" (limit: 1) [298.59ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -93,11 +93,11 @@
                },
              ],
              "kana": "„Åø„ÅÆ„Åå„Åó„Åü",
              "reading": "Ë¶ãÈÄÉ„Åó„Åü „Äê„Åø„ÅÆ„Åå„Åó„Åü„Äë",
              "score": 1035,
-             "seq": 10203093,
+             "seq": 25484560,
              "text": "Ë¶ãÈÄÉ„Åó„Åü",
            },
            [],
          ],
          [
@@ -210,11 +210,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -257,11 +264,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -269,20 +276,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -446,11 +455,16 @@
                      "gloss": "to be equipped with",
                      "pos": "[v5r-i,vi]",
                    },
                    {
                      "gloss": "to happen; to come about",
-                     "pos": "[vi,v5r-i]",
+                     "pos": "[v5r-i,vi]",
+                   },
+                   {
+                     "gloss": "to exist (in a completed state); to be (something unchanged in its current state)",
+                     "info": "after the ÔΩû„Å¶ form of a transitive verb",
+                     "pos": "[aux-v,v5r-i]",
                    },
                  ],
                  "kana": "„ÅÇ„Çã",
                  "reading": "„ÅÇ„Çã",
                  "score": 40,

- Expected  - 7
+ Received  + 22

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÊúùÁÑº„Åë„ÇíË¶ãÈÄÉ„Åó„ÅüÊÇî„Åó„Åï„ÇíÊòºÂØù„ÅßË™§È≠îÂåñ„Åô„ÅÆ„ÅØÁÑ°ÁêÜ„Åå„ÅÇ„Çã„ÄÇ" (limit: 1) [118.82ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -80,11 +80,11 @@
                },
              ],
              "kana": "„Çè„Åô„Çå„Åü",
              "reading": "Âøò„Çå„Åü „Äê„Çè„Åô„Çå„Åü„Äë",
              "score": 216,
-             "seq": 10524471,
+             "seq": 25816344,
              "text": "Âøò„Çå„Åü",
            },
            [],
          ],
          [
@@ -215,11 +215,11 @@
                    },
                  ],
                  "kana": "„ÇÇ„Å£„Å¶",
                  "reading": "ÊåÅ„Å£„Å¶ „Äê„ÇÇ„Å£„Å¶„Äë",
                  "score": 0,
-                 "seq": 10618848,
+                 "seq": 25913716,
                  "text": "ÊåÅ„Å£„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÅÑ„Çã",
@@ -274,11 +274,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "contradiction; inconsistency",
-                 "pos": "[adj-no,vi,vs,n]",
+                 "pos": "[vi,vs,n]",
                },
              ],
              "kana": "„ÇÄ„Åò„ÇÖ„Çì",
              "reading": "ÁüõÁõæ „Äê„ÇÄ„Åò„ÇÖ„Çì„Äë",
              "score": 247,
@@ -323,11 +323,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -357,11 +364,11 @@
                },
              ],
              "kana": "„ÅÑ„Åç„ÅÆ„Å≥„Åü",
              "reading": "Áîü„ÅçÂª∂„Å≥„Åü „Äê„ÅÑ„Åç„ÅÆ„Å≥„Åü„Äë",
              "score": 1495,
-             "seq": 10036334,
+             "seq": 25312629,
              "text": "Áîü„ÅçÂª∂„Å≥„Åü",
            },
            [],
          ],
        ],

- Expected  - 4
+ Received  + 12

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ë≤°Â∏É„ÇíÂøò„Çå„Åü„ÅÆ„Å´ÂÇò„ÅØÊåÅ„Å£„Å¶„ÅÑ„Çã„Å®„ÅÑ„ÅÜÁüõÁõæ„ÅßÁîü„ÅçÂª∂„Å≥„Åü„ÄÇ" (limit: 1) [150.87ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -45,11 +45,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -57,20 +57,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -193,11 +195,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -205,20 +207,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -346,11 +350,11 @@
                          "gloss": "to be promoted",
                          "pos": "[v5r,vi]",
                        },
                        {
                          "gloss": "to do ...",
-                         "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                         "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                          "pos": "[aux-v,v5r]",
                        },
                      ],
                      "prop": [
                        {
@@ -363,11 +367,11 @@
                    },
                  ],
                  "kana": "„Å™„Å£„Å¶",
                  "reading": "„Å™„Å£„Å¶",
                  "score": 0,
-                 "seq": 10371753,
+                 "seq": 25658509,
                  "text": "„Å™„Å£„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÅÑ„Çã",

- Expected  - 12
+ Received  + 16

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Áå´„ÅÆÂ∞ªÂ∞æ„ÅåÊ©üÂ´å„ÅÆ„Ç∞„É©„Éï„Å´„Å™„Å£„Å¶„Çã„ÄÇ" (limit: 1) [59.11ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -244,11 +246,11 @@
                },
              ],
              "kana": "„ÅÜ„Çã„Åï„Åè",
              "reading": "„ÅÜ„Çã„Åï„Åè",
              "score": 336,
-             "seq": 10125412,
+             "seq": 25404410,
              "text": "„ÅÜ„Çã„Åï„Åè",
            },
            [],
          ],
          [
@@ -281,12 +283,12 @@
            "shunkan",
            {
              "conj": [],
              "gloss": [
                {
-                 "gloss": "moment; second; instant",
-                 "pos": "[adv,n]",
+                 "gloss": "moment; instant; second",
+                 "pos": "[n]",
                },
              ],
              "kana": "„Åó„ÇÖ„Çì„Åã„Çì",
              "reading": "Áû¨Èñì „Äê„Åó„ÇÖ„Çì„Åã„Çì„Äë",
              "score": 286,
@@ -378,11 +380,16 @@
                      "gloss": "to be equipped with",
                      "pos": "[v5r-i,vi]",
                    },
                    {
                      "gloss": "to happen; to come about",
-                     "pos": "[vi,v5r-i]",
+                     "pos": "[v5r-i,vi]",
+                   },
+                   {
+                     "gloss": "to exist (in a completed state); to be (something unchanged in its current state)",
+                     "info": "after the ÔΩû„Å¶ form of a transitive verb",
+                     "pos": "[aux-v,v5r-i]",
                    },
                  ],
                  "kana": "„ÅÇ„Çã",
                  "reading": "„ÅÇ„Çã",
                  "score": 40,

- Expected  - 9
+ Received  + 16

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Âõ≥Êõ∏È§®„ÅÆÈùô„Åë„Åï„ÅåÈÄÜ„Å´„ÅÜ„Çã„Åï„ÅèÊÑü„Åò„ÇãÁû¨Èñì„Åå„ÅÇ„Çã„ÄÇ" (limit: 1) [110.68ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -30,11 +30,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -42,20 +42,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -180,11 +182,15 @@
                  "gloss": "to make sure",
                  "pos": "[v5s,vt]",
                },
                {
                  "gloss": "to fall behind schedule",
+                 "pos": "[v5s,vi]",
+               },
+               {
+                 "field": "{go}",
+                 "gloss": "to push; to extend one's stones forward by pushing against opponent's stones",
                  "pos": "[vi,v5s]",
                },
              ],
              "kana": "„Åä„Åô",
              "reading": "Êäº„Åô „Äê„Åä„Åô„Äë",
@@ -247,11 +253,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -259,20 +265,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -308,11 +316,11 @@
                        },
                      ],
                      "kana": "„ÇÑ„Åï„Åó",
                      "reading": "„ÇÑ„Åï„Åó",
                      "score": 0,
-                     "seq": 10022301,
+                     "seq": 25298301,
                      "text": "„ÇÑ„Åï„Åó",
                    },
                    {
                      "conj": [],
                      "kana": "„Åï",
@@ -354,11 +362,11 @@
                        },
                      ],
                      "kana": "„ÇÑ„Åï„Åó",
                      "reading": "„ÇÑ„Åï„Åó",
                      "score": 0,
-                     "seq": 10404411,
+                     "seq": 25692135,
                      "text": "„ÇÑ„Åï„Åó",
                    },
                    {
                      "conj": [],
                      "kana": "„Åï",

- Expected  - 12
+ Received  + 21

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Ç®„É¨„Éô„Éº„Çø„ÅÆÈñâ„Éú„Çø„É≥„ÇíÊäº„Åô‰∫∫„ÅÆ„ÇÑ„Åï„Åó„Åï„ÅØ„Åü„Åæ„Å´Êö¥Âäõ„Å†„ÄÇ" (limit: 1) [149.31ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -90,11 +90,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -102,20 +102,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 5
+ Received  + 7

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Á∑†ÂàáÂâç„ÅÆÊôÇÈñì„ÅØÈáçÂäõ„ÅåÂº∑„ÅÑ„ÄÇ" (limit: 1) [67.35ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -28,11 +28,11 @@
                },
              ],
              "kana": "„Å™„Åè„Åó",
              "reading": "„Å™„Åè„Åó",
              "score": 90,
-             "seq": 10474351,
+             "seq": 25764178,
              "text": "„Å™„Åè„Åó",
            },
            [],
          ],
          [
@@ -152,11 +152,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -164,20 +164,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -289,11 +291,11 @@
                },
              ],
              "kana": "„Å∞„Åë„Å¶",
              "reading": "Âåñ„Åë„Å¶ „Äê„Å∞„Åë„Å¶„Äë",
              "score": 336,
-             "seq": 10627930,
+             "seq": 25923405,
              "text": "Âåñ„Åë„Å¶",
            },
            [],
          ],
          [

- Expected  - 7
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Å™„Åè„Åó„ÇÇ„ÅÆ„ÅØÂ§ß‰ΩìÂà•„ÅÆÁî®‰∫ã„Å´Âåñ„Åë„Å¶Ë¶ã„Å§„Åã„Çã„ÄÇ" (limit: 1) [164.31ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -38,13 +38,18 @@
                    {
                      "gloss": "to stay",
                      "pos": "[v1,vi]",
                    },
                    {
-                     "gloss": "to be ...-ing; to have been ...-ing",
-                     "info": "after the -te form of a verb; indicates continuing action or state",
-                     "pos": "[v1,aux-v]",
+                     "gloss": "to be ...-ing",
+                     "info": "after the -te form of a verb; indicates continuing action",
+                     "pos": "[aux-v,v1]",
+                   },
+                   {
+                     "gloss": "to have ...-ed; to be ...-ed",
+                     "info": "after the -te form of a verb; indicates continuing state",
+                     "pos": "[aux-v,v1]",
                    },
                  ],
                  "prop": [
                    {
                      "neg": true,
@@ -57,11 +62,11 @@
                },
              ],
              "kana": "„ÅÑ„Å™„ÅÑ",
              "reading": "„ÅÑ„Å™„ÅÑ",
              "score": 90,
-             "seq": 10547535,
+             "seq": 25839472,
              "text": "„ÅÑ„Å™„ÅÑ",
            },
            [],
          ],
          [
@@ -104,11 +109,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -116,20 +121,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -171,11 +178,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -183,20 +190,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -370,11 +379,11 @@
                    },
                  ],
                  "kana": "„Åæ„Çè„Å£„Å¶",
                  "reading": "Âõû„Å£„Å¶ „Äê„Åæ„Çè„Å£„Å¶„Äë",
                  "score": 0,
-                 "seq": 10310469,
+                 "seq": 25595169,
                  "text": "Âõû„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -386,13 +395,18 @@
                        {
                          "gloss": "to stay",
                          "pos": "[v1,vi]",
                        },
                        {
-                         "gloss": "to be ...-ing; to have been ...-ing",
-                         "info": "after the -te form of a verb; indicates continuing action or state",
-                         "pos": "[v1,aux-v]",
+                         "gloss": "to be ...-ing",
+                         "info": "after the -te form of a verb; indicates continuing action",
+                         "pos": "[aux-v,v1]",
+                       },
+                       {
+                         "gloss": "to have ...-ed; to be ...-ed",
+                         "info": "after the -te form of a verb; indicates continuing state",
+                         "pos": "[aux-v,v1]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v1",
@@ -404,11 +418,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å¶",
                  "reading": "„ÅÑ„Å¶",
                  "score": 0,
-                 "seq": 10547541,
+                 "seq": 25839478,
                  "suffix": "indicates continuing action (to be ...ing)",
                  "text": "„ÅÑ„Å¶",
                },
              ],
              "compound": [
@@ -568,11 +582,11 @@
                },
              ],
              "kana": "„Åæ„Çè„Çâ„Å™„ÅÑ",
              "reading": "Âõû„Çâ„Å™„ÅÑ „Äê„Åæ„Çè„Çâ„Å™„ÅÑ„Äë",
              "score": 840,
-             "seq": 10310463,
+             "seq": 25595163,
              "text": "Âõû„Çâ„Å™„ÅÑ",
            },
            [],
          ],
        ],

- Expected  - 20
+ Received  + 34

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ë™∞„ÇÇ„ÅÑ„Å™„ÅÑ„ÅØ„Åö„ÅÆÈÉ®Â±ã„ÅÆÊ§ÖÂ≠ê„ÅåÂãùÊâã„Å´Âõû„Å£„Å¶„ÅÑ„Å¶Ë®òÊÜ∂„ÅåÂõû„Çâ„Å™„ÅÑ„ÄÇ" (limit: 1) [244.15ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -143,11 +143,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -155,20 +155,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 5
+ Received  + 7

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÂõûË¶ßÊùø„ÅåÂõû„Çã„ÅÆ„ÅØÈÅÖ„ÅÑ„ÅÆ„Å´ÂôÇ„ÅØÁßíÈÄü„Å†„ÄÇ" (limit: 1) [35.59ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -138,11 +140,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -150,20 +152,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -223,11 +227,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -235,20 +239,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -311,11 +317,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,

- Expected  - 15
+ Received  + 29

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÂÜ∑ËîµÂ∫´„ÅÆÈáéËèúÂÆ§„ÅØÊú™Êù•„ÅÆËá™ÂàÜ„Å∏„ÅÆË≤†ÂÇµ„Åß„ÅÑ„Å£„Å±„ÅÑ„Å†„ÄÇ" (limit: 1) [56.93ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -115,11 +115,11 @@
                    },
                  ],
                  "kana": "„ÅØ„Åö„Çå„Å¶",
                  "reading": "Â§ñ„Çå„Å¶ „Äê„ÅØ„Åö„Çå„Å¶„Äë",
                  "score": 0,
-                 "seq": 10621988,
+                 "seq": 25917244,
                  "text": "Â§ñ„Çå„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÇÇ",
@@ -285,11 +285,11 @@
                },
              ],
              "kana": "„Åï„Åó„Åü",
              "reading": "Â∑Æ„Åó„Åü „Äê„Åï„Åó„Åü„Äë",
              "score": 336,
-             "seq": 10149989,
+             "seq": 25430124,
              "text": "Â∑Æ„Åó„Åü",
            },
            [],
          ],
          [
@@ -506,11 +506,11 @@
                    },
                  ],
                  "kana": "„Åß„Åç„Å™„ÅÑ",
                  "reading": "„Åß„Åç„Å™„ÅÑ",
                  "score": 336,
-                 "seq": 10150873,
+                 "seq": 25430305,
                  "text": "„Åß„Åç„Å™„ÅÑ",
                },
                {
                  "conj": [
                    {
@@ -570,11 +570,11 @@
                    },
                  ],
                  "kana": "„Åß„Åç„Å™„ÅÑ",
                  "reading": "„Åß„Åç„Å™„ÅÑ",
                  "score": 336,
-                 "seq": 10228478,
+                 "seq": 25510477,
                  "text": "„Åß„Åç„Å™„ÅÑ",
                },
              ],
            },
            [],

- Expected  - 4
+ Received  + 4

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Èõ®Èõ≤„É¨„Éº„ÉÄ„Éº„ÅåÂ§ñ„Çå„Å¶„ÇÇÂÇò„ÇíÂ∑Æ„Åó„ÅüÁêÜÁî±„ÅØË®Ä„ÅÑË®≥„Å´„Åß„Åç„Å™„ÅÑ„ÄÇ" (limit: 1) [106.55ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -157,11 +159,11 @@
                    },
                  ],
                  "kana": "„Åã„ÅÑ„Å¶",
                  "reading": "Êõ∏„ÅÑ„Å¶ „Äê„Åã„ÅÑ„Å¶„Äë",
                  "score": 0,
-                 "seq": 10522827,
+                 "seq": 25814134,
                  "text": "Êõ∏„ÅÑ„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÅÇ„Çã",
@@ -182,11 +184,11 @@
              "text": "Êõ∏„ÅÑ„Å¶„ÅÇ„Çã",
            },
            [],
          ],
          [
-           "ake/hirake",
+           "hirake/ake",
            {
              "alternative": [
                {
                  "conj": [
                    {
@@ -223,88 +225,11 @@
                        },
                      ],
                      "reading": "Èñã„Åë„Çã „Äê„Å≤„Çâ„Åë„Çã„Äë",
                      "readok": true,
                    },
-                   {
-                     "gloss": [
-                       {
-                         "gloss": "to open; to undo; to unseal; to unpack",
-                         "pos": "[v5k,vi,vt]",
-                       },
-                       {
-                         "gloss": "to bloom; to unfold; to spread out",
-                         "pos": "[v5k,vi,vt]",
-                       },
-                       {
-                         "gloss": "to open (for business, e.g. in the morning)",
-                         "pos": "[v5k,vi,vt]",
-                       },
-                       {
-                         "gloss": "to be wide (gap, etc.); to widen",
-                         "pos": "[v5k,vi,vt]",
-                       },
-                       {
-                         "gloss": "to hold (meeting, party, etc.); to give; to open",
-                         "pos": "[v5k,vt]",
-                       },
-                       {
-                         "gloss": "to found (nation, dynasty, sect, etc.); to open (a new business); to set up; to establish; to start",
-                         "pos": "[v5k,vt]",
-                       },
-                       {
-                         "gloss": "to open (ports, borders, etc.)",
-                         "pos": "[v5k,vt]",
-                       },
-                       {
-                         "gloss": "to open (an account)",
-                         "pos": "[v5k,vt]",
-                       },
-                       {
-                         "gloss": "to open up (new land, path, etc.); to clear; to develop",
-                         "pos": "[v5k,vt]",
-                       },
-                       {
-                         "field": "{comp}",
-                         "gloss": "to open (a file, etc.)",
-                         "pos": "[v5k,vt]",
-                       },
-                       {
-                         "field": "{math}",
-                         "gloss": "to extract (root); to reduce (equation)",
-                         "pos": "[v5k,vt]",
-                       },
-                       {
-                         "field": "{food}",
-                         "gloss": "to cut open (fish)",
-                         "info": "as È≠ö„ÇíÈñã„Åè",
-                         "pos": "[v5k,vt]",
-                       },
-                       {
-                         "gloss": "to change (kanji into hiragana)",
-                         "pos": "[v5k,vt]",
-                       },
-                       {
-                         "gloss": "to flare (e.g. skirt)",
-                         "pos": "[v5k,vi]",
-                       },
-                       {
-                         "field": "{sports}",
-                         "gloss": "to slacken (into a poor posture)",
-                         "info": "as ‰Ωì„ÅåÈñã„Åè, ËÇ©„ÅåÈñã„Åè, etc.",
-                         "pos": "[v5k,vi]",
-                       },
-                     ],
-                     "prop": [
-                       {
-                         "pos": "v5k",
-                         "type": "Imperative",
-                       },
-                     ],
-                     "reading": "Èñã„Åè „Äê„Å≤„Çâ„Åè„Äë",
-                     "readok": true,
-                   },
                  ],
                  "gloss": [
                    {
                      "gloss": "beginning; start",
                      "pos": "[n]",
@@ -314,11 +239,11 @@
                      "pos": "[n]",
                    },
                  ],
                  "kana": "„Å≤„Çâ„Åë",
                  "reading": "Èñã„Åë „Äê„Å≤„Çâ„Åë„Äë",
-                 "score": 96,
+                 "score": 128,
                  "seq": 2810010,
                  "text": "Èñã„Åë",
                },
                {
                  "conj": [
@@ -439,11 +364,104 @@
                    },
                  ],
                  "kana": "„ÅÇ„Åë",
                  "reading": "Èñã„Åë „Äê„ÅÇ„Åë„Äë",
                  "score": 112,
-                 "seq": 10314756,
+                 "seq": 25599722,
+                 "text": "Èñã„Åë",
+               },
+               {
+                 "conj": [
+                   {
+                     "gloss": [
+                       {
+                         "gloss": "to open; to undo; to unseal; to unpack",
+                         "pos": "[v5k,vi,vt]",
+                       },
+                       {
+                         "gloss": "to bloom; to unfold; to spread out",
+                         "pos": "[v5k,vi,vt]",
+                       },
+                       {
+                         "gloss": "to open (for business, e.g. in the morning)",
+                         "pos": "[v5k,vi,vt]",
+                       },
+                       {
+                         "gloss": "to be wide (gap, etc.); to widen",
+                         "pos": "[v5k,vi,vt]",
+                       },
+                       {
+                         "gloss": "to hold (meeting, party, etc.); to give; to open",
+                         "pos": "[v5k,vt]",
+                       },
+                       {
+                         "gloss": "to found (nation, dynasty, sect, etc.); to open (a new business); to set up; to establish; to start",
+                         "pos": "[v5k,vt]",
+                       },
+                       {
+                         "gloss": "to open (ports, borders, etc.)",
+                         "pos": "[v5k,vt]",
+                       },
+                       {
+                         "gloss": "to open (an account)",
+                         "pos": "[v5k,vt]",
+                       },
+                       {
+                         "gloss": "to open up (new land, path, etc.); to clear; to develop",
+                         "pos": "[v5k,vt]",
+                       },
+                       {
+                         "field": "{comp}",
+                         "gloss": "to open (a file, etc.)",
+                         "pos": "[v5k,vt]",
+                       },
+                       {
+                         "field": "{math}",
+                         "gloss": "to extract (root); to reduce (equation)",
+                         "pos": "[v5k,vt]",
+                       },
+                       {
+                         "field": "{food}",
+                         "gloss": "to cut open (fish)",
+                         "info": "as È≠ö„ÇíÈñã„Åè",
+                         "pos": "[v5k,vt]",
+                       },
+                       {
+                         "gloss": "to change (kanji into hiragana)",
+                         "pos": "[v5k,vt]",
+                       },
+                       {
+                         "gloss": "to flare (e.g. skirt)",
+                         "pos": "[v5k,vi]",
+                       },
+                       {
+                         "field": "{sports}",
+                         "gloss": "to slacken (into a poor posture)",
+                         "info": "as ‰Ωì„ÅåÈñã„Åè, ËÇ©„ÅåÈñã„Åè, etc.",
+                         "pos": "[v5k,vi]",
+                       },
+                       {
+                         "field": "{go}",
+                         "gloss": "to extend",
+                         "info": "usu. „Éí„É©„Åè",
+                         "pos": "[v5k,vi]",
+                       },
+                     ],
+                     "prop": [
+                       {
+                         "pos": "v5k",
+                         "type": "Imperative",
+                       },
+                     ],
+                     "reading": "Èñã„Åè „Äê„Å≤„Çâ„Åè„Äë",
+                     "readok": true,
+                   },
+                 ],
+                 "kana": "„Å≤„Çâ„Åë",
+                 "reading": "Èñã„Åë „Äê„Å≤„Çâ„Åë„Äë",
+                 "score": 112,
+                 "seq": 25748976,
                  "text": "Èñã„Åë",
                },
              ],
            },
            [],
@@ -642,10 +660,10 @@
              "text": "„ÇÄ„Åö„ÅÑ",
            },
            [],
          ],
        ],
-       2202,
+       2218,
      ],
    ],
    ". ",
  ]

- Expected  - 88
+ Received  + 105

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Ç≥„É≥„Éì„Éã„ÅÆ„Åä„Å´„Åé„Çä„Å´Êõ∏„ÅÑ„Å¶„ÅÇ„ÇãÈñã„ÅëÊñπ„Åå‰∏ÄÁï™„ÇÄ„Åö„ÅÑ„ÄÇ" (limit: 1) [112.94ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -87,11 +87,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -99,20 +99,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 5
+ Received  + 7

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ê¥óÊøØÁâ©„Åã„ÇâÊó•ÊõúÊó•„ÅÆÂåÇ„ÅÑ„Åå„Åô„ÇãÊúàÊõúÊó•„ÅØÊÆãÈÖ∑„Å†„ÄÇ" (limit: 1) [68.33ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -83,11 +85,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -95,20 +97,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -327,11 +331,11 @@
                },
              ],
              "kana": "„Åò„ÇÉ„Å™„ÅÑ",
              "reading": "„Åò„ÇÉ„Å™„ÅÑ",
              "score": 144,
-             "seq": 10019552,
+             "seq": 25295465,
              "text": "„Åò„ÇÉ„Å™„ÅÑ",
            },
            [],
          ],
        ],

- Expected  - 11
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ë∑ØÂú∞Ë£è„ÅÆÂñ´Ëå∂Â∫ó„ÅÆÁúãÊùøÁå´„ÅØÂñ∂Ê•≠ÊôÇÈñì„Å´Ê≠£Á¢∫„Åò„ÇÉ„Å™„ÅÑ„ÄÇ" (limit: 1) [90.08ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -133,11 +133,11 @@
                },
              ],
              "kana": "„Åô„Åé„Å¶",
              "reading": "ÈÅé„Åé„Å¶ „Äê„Åô„Åé„Å¶„Äë",
              "score": 336,
-             "seq": 10639364,
+             "seq": 25935047,
              "text": "ÈÅé„Åé„Å¶",
            },
            [],
          ],
          [
@@ -286,30 +286,30 @@
                  "conj": [],
                  "gloss": [
                    {
                      "gloss": "cannot help (feeling); unbearably; awfully; irresistibly",
                      "info": "as ...„Å¶„Å™„Çâ„Å™„ÅÑ",
-                     "pos": "[exp,adj-i]",
+                     "pos": "[exp]",
                    },
                    {
                      "gloss": "must not ...; should not ...",
                      "info": "as ...„Å¶„ÅØ„Å™„Çâ„Å™„ÅÑ",
-                     "pos": "[exp,adj-i]",
+                     "pos": "[exp]",
                    },
                    {
                      "gloss": "must ...; have to ...; ought to ...",
                      "info": "as ...„Å™„Åè„Å¶„ÅØ„Å™„Çâ„Å™„ÅÑ, ...„Å™„Åë„Çå„Å∞„Å™„Çâ„Å™„ÅÑ, ...„Å≠„Å∞„Å™„Çâ„Å™„ÅÑ, etc.",
-                     "pos": "[exp,adj-i]",
+                     "pos": "[exp]",
                    },
                    {
                      "gloss": "cannot; unable to",
-                     "pos": "[exp,adj-i]",
+                     "pos": "[exp]",
                    },
                    {
                      "gloss": "not",
                      "info": "as ...„Åß„ÅØ„Å™„Çâ„Å™„ÅÑ",
-                     "pos": "[exp,adj-i]",
+                     "pos": "[exp]",
                    },
                  ],
                  "kana": "„Å™„Çâ„Å™„ÅÑ",
                  "reading": "„Å™„Çâ„Å™„ÅÑ",
                  "score": 336,
@@ -362,11 +362,11 @@
                          "gloss": "to be promoted",
                          "pos": "[v5r,vi]",
                        },
                        {
                          "gloss": "to do ...",
-                         "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                         "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                          "pos": "[aux-v,v5r]",
                        },
                      ],
                      "prop": [
                        {
@@ -380,11 +380,11 @@
                    },
                  ],
                  "kana": "„Å™„Çâ„Å™„ÅÑ",
                  "reading": "„Å™„Çâ„Å™„ÅÑ",
                  "score": 336,
-                 "seq": 10371747,
+                 "seq": 25658479,
                  "text": "„Å™„Çâ„Å™„ÅÑ",
                },
              ],
            },
            [],

- Expected  - 8
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Á∑†Âàá„ÅåÈÅé„Åé„Å¶„Åã„ÇâÂßã„Åæ„ÇãÂâµ‰ΩúÊÑèÊ¨≤„ÅØ‰ø°Áî®„Å™„Çâ„Å™„ÅÑ„ÄÇ" (limit: 1) [126.88ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -100,11 +102,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -112,20 +114,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -254,11 +258,11 @@
                    },
                  ],
                  "kana": "„ÇÅ„Çì„Åó„Å¶",
                  "reading": "Èù¢„Åó„Å¶ „Äê„ÇÅ„Çì„Åó„Å¶„Äë",
                  "score": 0,
-                 "seq": 10452023,
+                 "seq": 25740834,
                  "text": "Èù¢„Åó„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„Åè„Çã",

- Expected  - 11
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„É°„É¢„ÅÆ„ÅØ„Åö„ÅÆËêΩÊõ∏„Åç„Åå‰ΩúÂìÅÈù¢„Åó„Å¶„Åè„Çã„ÄÇ" (limit: 1) [130.31ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -104,11 +106,11 @@
              "text": "„ÅØ",
            },
            [],
          ],
          [
-           "kokoro/shin",
+           "shin/kokoro",
            {
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
@@ -172,11 +174,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -184,20 +186,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 11
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ê∫ÄÂì°ÈõªËªä„ÅÆÂí≥Êâï„ÅÑ„ÅØÂøÉ„ÅÆË∑ùÈõ¢„ÇíÊ∏¨„Çã„É°„Éà„É≠„Éé„Éº„É†„Å†„ÄÇ" (limit: 1) [43.09ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -193,11 +193,11 @@
                    },
                  ],
                  "kana": "„Åó",
                  "reading": "„Åó",
                  "score": 0,
-                 "seq": 10150906,
+                 "seq": 25430338,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó",
                },
              ],
              "compound": [
@@ -255,11 +255,11 @@
                },
              ],
              "kana": "„Åô„Åé„Å¶",
              "reading": "„Åô„Åé„Å¶",
              "score": 90,
-             "seq": 10639364,
+             "seq": 25935047,
              "text": "„Åô„Åé„Å¶",
            },
            [],
          ],
          [
@@ -285,11 +285,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -297,20 +297,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -427,11 +429,11 @@
                    },
                  ],
                  "kana": "„Çà„Çä",
                  "reading": "„Çà„Çä",
                  "score": 40,
-                 "seq": 10351921,
+                 "seq": 25638048,
                  "text": "„Çà„Çä",
                },
              ],
            },
            [],
@@ -460,11 +462,11 @@
                    },
                  ],
                  "kana": "„ÇÅ„Å†„Å£„Å¶",
                  "reading": "ÁõÆÁ´ã„Å£„Å¶ „Äê„ÇÅ„Å†„Å£„Å¶„Äë",
                  "score": 0,
-                 "seq": 10549787,
+                 "seq": 25842269,
                  "text": "ÁõÆÁ´ã„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -476,13 +478,18 @@
                        {
                          "gloss": "to stay",
                          "pos": "[v1,vi]",
                        },
                        {
-                         "gloss": "to be ...-ing; to have been ...-ing",
-                         "info": "after the -te form of a verb; indicates continuing action or state",
-                         "pos": "[v1,aux-v]",
+                         "gloss": "to be ...-ing",
+                         "info": "after the -te form of a verb; indicates continuing action",
+                         "pos": "[aux-v,v1]",
+                       },
+                       {
+                         "gloss": "to have ...-ed; to be ...-ed",
+                         "info": "after the -te form of a verb; indicates continuing state",
+                         "pos": "[aux-v,v1]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v1",
@@ -494,11 +501,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Åü",
                  "reading": "„ÅÑ„Åü",
                  "score": 0,
-                 "seq": 10547537,
+                 "seq": 25839474,
                  "suffix": "indicates continuing action (to be ...ing)",
                  "text": "„ÅÑ„Åü",
                },
              ],
              "compound": [

- Expected  - 13
+ Received  + 20

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÂØùÁôñ„Åå‰∏ªÂºµ„Åó„Åô„Åé„Å¶‰ºöË≠∞„ÅÆË≠∞‰∫ãÈå≤„Çà„ÇäÁõÆÁ´ã„Å£„Å¶„ÅÑ„Åü„ÄÇ" (limit: 1) [153.26ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -242,11 +242,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -377,11 +384,11 @@
                },
              ],
              "kana": "„Åæ„Åë„Åü",
              "reading": "Ë≤†„Åë„Åü „Äê„Åæ„Åë„Åü„Äë",
              "score": 336,
-             "seq": 10513466,
+             "seq": 25804697,
              "text": "Ë≤†„Åë„Åü",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Èõ®Á≤í„ÅåÁ™ì„ÇíËµ∞„ÇãÁ´∂‰∫â„ÅßË≥≠„Åë„Å´Ë≤†„Åë„Åü„ÄÇ" (limit: 1) [38.15ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -26,11 +26,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -38,20 +38,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -70,11 +72,11 @@
              "text": "„Éî„ÉÉ„Å®„ÅÑ„ÅÜ",
            },
            [],
          ],
          [
-           "oto/on/ne",
+           "oto/ne/on",
            {
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
@@ -220,11 +222,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -232,20 +234,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -370,11 +374,11 @@
                  "gloss": "to be promoted",
                  "pos": "[v5r,vi]",
                },
                {
                  "gloss": "to do ...",
-                 "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                 "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                  "pos": "[aux-v,v5r]",
                },
              ],
              "kana": "„Å™„Çã",
              "reading": "„Å™„Çã",
@@ -390,11 +394,11 @@
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
                    {
-                     "gloss": "house; residence; dwelling",
+                     "gloss": "house; residence; dwelling; home",
                      "pos": "[n]",
                    },
                    {
                      "gloss": "family; household",
                      "pos": "[n]",

- Expected  - 13
+ Received  + 17

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈõªÂ≠ê„É¨„É≥„Ç∏„ÅÆ„Éî„ÉÉ„Å®„ÅÑ„ÅÜÈü≥„ÅåÂ§ïÈ£Ø„ÅÆÂêàÂõ≥„Å´„Å™„ÇãÂÆ∂„ÅØ„ÇÑ„Åï„Åó„ÅÑ„ÄÇ" (limit: 1) [167.42ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -136,11 +138,11 @@
              "text": "„Åå",
            },
            [],
          ],
          [
-           "aku/hiraku",
+           "hiraku/aku",
            {
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
@@ -208,11 +210,16 @@
                      "field": "{sports}",
                      "gloss": "to slacken (into a poor posture)",
                      "info": "as ‰Ωì„ÅåÈñã„Åè, ËÇ©„ÅåÈñã„Åè, etc.",
                      "pos": "[v5k,vi]",
                    },
+                   {
+                     "field": "{go}",
+                     "gloss": "to extend",
+                     "info": "usu. „Éí„É©„Åè",
+                     "pos": "[v5k,vi]",
+                   },
                  ],
                  "kana": "„Å≤„Çâ„Åè",
                  "reading": "Èñã„Åè „Äê„Å≤„Çâ„Åè„Äë",
                  "score": 128,
                  "seq": 1202440,
@@ -275,11 +282,11 @@
              ],
            },
            [],
          ],
          [
-           "oto/on/ne",
+           "oto/ne/on",
            {
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
@@ -378,11 +385,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,

- Expected  - 7
+ Received  + 23

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ê∑±Â§ú„ÅÆÂÜ∑ËîµÂ∫´„ÅåÈñã„ÅèÈü≥„ÅßÁå´„ÅåÈõÜÂêà„Åô„Çã„ÄÇ" (limit: 1) [45.65ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -307,11 +309,11 @@
                  "gloss": "to be promoted",
                  "pos": "[v5r,vi]",
                },
                {
                  "gloss": "to do ...",
-                 "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                 "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                  "pos": "[aux-v,v5r]",
                },
              ],
              "kana": "„Å™„Çã",
              "reading": "„Å™„Çã",

- Expected  - 6
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ëä±Á≤âÁóá„ÅÆÂ≠£ÁØÄ„Å†„Åë‰∏ñÁïå„Åå‰ΩéËß£ÂÉèÂ∫¶„Å´„Å™„Çã„ÄÇ" (limit: 1) [50.09ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -100,11 +100,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -163,11 +170,11 @@
                },
              ],
              "kana": "„Åã„Çè„Çå„Å™„ÅÑ",
              "reading": "Â§â„Çè„Çå„Å™„ÅÑ „Äê„Åã„Çè„Çå„Å™„ÅÑ„Äë",
              "score": 1380,
-             "seq": 10528023,
+             "seq": 25819796,
              "text": "Â§â„Çè„Çå„Å™„ÅÑ",
            },
            [],
          ],
          [
@@ -300,11 +307,16 @@
                      "gloss": "to be equipped with",
                      "pos": "[v5r-i,vi]",
                    },
                    {
                      "gloss": "to happen; to come about",
-                     "pos": "[vi,v5r-i]",
+                     "pos": "[v5r-i,vi]",
+                   },
+                   {
+                     "gloss": "to exist (in a completed state); to be (something unchanged in its current state)",
+                     "info": "after the ÔΩû„Å¶ form of a transitive verb",
+                     "pos": "[aux-v,v5r-i]",
                    },
                  ],
                  "kana": "„ÅÇ„Çã",
                  "reading": "„ÅÇ„Çã",
                  "score": 40,

- Expected  - 2
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈõªÊ∫ê„Éú„Çø„É≥Èï∑Êäº„Åó„Åß„Åó„ÅãÂ§â„Çè„Çå„Å™„ÅÑÊó•„ÇÇ„ÅÇ„Çã„ÄÇ" (limit: 1) [109.74ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -33,11 +33,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -45,20 +45,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -91,11 +93,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -103,20 +105,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -184,11 +188,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -219,11 +230,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -231,20 +242,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -344,11 +357,11 @@
                },
              ],
              "kana": "„Åã„Çì„Åò„Åü",
              "reading": "ÊÑü„Åò„Åü „Äê„Åã„Çì„Åò„Åü„Äë",
              "score": 336,
-             "seq": 10562087,
+             "seq": 25855252,
              "text": "ÊÑü„Åò„Åü",
            },
            [],
          ],
        ],

- Expected  - 16
+ Received  + 30

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈßÖ„ÅÆÈöéÊÆµ„ÅÆÈÄî‰∏≠„Åß‰∫∫Áîü„ÅÆÊÆµÂ∑Æ„ÇíÊÑü„Åò„Åü„ÄÇ" (limit: 1) [35.75ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -221,11 +223,11 @@
                        },
                      ],
                      "kana": "„Åø",
                      "reading": "„Åø",
                      "score": 0,
-                     "seq": 10312464,
+                     "seq": 25597363,
                      "text": "„Åø",
                    },
                    {
                      "conj": [],
                      "kana": "„Åü„ÅÑ",
@@ -360,11 +362,11 @@
                  "gloss": "to be promoted",
                  "pos": "[v5r,vi]",
                },
                {
                  "gloss": "to do ...",
-                 "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                 "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                  "pos": "[aux-v,v5r]",
                },
              ],
              "kana": "„Å™„Çã",
              "reading": "„Å™„Çã",

- Expected  - 7
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ËæûÊõ∏„Ç¢„Éó„É™„ÅÆ‰æãÊñá„Åå„Åü„Åæ„Å´‰∫∫ÁîüÁõ∏Ë´á„Åø„Åü„ÅÑ„Å´„Å™„Çã„ÄÇ" (limit: 1) [83.76ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -131,11 +131,11 @@
                },
              ],
              "kana": "„Åä„Å®„Åó„Åü",
              "reading": "ËêΩ„Å®„Åó„Åü „Äê„Åä„Å®„Åó„Åü„Äë",
              "score": 840,
-             "seq": 10056261,
+             "seq": 25333389,
              "text": "ËêΩ„Å®„Åó„Åü",
            },
            [],
          ],
          [
@@ -256,11 +256,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -268,20 +268,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -409,11 +411,11 @@
                },
              ],
              "kana": "„Åó„ÅÇ„Åå„Å£„Åü",
              "reading": "‰ªï‰∏ä„Åå„Å£„Åü „Äê„Åó„ÅÇ„Åå„Å£„Åü„Äë",
              "score": 1035,
-             "seq": 10291988,
+             "seq": 25576139,
              "text": "‰ªï‰∏ä„Åå„Å£„Åü",
            },
            [],
          ],
        ],

- Expected  - 7
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Âë≥ÂôåÊ±Å„Å´ËêΩ„Å®„Åó„ÅüÂçµ„ÅåÊ≤àÈªô„ÅÆ„Åæ„ÅæÂÆåÁíß„Å´‰ªï‰∏ä„Åå„Å£„Åü„ÄÇ" (limit: 1) [139.71ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -29,11 +29,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -41,20 +41,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -68,11 +70,11 @@
            "puranta",
            {
              "conj": [],
              "gloss": [
                {
-                 "gloss": "planter",
+                 "gloss": "planter (container)",
                  "pos": "[n]",
                },
              ],
              "kana": "„Éó„É©„É≥„Çø„Éº",
              "reading": "„Éó„É©„É≥„Çø„Éº",

- Expected  - 6
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Éô„É©„É≥„ÉÄ„ÅÆ„Éó„É©„É≥„Çø„Éº„Å†„Åë„ÅåÂ≠£ÁØÄ„Å´Ê≠£Áõ¥„Å†„ÄÇ" (limit: 1) [29.48ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -113,11 +115,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,

- Expected  - 5
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÂøòÂπ¥‰ºö„ÅÆ‰∏ÄÊ¨°‰ºö„ÅßÂ∏∞„ÇãÂãáÊ∞ó„ÅåÊ¨≤„Åó„ÅÑ„ÄÇ" (limit: 1) [53.42ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -180,11 +182,11 @@
                },
              ],
              "kana": "„Å®„Çå„Åü",
              "reading": "Âèñ„Çå„Åü „Äê„Å®„Çå„Åü„Äë",
              "score": 336,
-             "seq": 10514511,
+             "seq": 25805897,
              "text": "Âèñ„Çå„Åü",
            },
            [],
          ],
          [
@@ -228,11 +230,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -240,20 +242,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -332,11 +336,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -344,20 +348,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -438,11 +444,11 @@
                    },
                  ],
                  "kana": "„Åß„ÇÇ„Å™„ÅÑ",
                  "reading": "„Åß„ÇÇ„Å™„ÅÑ",
                  "score": 336,
-                 "seq": 10164821,
+                 "seq": 25445371,
                  "text": "„Åß„ÇÇ„Å™„ÅÑ",
                },
              ],
            },
            [],

- Expected  - 17
+ Received  + 23

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Á©∫„ÅçÁº∂„ÅÆ„Éó„É´„Çø„Éñ„ÅåÂèñ„Çå„ÅüÊôÇ„ÅÆÁêÜ‰∏çÂ∞Ω„ÅØË™∞„ÅÆË≤¨‰ªª„Åß„ÇÇ„Å™„ÅÑ„ÄÇ" (limit: 1) [83.12ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -116,11 +116,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -128,20 +128,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 5
+ Received  + 7

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„É™„É¢„Ç≥„É≥„ÇíÊé¢„Åô„Åü„ÇÅ„ÅÆ„É™„É¢„Ç≥„É≥„ÅåÊ¨≤„Åó„ÅÑ„ÄÇ" (limit: 1) [57.74ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -249,11 +251,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -261,20 +263,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -288,11 +292,11 @@
            "koyubi",
            {
              "conj": [],
              "gloss": [
                {
-                 "gloss": "little finger; pinky",
+                 "gloss": "little finger; pinky; fourth (occ. fifth) finger",
                  "pos": "[n]",
                },
                {
                  "gloss": "little toe",
                  "pos": "[n]",
@@ -442,11 +446,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -454,20 +458,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 16
+ Received  + 22

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Êú∫„ÅÆËßí„Å´Ë∂≥„ÅÆÂ∞èÊåá„Çí„Å∂„Å§„Åë„ÇãÁ¢∫Áéá„ÅØÂÆáÂÆô„ÅÆÊÇ™ÊÑè„Å†„ÄÇ" (limit: 1) [113.00ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -238,11 +240,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -250,20 +252,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -308,14 +312,11 @@
                  "pos": "[n]",
                },
                {
                  "field": "{hanaf}",
                  "gloss": "red 5-point card",
-                 "pos": "[n]",
-               },
-               {
-                 "gloss": "Aka (village), Fukuoka Prefecture",
                  "pos": "[n]",
                },
              ],
              "kana": "„ÅÇ„Åã",
              "reading": "Ëµ§ „Äê„ÅÇ„Åã„Äë",
@@ -414,11 +415,11 @@
                    },
                  ],
                  "kana": "„Çà„Çä",
                  "reading": "„Çà„Çä",
                  "score": 40,
-                 "seq": 10351921,
+                 "seq": 25638048,
                  "text": "„Çà„Çä",
                },
              ],
            },
            [],

- Expected  - 15
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÂÖ¨ÂÖ±ÊñôÈáë„ÅÆÂºï„ÅçËêΩ„Å®„ÅóÊó•„Åå„Ç´„É¨„É≥„ÉÄ„Éº„ÅÆËµ§„Çà„ÇäËµ§„ÅÑ„ÄÇ" (limit: 1) [66.50ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -150,11 +150,11 @@
                              "info": "as ...„Åì„Å®„Åå„Å™„ÅÑ, etc.; indicates negation, inexperience, unnecessariness or impossibility",
                              "pos": "[adj-i]",
                            },
                            {
                              "gloss": "not",
-                             "info": "after the ren'y≈çkei form of an adjective",
+                             "info": "after the conjunctive form of an adjective",
                              "pos": "[adj-i,aux-adj]",
                            },
                            {
                              "gloss": "to not be; to have not",
                              "info": "after the -te form of a verb",
@@ -172,11 +172,11 @@
                        },
                      ],
                      "kana": "„Å™„Åè",
                      "reading": "ÁÑ°„Åè „Äê„Å™„Åè„Äë",
                      "score": 0,
-                     "seq": 10643730,
+                     "seq": 25939457,
                      "text": "ÁÑ°„Åè",
                    },
                    {
                      "conj": [],
                      "kana": "„Å™„Çã",

- Expected  - 2
+ Received  + 2

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Éì„Éã„Éº„É´ÂÇò„ÅØÈÄèÊòé„Å†„Åã„Çâ„Åô„Åê„Å´ÁÑ°„Åè„Å™„Çã„ÄÇ" (limit: 1) [125.63ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -231,11 +233,11 @@
                    },
                  ],
                  "kana": "„Åø„Å°„Å¶",
                  "reading": "Ê∫Ä„Å°„Å¶ „Äê„Åø„Å°„Å¶„Äë",
                  "score": 0,
-                 "seq": 10304898,
+                 "seq": 25589529,
                  "text": "Ê∫Ä„Å°„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÅÑ„Çã",

- Expected  - 6
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ë¶≥ËëâÊ§çÁâ©„ÅÆÊñ∞ËäΩ„Å†„Åë„ÅØ„ÇÑ„ÇãÊ∞ó„Å´Ê∫Ä„Å°„Å¶„ÅÑ„Çã„ÄÇ" (limit: 1) [67.77ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -71,11 +71,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -83,20 +83,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -224,11 +226,11 @@
                },
              ],
              "kana": "„Åä„Çè„Å£„Åü„Çâ",
              "reading": "ÁµÇ„Çè„Å£„Åü„Çâ „Äê„Åä„Çè„Å£„Åü„Çâ„Äë",
              "score": 840,
-             "seq": 10046031,
+             "seq": 25322909,
              "text": "ÁµÇ„Çè„Å£„Åü„Çâ",
            },
            [],
          ],
          [
@@ -325,11 +327,11 @@
                },
              ],
              "kana": "„Çè„Åô„Çå",
              "reading": "Âøò„Çå „Äê„Çè„Åô„Çå„Äë",
              "score": 72,
-             "seq": 10524515,
+             "seq": 25816388,
              "text": "Âøò„Çå",
            },
            [],
          ],
          [

- Expected  - 7
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈÄöÂã§Ë∑Ø„ÅÆÂ∑•‰∫ã„ÅåÁµÇ„Çè„Å£„Åü„ÇâÂ∏∞„ÇäÈÅì„ÇíÂøò„Çå„Åù„ÅÜ„Å´„Å™„Å£„Åü„ÄÇ" (limit: 1) [116.93ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -83,11 +85,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -95,20 +97,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -211,11 +215,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,

- Expected  - 10
+ Received  + 22

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Êñ∞Âàä„ÅÆÁ¥ô„ÅÆÂåÇ„ÅÑ„ÅßÁèæÂÆü„Åã„ÇâÈõ¢Èô∏„Åß„Åç„Çã„ÄÇ" (limit: 1) [77.29ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -229,11 +229,11 @@
                    },
                  ],
                  "kana": "„Åã„Åë„Å¶",
                  "reading": "„Åã„Åë„Å¶",
                  "score": 0,
-                 "seq": 10661632,
+                 "seq": 25958182,
                  "text": "„Åã„Åë„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÇÇ",
@@ -278,11 +278,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -290,20 +290,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -510,11 +512,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -523,11 +532,29 @@
            [],
          ],
          [
            "katsu",
            {
-             "conj": [],
+             "conj": [
+               {
+                 "gloss": [
+                   {
+                     "gloss": "to win",
+                     "info": "usu. as „Åì„Çå„ÅßÔΩû; rarely conjugates",
+                     "pos": "[v1,v5r,vi]",
+                   },
+                 ],
+                 "prop": [
+                   {
+                     "pos": "v1",
+                     "type": "Continuative (~i)",
+                   },
+                 ],
+                 "reading": "Âãù„Å§„Çã „Äê„Åã„Å§„Çã„Äë",
+                 "readok": true,
+               },
+             ],
              "gloss": [
                {
                  "gloss": "to win; to gain victory",
                  "pos": "[vi,v5t]",
                },

- Expected  - 7
+ Received  + 35

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÁõÆË¶ö„Åæ„Åó„Çí‰∏â„Å§„Åã„Åë„Å¶„ÇÇÂ§¢„ÅÆÊñπ„ÅåÈü≥Èáè„ÅßÂãù„Å§„ÄÇ" (limit: 1) [155.94ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -65,11 +65,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -77,20 +77,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -186,11 +188,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -198,20 +200,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -312,11 +316,11 @@
                },
              ],
              "kana": "„Åã„Å¶„Å™„ÅÑ",
              "reading": "Âãù„Å¶„Å™„ÅÑ „Äê„Åã„Å¶„Å™„ÅÑ„Äë",
              "score": 840,
-             "seq": 10313478,
+             "seq": 25598356,
              "text": "Âãù„Å¶„Å™„ÅÑ",
            },
            [],
          ],
        ],

- Expected  - 11
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÂçàÂâç‰∫åÊôÇ„ÅÆ„Éù„Ç®„É†„ÅØÂçàÂâç‰πùÊôÇ„ÅÆÁèæÂÆü„Å´Âãù„Å¶„Å™„ÅÑ„ÄÇ" (limit: 1) [47.99ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -69,11 +69,11 @@
            "kappumen",
            {
              "conj": [],
              "gloss": [
                {
+                 "field": "{food}",
                  "gloss": "instant noodles sold in a cup; cup noodles",
                  "pos": "[n]",
                },
              ],
              "kana": "„Ç´„ÉÉ„Éó„ÇÅ„Çì",
@@ -89,11 +89,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -101,20 +101,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 5
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "‰∏âÂàÜÂæÖ„Å§„Ç´„ÉÉ„ÉóÈ∫∫„ÅÆ‰∫åÂàÜÁõÆ„Åå‰∏ÄÁï™Âº±„ÅÑ„ÄÇ" (limit: 1) [37.73ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -257,11 +257,16 @@
                              "field": "{sports}",
                              "gloss": "to slacken (into a poor posture)",
                              "info": "as ‰Ωì„ÅåÈñã„Åè, ËÇ©„ÅåÈñã„Åè, etc.",
                              "pos": "[v5k,vi]",
                            },
+                           {
+                             "field": "{go}",
+                             "gloss": "to extend",
+                             "info": "usu. „Éí„É©„Åè",
+                             "pos": "[v5k,vi]",
+                           },
                          ],
                          "prop": [
                            {
                              "pos": "v5k",
                              "type": "Conjunctive (~te)",
@@ -272,11 +277,11 @@
                        },
                      ],
                      "kana": "„Å≤„Çâ„ÅÑ„Å¶",
                      "reading": "Èñã„ÅÑ„Å¶ „Äê„Å≤„Çâ„ÅÑ„Å¶„Äë",
                      "score": 0,
-                     "seq": 10459686,
+                     "seq": 25748944,
                      "text": "Èñã„ÅÑ„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„ÅÑ„Çã",
@@ -358,11 +363,11 @@
                        },
                      ],
                      "kana": "„ÅÇ„ÅÑ„Å¶",
                      "reading": "Èñã„ÅÑ„Å¶ „Äê„ÅÇ„ÅÑ„Å¶„Äë",
                      "score": 0,
-                     "seq": 10314725,
+                     "seq": 25599682,
                      "text": "Èñã„ÅÑ„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„ÅÑ„Çã",

- Expected  - 2
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Á™ìÈöõ„ÅÆÂ∏≠„Å†„Åë„Åå‰∏ñÁïå„Å´Èñã„ÅÑ„Å¶„ÅÑ„Çã„ÄÇ" (limit: 1) [48.72ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -30,11 +30,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -42,20 +42,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -178,11 +180,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -190,20 +192,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -392,11 +396,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -404,20 +408,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 15
+ Received  + 21

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈÄöÁü•„ÅÆÊï∞Â≠ó„Åå„Çº„É≠„ÅÆÊôÇ„Å†„ÅëËÉ∏„Åå„Åñ„Çè„Å§„Åè„ÅÆ„ÅØ„Å™„Åú„Å†„ÄÇ" (limit: 1) [78.45ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -362,11 +362,11 @@
                    },
                  ],
                  "kana": "„Åª„Å©„Åë„Å¶",
                  "reading": "„Åª„Å©„Åë„Å¶",
                  "score": 0,
-                 "seq": 10220850,
+                 "seq": 25502995,
                  "text": "„Åª„Å©„Åë„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÅÑ„Çã",

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Èù¥„Å≤„ÇÇ„Åå„Åª„Å©„Åë„ÇãÊó•„ÅØ„Å†„ÅÑ„Åü„ÅÑÈõÜ‰∏≠„ÇÇ„Åª„Å©„Åë„Å¶„ÅÑ„Çã„ÄÇ" (limit: 1) [196.15ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -271,11 +273,14 @@
                        {
                          "gloss": "to do inattentively; to do without concentrating; to put little effort into doing",
                          "info": "after the -masu stem of a verb",
                          "pos": "[suf,v5s]",
                        },
+                       {
+                         "gloss": "to cause a miscarriage; to abort",
+                         "pos": "[vt,v5s]",
+                       },
                      ],
                      "prop": [
                        {
                          "pos": "v5s",
                          "type": "Conjunctive (~te)",
@@ -286,11 +291,11 @@
                    },
                  ],
                  "kana": "„Å™„Åå„Åó„Å¶",
                  "reading": "ÊµÅ„Åó„Å¶ „Äê„Å™„Åå„Åó„Å¶„Äë",
                  "score": 0,
-                 "seq": 10641110,
+                 "seq": 25936705,
                  "text": "ÊµÅ„Åó„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÅÑ„Çã",
@@ -343,11 +348,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -355,20 +360,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 11
+ Received  + 19

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈßÖÂâç„ÅÆ„Éì„Ç∏„Éß„É≥„Å†„Åë„ÅåÊô¥Â§©„ÇíÊµÅ„Åó„Å¶„ÅÑ„ÇãÈõ®„ÅÆÊó•„ÄÇ" (limit: 1) [92.49ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -184,11 +184,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -201,15 +208,15 @@
            {
              "conj": [
                {
                  "gloss": [
                    {
-                     "gloss": "to finish; to end; to be completed",
+                     "gloss": "to finish; to end; to be completed; to be resolved",
                      "pos": "[v5m,vi]",
                    },
                    {
-                     "gloss": "to merely result in something less severe than expected",
+                     "gloss": "to have a result less severe than expected",
                      "pos": "[v5m,vi]",
                    },
                    {
                      "gloss": "to feel at ease",
                      "pos": "[v5m,vi]",
@@ -231,11 +238,11 @@
                },
              ],
              "kana": "„Åô„Çì„Å†",
              "reading": "Ê∏à„Çì„Å† „Äê„Åô„Çì„Å†„Äë",
              "score": 336,
-             "seq": 10591004,
+             "seq": 25884915,
              "text": "Ê∏à„Çì„Å†",
            },
            [],
          ],
          [

- Expected  - 3
+ Received  + 11

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "‰∏ÄÂè£„Å°„Çá„ÅÜ„Å†„ÅÑ„Åå‰∏ÄÂè£„ÅßÊ∏à„Çì„Å†„Åü„ÇÅ„Åó„Åå„Å™„ÅÑ„ÄÇ" (limit: 1) [107.37ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -37,11 +37,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -49,20 +49,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 5
+ Received  + 7

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Çπ„Éº„Éë„Éº„ÅÆBGM„ÅåÊáê„Åã„Åó„ÅÑ„Å®Ë≤°Â∏É„ÅåÁ∑©„ÇÄ„ÄÇ" (limit: 1) [96.49ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -83,11 +85,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -95,20 +97,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -203,11 +207,11 @@
            "f≈´ry≈ç",
            {
              "conj": [],
              "gloss": [
                {
-                 "gloss": "air flow; air volume",
+                 "gloss": "airflow; air flow; air volume",
                  "pos": "[n]",
                },
              ],
              "kana": "„Åµ„ÅÜ„Çä„Çá„ÅÜ",
              "reading": "È¢®Èáè „Äê„Åµ„ÅÜ„Çä„Çá„ÅÜ„Äë",

- Expected  - 11
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Ç®„Ç¢„Ç≥„É≥„ÅÆ„É™„É¢„Ç≥„É≥„ÅÆ„Å©„Çå„ÅåÈ¢®Èáè„ÅãÊØéÂõûÂøò„Çå„Çã„ÄÇ" (limit: 1) [32.06ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -213,11 +213,11 @@
                },
              ],
              "kana": "„ÅÜ„Çì„Å†",
              "reading": "Áî£„Çì„Å† „Äê„ÅÜ„Çì„Å†„Äë",
              "score": 216,
-             "seq": 10190866,
+             "seq": 25472011,
              "text": "Áî£„Çì„Å†",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Çø„Ç§„Éî„É≥„Ç∞„Éü„Çπ„ÅåÊñ∞„Åó„ÅÑË®ÄËëâ„ÇíÁî£„Çì„Å†„ÄÇ" (limit: 1) [71.86ms]
(pass) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ê≤àÈªô„Åå„ÅÜ„Çã„Åï„ÅÑ‰ºöË≠∞„Åª„Å©Èï∑„ÅÑ„ÄÇ" (limit: 1) [42.48ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -103,11 +103,11 @@
                },
              ],
              "kana": "„Åä„Çè„Å£„Åü",
              "reading": "ÁµÇ„Çè„Å£„Åü „Äê„Åä„Çè„Å£„Åü„Äë",
              "score": 336,
-             "seq": 10045991,
+             "seq": 25322824,
              "text": "ÁµÇ„Çè„Å£„Åü",
            },
            [],
          ],
          [
@@ -188,58 +188,92 @@
            [],
          ],
          [
            "suterarenai",
            {
-             "conj": [
+             "alternative": [
                {
-                 "gloss": [
+                 "conj": [
                    {
-                     "gloss": "to throw away; to cast away; to dump; to discard",
-                     "pos": "[v1,vt]",
-                   },
-                   {
-                     "gloss": "to abandon; to desert; to leave",
-                     "pos": "[v1,vt]",
-                   },
-                   {
-                     "gloss": "to give up; to resign",
-                     "pos": "[vt,v1]",
+                     "gloss": [
+                       {
+                         "gloss": "to throw away; to cast away; to dump; to discard",
+                         "pos": "[v1,vt]",
+                       },
+                       {
+                         "gloss": "to abandon; to desert; to leave",
+                         "pos": "[v1,vt]",
+                       },
+                       {
+                         "gloss": "to give up; to resign",
+                         "pos": "[vt,v1]",
+                       },
+                     ],
+                     "prop": [
+                       {
+                         "neg": true,
+                         "pos": "v1",
+                         "type": "Potential",
+                       },
+                     ],
+                     "reading": "Êç®„Å¶„Çã „Äê„Åô„Å¶„Çã„Äë",
+                     "readok": true,
                    },
                  ],
-                 "prop": [
+                 "kana": "„Åô„Å¶„Çâ„Çå„Å™„ÅÑ",
+                 "reading": "Êç®„Å¶„Çâ„Çå„Å™„ÅÑ „Äê„Åô„Å¶„Çâ„Çå„Å™„ÅÑ„Äë",
+                 "score": 1656,
+                 "seq": 25746492,
+                 "text": "Êç®„Å¶„Çâ„Çå„Å™„ÅÑ",
+               },
+               {
+                 "conj": [
                    {
-                     "neg": true,
-                     "pos": "v1",
-                     "type": "Potential",
-                   },
-                   {
-                     "neg": true,
-                     "pos": "v1",
-                     "type": "Passive",
+                     "gloss": [
+                       {
+                         "gloss": "to throw away; to cast away; to dump; to discard",
+                         "pos": "[v1,vt]",
+                       },
+                       {
+                         "gloss": "to abandon; to desert; to leave",
+                         "pos": "[v1,vt]",
+                       },
+                       {
+                         "gloss": "to give up; to resign",
+                         "pos": "[vt,v1]",
+                       },
+                     ],
+                     "prop": [
+                       {
+                         "neg": true,
+                         "pos": "v1",
+                         "type": "Passive",
+                       },
+                     ],
+                     "reading": "Êç®„Å¶„Çã „Äê„Åô„Å¶„Çã„Äë",
+                     "readok": true,
                    },
                  ],
-                 "reading": "Êç®„Å¶„Çã „Äê„Åô„Å¶„Çã„Äë",
-                 "readok": true,
+                 "kana": "„Åô„Å¶„Çâ„Çå„Å™„ÅÑ",
+                 "reading": "Êç®„Å¶„Çâ„Çå„Å™„ÅÑ „Äê„Åô„Å¶„Çâ„Çå„Å™„ÅÑ„Äë",
+                 "score": 1656,
+                 "seq": 25746500,
+                 "text": "Êç®„Å¶„Çâ„Çå„Å™„ÅÑ",
                },
              ],
-             "kana": "„Åô„Å¶„Çâ„Çå„Å™„ÅÑ",
-             "reading": "Êç®„Å¶„Çâ„Çå„Å™„ÅÑ „Äê„Åô„Å¶„Çâ„Çå„Å™„ÅÑ„Äë",
-             "score": 1656,
-             "seq": 10457427,
-             "text": "Êç®„Å¶„Çâ„Çå„Å™„ÅÑ",
            },
            [],
          ],
          [
            "no",
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -247,20 +281,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -466,11 +502,11 @@
                    },
                  ],
                  "kana": "„Åæ„Åñ„Å£„Å¶",
                  "reading": "Ê∑∑„Åñ„Å£„Å¶ „Äê„Åæ„Åñ„Å£„Å¶„Äë",
                  "score": 0,
-                 "seq": 10454517,
+                 "seq": 25743882,
                  "text": "Ê∑∑„Åñ„Å£„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÅÑ„Çã",

- Expected  - 35
+ Received  + 70

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "‰Ωø„ÅÑÁµÇ„Çè„Å£„Åü„Éö„É≥„ÅåÊç®„Å¶„Çâ„Çå„Å™„ÅÑ„ÅÆ„ÅØÊÄù„ÅÑÂá∫„Åå„Ç§„É≥„ÇØ„Å´Ê∑∑„Åñ„Å£„Å¶„ÅÑ„Çã„Åã„Çâ„Å†„ÄÇ" (limit: 1) [238.20ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -190,11 +192,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -202,20 +204,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -338,11 +342,11 @@
                    },
                  ],
                  "kana": "„Åó„Å£„Å¶",
                  "reading": "Áü•„Å£„Å¶ „Äê„Åó„Å£„Å¶„Äë",
                  "score": 0,
-                 "seq": 10104974,
+                 "seq": 25383442,
                  "text": "Áü•„Å£„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÅÑ„Çã",

- Expected  - 11
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈõªÂ≠êÊ±∫Ê∏à„ÅÆÊÆãÈ´ò„Å†„Åë„ÅåÊú¨ÂΩì„ÅÆËá™ÂàÜ„ÇíÁü•„Å£„Å¶„ÅÑ„Çã„ÄÇ" (limit: 1) [89.40ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -71,11 +71,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -83,20 +83,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -220,11 +222,11 @@
                    },
                  ],
                  "kana": "„ÇÑ„Åï„Åó",
                  "reading": "ÂÑ™„Åó „Äê„ÇÑ„Åï„Åó„Äë",
                  "score": 0,
-                 "seq": 10022301,
+                 "seq": 25298301,
                  "text": "ÂÑ™„Åó",
                },
                {
                  "conj": [],
                  "kana": "„Åï",
@@ -329,11 +331,16 @@
                      "gloss": "to be equipped with",
                      "pos": "[v5r-i,vi]",
                    },
                    {
                      "gloss": "to happen; to come about",
-                     "pos": "[vi,v5r-i]",
+                     "pos": "[v5r-i,vi]",
+                   },
+                   {
+                     "gloss": "to exist (in a completed state); to be (something unchanged in its current state)",
+                     "info": "after the ÔΩû„Å¶ form of a transitive verb",
+                     "pos": "[aux-v,v5r-i]",
                    },
                  ],
                  "kana": "„ÅÇ„Çã",
                  "reading": "„ÅÇ„Çã",
                  "score": 40,

- Expected  - 7
+ Received  + 14

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Á´ã„Å°È£ü„ÅÑ„Åù„Å∞„ÅÆÊπØÊ∞ó„Å´„Å†„ÅëÂÑ™„Åó„Åï„Åå„ÅÇ„Çã„ÄÇ" (limit: 1) [103.85ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -6,11 +6,11 @@
            "ch≈çkan",
            {
              "conj": [],
              "gloss": [
                {
-                 "gloss": "morning newspaper",
+                 "gloss": "morning edition (of a daily newspaper); morning paper",
                  "pos": "[n]",
                },
              ],
              "kana": "„Å°„Çá„ÅÜ„Åã„Çì",
              "reading": "ÊúùÂàä „Äê„Å°„Çá„ÅÜ„Åã„Çì„Äë",
@@ -109,11 +109,11 @@
              "text": "Â±ä„Åè",
            },
            [],
          ],
          [
-           "oto/on/ne",
+           "oto/ne/on",
            {
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
@@ -213,11 +213,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -420,11 +427,11 @@
                    },
                  ],
                  "kana": "„Åó„Åü",
                  "reading": "„Åó„Åü",
                  "score": 0,
-                 "seq": 10150860,
+                 "seq": 25430291,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Åü",
                },
              ],
              "compound": [

- Expected  - 3
+ Received  + 11

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÊúùÂàä„ÅåÂ±ä„ÅèÈü≥„ÅßÂ§¢„ÅåËß£Êï£„Åó„Åü„ÄÇ" (limit: 1) [78.22ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -136,17 +136,17 @@
                },
              ],
              "kana": "„Åó„Å¶",
              "reading": "„Åó„Å¶",
              "score": 40,
-             "seq": 10150864,
+             "seq": 25430295,
              "text": "„Åó„Å¶",
            },
            [],
          ],
          [
-           "kokoro/shin",
+           "shin/kokoro",
            {
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
@@ -374,11 +374,11 @@
                    },
                  ],
                  "kana": "„Åó„Å¶",
                  "reading": "„Åó„Å¶",
                  "score": 0,
-                 "seq": 10150864,
+                 "seq": 25430295,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Å¶",
                },
                {
                  "conj": [
@@ -391,13 +391,18 @@
                        {
                          "gloss": "to stay",
                          "pos": "[v1,vi]",
                        },
                        {
-                         "gloss": "to be ...-ing; to have been ...-ing",
-                         "info": "after the -te form of a verb; indicates continuing action or state",
-                         "pos": "[v1,aux-v]",
+                         "gloss": "to be ...-ing",
+                         "info": "after the -te form of a verb; indicates continuing action",
+                         "pos": "[aux-v,v1]",
+                       },
+                       {
+                         "gloss": "to have ...-ed; to be ...-ed",
+                         "info": "after the -te form of a verb; indicates continuing state",
+                         "pos": "[aux-v,v1]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v1",
@@ -409,11 +414,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Åü",
                  "reading": "„ÅÑ„Åü",
                  "score": 0,
-                 "seq": 10547537,
+                 "seq": 25839474,
                  "suffix": "indicates continuing action (to be ...ing)",
                  "text": "„ÅÑ„Åü",
                },
              ],
              "compound": [

- Expected  - 7
+ Received  + 12

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Âá∫Â∏≠„Å†„Åë„Åó„Å¶ÂøÉ„ÅåÊ¨†Â∏≠„Åó„Å¶„ÅÑ„Åü„ÄÇ" (limit: 1) [88.71ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -79,11 +79,70 @@
                },
                {
                  "gloss": "indicates „Å™-adjective",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
              ],
              "kana": "„Å™",
              "reading": "„Å™",
              "score": 6,
              "seq": 2029110,
@@ -150,11 +209,11 @@
                },
              ],
              "kana": "„Çè„Åü„Çå„Å™„ÅÑ",
              "reading": "Ê∏°„Çå„Å™„ÅÑ „Äê„Çè„Åü„Çå„Å™„ÅÑ„Äë",
              "score": 840,
-             "seq": 10590428,
+             "seq": 25884383,
              "text": "Ê∏°„Çå„Å™„ÅÑ",
            },
            [],
          ],
          [
@@ -309,11 +368,16 @@
                      "gloss": "to be equipped with",
                      "pos": "[v5r-i,vi]",
                    },
                    {
                      "gloss": "to happen; to come about",
-                     "pos": "[vi,v5r-i]",
+                     "pos": "[v5r-i,vi]",
+                   },
+                   {
+                     "gloss": "to exist (in a completed state); to be (something unchanged in its current state)",
+                     "info": "after the ÔΩû„Å¶ form of a transitive verb",
+                     "pos": "[aux-v,v5r-i]",
                    },
                  ],
                  "kana": "„ÅÇ„Çã",
                  "reading": "„ÅÇ„Çã",
                  "score": 40,

- Expected  - 2
+ Received  + 67

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Èùí‰ø°Âè∑„Å™„ÅÆ„Å´Ê∏°„Çå„Å™„ÅÑÊó•„Åå„ÅÇ„Çã„ÄÇ" (limit: 1) [35.10ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -126,11 +128,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -258,11 +267,11 @@
                    },
                  ],
                  "kana": "„Åä„Çè„Å£„Å¶",
                  "reading": "ÁµÇ„Çè„Å£„Å¶ „Äê„Åä„Çè„Å£„Å¶„Äë",
                  "score": 0,
-                 "seq": 10045995,
+                 "seq": 25322873,
                  "text": "ÁµÇ„Çè„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -283,11 +292,11 @@
                          "gloss": "to do completely; to finish",
                          "info": "after the -te form of a verb",
                          "pos": "[aux-v,v5u]",
                        },
                        {
-                         "gloss": "to do accidentally; to do without meaning to; to happen to do",
+                         "gloss": "to do accidentally; to do without meaning to; to happen to do; to end up ...",
                          "info": "after the -te form of a verb",
                          "pos": "[aux-v,v5u]",
                        },
                      ],
                      "prop": [
@@ -301,11 +310,11 @@
                    },
                  ],
                  "kana": "„Åó„Åæ„Å£„Åü",
                  "reading": "„Åó„Åæ„Å£„Åü",
                  "score": 0,
-                 "seq": 10584171,
+                 "seq": 25877875,
                  "suffix": "indicates completion (to finish ...)",
                  "text": "„Åó„Åæ„Å£„Åü",
                },
              ],
              "compound": [

- Expected  - 8
+ Received  + 18

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Âë≥Ë¶ã„ÅÆÊÆµÈöé„ÅßÂ§ïÈ£Ø„ÅåÁµÇ„Çè„Å£„Å¶„Åó„Åæ„Å£„Åü„ÄÇ" (limit: 1) [95.95ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -160,11 +162,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -172,20 +174,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -258,11 +262,11 @@
                },
              ],
              "kana": "„Å®„ÅÑ„Çè„Çå„Å¶",
              "reading": "„Å®Ë®Ä„Çè„Çå„Å¶ „Äê„Å®„ÅÑ„Çè„Çå„Å¶„Äë",
              "score": 780,
-             "seq": 10586273,
+             "seq": 25879715,
              "text": "„Å®Ë®Ä„Çè„Çå„Å¶",
            },
            [],
          ],
          [
@@ -379,11 +383,11 @@
                    },
                  ],
                  "kana": "„Åó",
                  "reading": "„Åó",
                  "score": 0,
-                 "seq": 10150906,
+                 "seq": 25430338,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó",
                },
                {
                  "conj": [
@@ -407,11 +411,11 @@
                    },
                  ],
                  "kana": "„Åü„Åè„Å™„ÅÑ",
                  "reading": "„Åü„Åè„Å™„ÅÑ",
                  "score": 0,
-                 "seq": 10473877,
+                 "seq": 25763886,
                  "suffix": "want to... / would like to...",
                  "text": "„Åü„Åè„Å™„ÅÑ",
                },
              ],
              "compound": [

- Expected  - 13
+ Received  + 17

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Éó„É™„É≥„Çø„ÅÆÁ¥ô„Å•„Åæ„Çä„Åå‰∫∫Áîü„ÅÆÁ∏ÆÂõ≥„Å†„Å®Ë®Ä„Çè„Çå„Å¶Á¥çÂæó„Åó„Åü„Åè„Å™„ÅÑ„ÄÇ" (limit: 1) [230.54ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -145,11 +145,11 @@
                },
              ],
              "kana": "„Åø„Åä„Åè„Çâ„Çå„Çã",
              "reading": "Ë¶ãÈÄÅ„Çâ„Çå„Çã „Äê„Åø„Åä„Åè„Çâ„Çå„Çã„Äë",
              "score": 1495,
-             "seq": 10427549,
+             "seq": 25715938,
              "text": "Ë¶ãÈÄÅ„Çâ„Çå„Çã",
            },
            [],
          ],
          [
@@ -287,11 +287,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -325,11 +332,11 @@
                },
              ],
              "kana": "„ÅÇ„Åó„Å™„Åø„Çí„Åù„Çç„Åà„Åü",
              "reading": "Ë∂≥‰∏¶„Åø„ÇíÊèÉ„Åà„Åü „Äê„ÅÇ„Åó„Å™„Åø„Çí„Åù„Çç„Åà„Åü„Äë",
              "score": 1222,
-             "seq": 10589595,
+             "seq": 25883808,
              "text": "Ë∂≥‰∏¶„Åø„ÇíÊèÉ„Åà„Åü",
            },
            [],
          ],
        ],

- Expected  - 2
+ Received  + 10

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ë¶ãÈÄÅ„ÇãÈõ®„Å®Ë¶ãÈÄÅ„Çâ„Çå„ÇãÂÇò„Åå‰∫§Â∑ÆÁÇπ„ÅßË∂≥‰∏¶„Åø„ÇíÊèÉ„Åà„Åü„ÄÇ" (limit: 1) [99.47ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -47,11 +47,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -59,20 +59,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -140,11 +142,11 @@
              "text": "Âõû„Çã",
            },
            [],
          ],
          [
-           "oto/on/ne",
+           "oto/ne/on",
            {
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
@@ -243,11 +245,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
@@ -377,11 +386,11 @@
                    },
                  ],
                  "kana": "„Åï„Çå„Åü",
                  "reading": "„Åï„Çå„Åü",
                  "score": 0,
-                 "seq": 10401872,
+                 "seq": 25689756,
                  "suffix": "makes a verb from a noun (honorific or passive)",
                  "text": "„Åï„Çå„Åü",
                },
              ],
              "compound": [

- Expected  - 7
+ Received  + 17

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Ç≥„Ç§„É≥„É©„É≥„Éâ„É™„Éº„ÅÆÂõû„ÇãÈü≥„ÅßÊÄùËÄÉ„ÅåÊíπÊãå„Åï„Çå„Åü„ÄÇ" (limit: 1) [90.46ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -390,11 +390,11 @@
                    },
                  ],
                  "kana": "„Åß„Åç„Å™„ÅÑ",
                  "reading": "„Åß„Åç„Å™„ÅÑ",
                  "score": 0,
-                 "seq": 10150873,
+                 "seq": 25430305,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åß„Åç„Å™„ÅÑ",
                },
              ],
              "compound": [

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Èù¥‰∏ã„ÅåÁâáÊñπ„Å†„ÅëÊ∂à„Åà„ÇãÁêÜÂ±à„Çí„Åæ„Å†Ë™∞„ÇÇË™¨Êòé„Åß„Åç„Å™„ÅÑ„ÄÇ" (limit: 1) [54.58ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -83,11 +85,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -95,20 +97,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 10
+ Received  + 14

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈßÖ„Éä„Ç´„ÅÆ„Éë„É≥Â±ã„ÅÆÂåÇ„ÅÑ„ÅØÂêàÁêÜÊÄß„ÇíË£èÂàá„Çã„ÄÇ" (limit: 1) [37.75ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -84,11 +86,11 @@
                      "info": "as ...„Åì„Å®„Åå„Å™„ÅÑ, etc.; indicates negation, inexperience, unnecessariness or impossibility",
                      "pos": "[adj-i]",
                    },
                    {
                      "gloss": "not",
-                     "info": "after the ren'y≈çkei form of an adjective",
+                     "info": "after the conjunctive form of an adjective",
                      "pos": "[adj-i,aux-adj]",
                    },
                    {
                      "gloss": "to not be; to have not",
                      "info": "after the -te form of a verb",
@@ -122,11 +124,16 @@
                          "gloss": "to be equipped with",
                          "pos": "[v5r-i,vi]",
                        },
                        {
                          "gloss": "to happen; to come about",
-                         "pos": "[vi,v5r-i]",
+                         "pos": "[v5r-i,vi]",
+                       },
+                       {
+                         "gloss": "to exist (in a completed state); to be (something unchanged in its current state)",
+                         "info": "after the ÔΩû„Å¶ form of a transitive verb",
+                         "pos": "[aux-v,v5r-i]",
                        },
                      ],
                      "prop": [
                        {
                          "neg": true,
@@ -139,11 +146,11 @@
                    },
                  ],
                  "kana": "„Å™„ÅÑ",
                  "reading": "„Å™„ÅÑ",
                  "score": 40,
-                 "seq": 10467186,
+                 "seq": 25756697,
                  "text": "„Å™„ÅÑ",
                },
              ],
            },
            [],

- Expected  - 8
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "‰∫àÂÆö„ÅÆ„Å™„ÅÑ‰ºëÊó•„Åå‰∏ÄÁï™Âøô„Åó„ÅÑ„ÄÇ" (limit: 1) [36.65ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -126,11 +128,11 @@
                },
              ],
              "kana": "„ÅÇ„Åæ„Å£„Å¶",
              "reading": "‰Ωô„Å£„Å¶ „Äê„ÅÇ„Åæ„Å£„Å¶„Äë",
              "score": 112,
-             "seq": 10511949,
+             "seq": 25803143,
              "text": "‰Ωô„Å£„Å¶",
            },
            [],
          ],
          [

- Expected  - 6
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ë¢ãÈ∫∫„ÅÆÈ∫∫„Å†„Åë‰Ωô„Å£„Å¶„Çπ„Éº„Éó„ÅåÂÖà„Å´ÁµÇ„Çè„ÇãÊÇ≤Âäá„ÄÇ" (limit: 1) [48.77ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -149,11 +151,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -192,11 +201,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -204,20 +213,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -349,11 +360,11 @@
                    },
                  ],
                  "kana": "„Çà„Å∞„Çå„Åü",
                  "reading": "Âëº„Å∞„Çå„Åü „Äê„Çà„Å∞„Çå„Åü„Äë",
                  "score": 440,
-                 "seq": 10572190,
+                 "seq": 25865517,
                  "text": "Âëº„Å∞„Çå„Åü",
                },
                {
                  "conj": [
                    {
@@ -405,11 +416,11 @@
                    },
                  ],
                  "kana": "„Çà„Å∞„Çå„Åü",
                  "reading": "Âëº„Å∞„Çå„Åü „Äê„Çà„Å∞„Çå„Åü„Äë",
                  "score": 600,
-                 "seq": 10799609,
+                 "seq": 26106994,
                  "text": "Âëº„Å∞„Çå„Åü",
                },
              ],
            },
            [],
@@ -441,11 +452,11 @@
                },
              ],
              "kana": "„Åç„Åå„Åó„Åü",
              "reading": "Ê∞ó„Åå„Åó„Åü „Äê„Åç„Åå„Åó„Åü„Äë",
              "score": 440,
-             "seq": 10265552,
+             "seq": 25549278,
              "text": "Ê∞ó„Åå„Åó„Åü",
            },
            [],
          ],
        ],

- Expected  - 13
+ Received  + 25

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ëø∑Â≠ê„ÅÆÊ°àÂÜÖÊîæÈÄÅ„ÅßËá™ÂàÜ„ÅÆÂêçÂâç„ÅåÂëº„Å∞„Çå„ÅüÊ∞ó„Åå„Åó„Åü„ÄÇ" (limit: 1) [135.65ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -182,11 +184,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -220,11 +229,11 @@
                },
              ],
              "kana": "„Åã„ÅÑ„Åü",
              "reading": "Êõ∏„ÅÑ„Åü „Äê„Åã„ÅÑ„Åü„Äë",
              "score": 336,
-             "seq": 10522823,
+             "seq": 25814130,
              "text": "Êõ∏„ÅÑ„Åü",
            },
            [],
          ],
          [
@@ -254,11 +263,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -266,20 +275,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -515,11 +526,11 @@
                },
              ],
              "kana": "„Å®„Åë„Åü",
              "reading": "Ê∫∂„Åë„Åü „Äê„Å®„Åë„Åü„Äë",
              "score": 336,
-             "seq": 10385744,
+             "seq": 25673078,
              "text": "Ê∫∂„Åë„Åü",
            },
            [],
          ],
        ],

- Expected  - 12
+ Received  + 24

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Á™ì„ÅÆÁµêÈú≤„Å´Êåá„ÅßÊõ∏„ÅÑ„ÅüÊòéÊó•„ÅÆ„ÇÑ„Çã„Åì„Å®„ÅåÊ∫∂„Åë„Åü„ÄÇ" (limit: 1) [56.55ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -6,11 +6,11 @@
            "hiyashich≈´ka",
            {
              "conj": [],
              "gloss": [
                {
+                 "field": "{food}",
                  "gloss": "chilled Chinese noodles",
                  "pos": "[n]",
                },
              ],
              "kana": "„Å≤„ÇÑ„Åó„Å°„ÇÖ„ÅÜ„Åã",
@@ -53,11 +53,11 @@
                },
              ],
              "kana": "„ÅØ„Åò„ÇÅ„Åæ„Åó„Åü",
              "reading": "Âßã„ÇÅ„Åæ„Åó„Åü „Äê„ÅØ„Åò„ÇÅ„Åæ„Åó„Åü„Äë",
              "score": 1380,
-             "seq": 10452379,
+             "seq": 25741563,
              "text": "Âßã„ÇÅ„Åæ„Åó„Åü",
            },
            [],
          ],
          [
@@ -65,11 +65,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -77,20 +77,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -204,11 +206,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -216,20 +218,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 11
+ Received  + 16

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÂÜ∑„ÇÑ„Åó‰∏≠ËèØÂßã„ÇÅ„Åæ„Åó„Åü„ÅÆË≤º„ÇäÁ¥ô„ÅåÂ≠£ÁØÄ„ÅÆÂè∑‰ª§„Å†„ÄÇ" (limit: 1) [70.43ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -120,11 +122,11 @@
                },
              ],
              "kana": "„Åã„Å£„Åü",
              "reading": "Ë≤∑„Å£„Åü „Äê„Åã„Å£„Åü„Äë",
              "score": 112,
-             "seq": 10266552,
+             "seq": 25550076,
              "text": "Ë≤∑„Å£„Åü",
            },
            [],
          ],
          [
@@ -239,11 +241,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -251,20 +253,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -390,11 +394,11 @@
                      "gloss": "to be promoted",
                      "pos": "[v5r,vi]",
                    },
                    {
                      "gloss": "to do ...",
-                     "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                     "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                      "pos": "[aux-v,v5r]",
                    },
                  ],
                  "prop": [
                    {
@@ -407,11 +411,11 @@
                },
              ],
              "kana": "„Å™„Å£„Åü",
              "reading": "„Å™„Å£„Åü",
              "score": 40,
-             "seq": 10371749,
+             "seq": 25658501,
              "text": "„Å™„Å£„Åü",
            },
            [],
          ],
        ],

- Expected  - 13
+ Received  + 17

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ë™∞„Åã„ÅÆ„Åü„ÇÅ„Å´Ë≤∑„Å£„ÅüÂÇò„ÅåËá™ÂàÜ„ÅÆÊÄù„ÅÑÂá∫„Å´„Å™„Å£„Åü„ÄÇ" (limit: 1) [24.32ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 5
+ Received  + 7

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Çπ„Éã„Éº„Ç´„Éº„ÅÆÁôΩ„Åï„ÅåÈõ®Èõ≤„ÇíÂëº„Å∂„ÄÇ" (limit: 1) [30.79ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -169,11 +171,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -181,20 +183,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -310,11 +314,11 @@
                    },
                  ],
                  "kana": "„ÇÑ„Çè„Çâ„Åí„Çã",
                  "reading": "„ÇÑ„Çè„Çâ„Åí„Çã",
                  "score": 275,
-                 "seq": 10055131,
+                 "seq": 25331755,
                  "text": "„ÇÑ„Çè„Çâ„Åí„Çã",
                },
              ],
            },
            [],

- Expected  - 11
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈõªÊ∞ó„Ç±„Éà„É´„ÅÆÊπØÊ∞ó„ÅåÈÉ®Â±ã„ÅÆÊôÇÈñì„Çí„ÇÑ„Çè„Çâ„Åí„Çã„ÄÇ" (limit: 1) [100.79ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -56,11 +56,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -68,20 +68,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -159,11 +161,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -171,20 +173,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -292,13 +296,18 @@
                {
                  "gloss": "to stay",
                  "pos": "[v1,vi]",
                },
                {
-                 "gloss": "to be ...-ing; to have been ...-ing",
-                 "info": "after the -te form of a verb; indicates continuing action or state",
-                 "pos": "[v1,aux-v]",
+                 "gloss": "to be ...-ing",
+                 "info": "after the -te form of a verb; indicates continuing action",
+                 "pos": "[aux-v,v1]",
+               },
+               {
+                 "gloss": "to have ...-ed; to be ...-ed",
+                 "info": "after the -te form of a verb; indicates continuing state",
+                 "pos": "[aux-v,v1]",
                },
              ],
              "kana": "„ÅÑ„Çã",
              "reading": "„ÅÑ„Çã",
              "score": 40,

- Expected  - 13
+ Received  + 22

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Éû„Çπ„ÇØË∂ä„Åó„ÅÆÁ¨ëÈ°î„ÅØÁõÆÂ∞ª„ÅÆÁøªË®≥„Åå„ÅÑ„Çã„ÄÇ" (limit: 1) [49.09ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -154,11 +154,11 @@
                      "pos": "[v5r,vt]",
                    },
                    {
                      "field": "{go}",
                      "gloss": "to cut (the connection between two groups)",
+                     "info": "sometimes „Ç≠„Çã",
                      "pos": "[v5r,vt]",
                    },
                    {
                      "gloss": "to start a fire (with wood-wood friction or by striking a metal against stone)",
                      "info": "also written as ÈëΩ„Çã",
@@ -195,11 +195,11 @@
                },
              ],
              "kana": "„Åç„Å£„Åü„Çâ",
              "reading": "Âàá„Å£„Åü„Çâ „Äê„Åç„Å£„Åü„Çâ„Äë",
              "score": 336,
-             "seq": 10569937,
+             "seq": 25863502,
              "text": "Âàá„Å£„Åü„Çâ",
            },
            [],
          ],
          [
@@ -319,11 +319,11 @@
                    },
                  ],
                  "kana": "„ÅÜ„Åæ„Åè",
                  "reading": "‰∏äÊâã„Åè „Äê„ÅÜ„Åæ„Åè„Äë",
                  "score": 0,
-                 "seq": 10008869,
+                 "seq": 25284174,
                  "text": "‰∏äÊâã„Åè",
                },
                {
                  "conj": [],
                  "kana": "„Å™„Çã",

- Expected  - 2
+ Received  + 3

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Áà™„ÇíÂàá„Å£„Åü„Çâ„Éî„Ç¢„Éé„Åå‰∏äÊâã„Åè„Å™„ÇãÊ∞ó„Åå„Åô„ÇãËø∑‰ø°„ÅåÂ•Ω„Åç„Å†„ÄÇ" (limit: 1) [114.26ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -33,11 +33,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -45,20 +45,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -115,11 +117,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -127,20 +129,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -149,11 +153,11 @@
              "text": "„ÅÆ",
            },
            [],
          ],
          [
-           "f≈´/kaze",
+           "kaze/f≈´",
            {
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
@@ -412,11 +416,11 @@
                },
              ],
              "kana": "„ÇÇ„Åü„Å™„ÅÑ",
              "reading": "ÊåÅ„Åü„Å™„ÅÑ „Äê„ÇÇ„Åü„Å™„ÅÑ„Äë",
              "score": 840,
-             "seq": 10618842,
+             "seq": 25913709,
              "text": "ÊåÅ„Åü„Å™„ÅÑ",
            },
            [],
          ],
        ],

- Expected  - 12
+ Received  + 16

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈßÖ„ÅÆ„Éõ„Éº„É†„ÅÆÈ¢®„Å†„Åë„ÅåË®ÄËëâ„ÇíÊåÅ„Åü„Å™„ÅÑ„ÄÇ" (limit: 1) [34.68ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -114,11 +116,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -164,11 +173,11 @@
                },
              ],
              "kana": "„Åã„Å£„Åü",
              "reading": "Ë≤∑„Å£„Åü „Äê„Åã„Å£„Åü„Äë",
              "score": 112,
-             "seq": 10266552,
+             "seq": 25550076,
              "text": "Ë≤∑„Å£„Åü",
            },
            [],
          ],
          [
@@ -271,11 +280,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -283,20 +292,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 11
+ Received  + 23

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Â§úË°å„Éê„Çπ„ÅÆ‰ºëÊÜ©„ÅßË≤∑„Å£„ÅüËÇâ„Åæ„Çì„ÅåÊóÖ„ÅÆË¶ÅÁ¥Ñ„Å†„Å£„Åü„ÄÇ" (limit: 1) [49.97ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -43,11 +43,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -55,20 +55,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -165,11 +167,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -177,20 +179,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -223,11 +227,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -235,20 +239,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -312,11 +318,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -371,11 +384,11 @@
                },
              ],
              "kana": "„Åó„Å£„Åü",
              "reading": "Áü•„Å£„Åü „Äê„Åó„Å£„Åü„Äë",
              "score": 112,
-             "seq": 10104970,
+             "seq": 25383438,
              "text": "Áü•„Å£„Åü",
            },
            [],
          ],
        ],

- Expected  - 16
+ Received  + 30

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Â§è„ÅÆÁµÇ„Çè„Çä„ÇíËùâ„ÅÆÊäú„ÅëÊÆª„ÅÆËªΩ„Åï„ÅßÁü•„Å£„Åü„ÄÇ" (limit: 1) [85.48ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -33,11 +33,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -45,20 +45,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -290,11 +292,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -302,20 +304,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -517,11 +521,11 @@
                    },
                  ],
                  "kana": "„Åó„Å¶",
                  "reading": "„Åó„Å¶",
                  "score": 0,
-                 "seq": 10150864,
+                 "seq": 25430295,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Å¶",
                },
                {
                  "conj": [],

- Expected  - 11
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÊúùÈ°î„ÅÆ„Å§„Çã„Åå„Éô„É©„É≥„ÉÄ„ÅÆÊ†ºÂ≠ê„ÇíÂãùÊâã„Å´Ë®≠Ë®à„Åó„Å¶„ÅÑ„Çã„ÄÇ" (limit: 1) [96.98ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -100,11 +102,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -112,20 +114,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -274,11 +278,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -312,11 +323,11 @@
                },
              ],
              "kana": "„ÅÜ„Å°„ÅÇ„Åå„Å£„Åü",
              "reading": "Êâì„Å°‰∏ä„Åå„Å£„Åü „Äê„ÅÜ„Å°„ÅÇ„Åå„Å£„Åü„Äë",
              "score": 845,
-             "seq": 10424707,
+             "seq": 25712783,
              "text": "Êâì„Å°‰∏ä„Åå„Å£„Åü",
            },
            [],
          ],
          [
@@ -346,11 +357,11 @@
                },
              ],
              "kana": "„Åç„Åå„Åó„Åü",
              "reading": "Ê∞ó„Åå„Åó„Åü „Äê„Åç„Åå„Åó„Åü„Äë",
              "score": 440,
-             "seq": 10265552,
+             "seq": 25549278,
              "text": "Ê∞ó„Åå„Åó„Åü",
            },
            [],
          ],
        ],

- Expected  - 12
+ Received  + 24

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Èõ®Â§©‰∏≠Ê≠¢„ÅÆ„ÅØ„Åö„ÅÆËä±ÁÅ´„ÅåÈõ≤„ÅÆ‰∏ä„ÅßÊâì„Å°‰∏ä„Åå„Å£„ÅüÊ∞ó„Åå„Åó„Åü„ÄÇ" (limit: 1) [82.79ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -304,11 +306,11 @@
                  "gloss": "to be promoted",
                  "pos": "[v5r,vi]",
                },
                {
                  "gloss": "to do ...",
-                 "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                 "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                  "pos": "[aux-v,v5r]",
                },
              ],
              "kana": "„Å™„Çã",
              "reading": "„Å™„Çã",
@@ -410,11 +412,11 @@
                    },
                  ],
                  "kana": "„Å™„Åæ„Åà„Çí„Å§„Åë",
                  "reading": "ÂêçÂâç„Çí„Å§„Åë „Äê„Å™„Åæ„Åà„Çí„Å§„Åë„Äë",
                  "score": 0,
-                 "seq": 10185832,
+                 "seq": 25466576,
                  "text": "ÂêçÂâç„Çí„Å§„Åë",
                },
                {
                  "conj": [],
                  "kana": "„Åü„ÅÑ",

- Expected  - 7
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ê≠ØÂåªËÄÖ„ÅÆ‰∫àÁ¥ÑÊó•„Å†„ÅëÊ≠Ø„ÅåÂÖÉÊ∞ó„Å´„Å™„ÇãÁèæË±°„Å´ÂêçÂâç„Çí„Å§„Åë„Åü„ÅÑ„ÄÇ" (limit: 1) [165.14ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -229,11 +231,70 @@
                },
                {
                  "gloss": "indicates „Å™-adjective",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
              ],
              "kana": "„Å™",
              "reading": "„Å™",
              "score": 6,
              "seq": 2029110,
@@ -260,11 +321,15 @@
                },
                {
                  "gloss": "smart; clever; witty; strange",
                  "pos": "[adj-na]",
                },
+               {
+                 "field": "{go,shogi}",
+                 "gloss": "aji; position that has some lingering potential that may be exploited later in the game",
+                 "pos": "[n]",
+               },
              ],
              "kana": "„ÅÇ„Åò",
              "reading": "Âë≥ „Äê„ÅÇ„Åò„Äë",
              "score": 23,
              "seq": 1526960,
@@ -277,11 +342,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -289,20 +354,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -382,20 +449,24 @@
                    },
                  ],
                  "kana": "„Å®„Åç",
                  "reading": "„Å®„Åç",
                  "score": 12,
-                 "seq": 10082647,
+                 "seq": 25360451,
                  "text": "„Å®„Åç",
                },
                {
                  "conj": [
                    {
                      "gloss": [
                        {
-                         "gloss": "to explain; to advocate; to preach; to persuade",
-                         "pos": "[v5k]",
+                         "gloss": "to explain; to preach; to advocate",
+                         "pos": "[v5k,vt]",
+                       },
+                       {
+                         "gloss": "to persuade; to prevail upon; to reason with; to urge (someone to do)",
+                         "pos": "[vt,v5k]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v5k",
@@ -407,11 +478,11 @@
                    },
                  ],
                  "kana": "„Å®„Åç",
                  "reading": "„Å®„Åç",
                  "score": 12,
-                 "seq": 10236725,
+                 "seq": 25519403,
                  "text": "„Å®„Åç",
                },
                {
                  "conj": [
                    {
@@ -457,11 +528,11 @@
                    },
                  ],
                  "kana": "„Å®„Åç",
                  "reading": "„Å®„Åç",
                  "score": 12,
-                 "seq": 10638522,
+                 "seq": 25934011,
                  "text": "„Å®„Åç",
                },
              ],
            },
            [],

- Expected  - 15
+ Received  + 88

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Á¥ô„Ç≥„ÉÉ„Éó„ÅÆ„Ç≥„Éº„Éí„Éº„Åå„ÇÑ„Åë„Å´Ê∑±Âàª„Å™Âë≥„ÅÆ„Å®„Åç„ÅØÁõ∏Ë´áÁõ∏Êâã„ÅåÊ¨≤„Åó„ÅÑ„ÄÇ" (limit: 1) [126.99ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -87,11 +89,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -99,20 +101,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -318,11 +322,11 @@
                        },
                      ],
                      "kana": "„ÇÑ„ÇÅ„Å¶",
                      "reading": "Ê≠¢„ÇÅ„Å¶ „Äê„ÇÑ„ÇÅ„Å¶„Äë",
                      "score": 0,
-                     "seq": 10841010,
+                     "seq": 26151562,
                      "text": "Ê≠¢„ÇÅ„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„ÅÑ„Çã",
@@ -393,11 +397,11 @@
                        },
                      ],
                      "kana": "„Å®„ÇÅ„Å¶",
                      "reading": "Ê≠¢„ÇÅ„Å¶ „Äê„Å®„ÇÅ„Å¶„Äë",
                      "score": 0,
-                     "seq": 10370486,
+                     "seq": 25657161,
                      "text": "Ê≠¢„ÇÅ„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„ÅÑ„Çã",

- Expected  - 12
+ Received  + 16

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈÅìÁ´Ø„ÅÆËêΩ„ÅóÁâ©„ÅÆÁâáÊñπ„Å†„Åë„ÅåÂ≠£ÁØÄ„ÇíÊ≠¢„ÇÅ„Å¶„ÅÑ„Çã„ÄÇ" (limit: 1) [141.45ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -106,11 +106,11 @@
                },
              ],
              "kana": "„Å™„Åè„Åó„Åü",
              "reading": "„Å™„Åè„Åó„Åü",
              "score": 336,
-             "seq": 10474303,
+             "seq": 25764129,
              "text": "„Å™„Åè„Åó„Åü",
            },
            [],
          ],
          [
@@ -216,11 +216,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -238,11 +245,11 @@
                  "pos": "[n]",
                },
              ],
              "kana": "„Çπ„Éû„Éõ",
              "reading": "„Çπ„Éû„Éõ",
-             "score": 96,
+             "score": 384,
              "seq": 2641300,
              "text": "„Çπ„Éû„Éõ",
            },
            [],
          ],
@@ -483,11 +490,11 @@
                    },
                  ],
                  "kana": "„Åä„ÇÇ„Åè",
                  "reading": "Èáç„Åè „Äê„Åä„ÇÇ„Åè„Äë",
                  "score": 0,
-                 "seq": 10374925,
+                 "seq": 25661985,
                  "text": "Èáç„Åè",
                },
                {
                  "conj": [],
                  "kana": "„Å™„Çã",
@@ -508,10 +515,10 @@
              "text": "Èáç„Åè„Å™„Çã",
            },
            [],
          ],
        ],
-       1417,
+       1705,
      ],
    ],
    ". ",
  ]

- Expected  - 4
+ Received  + 12

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÊâãË¢ã„ÇíÁâáÊñπ„Å™„Åè„Åó„ÅüÊâã„Åß„Çπ„Éû„Éõ„ÇíÊåÅ„Å§„Å®ÂÜ¨„ÅåÈáç„Åè„Å™„Çã„ÄÇ" (limit: 1) [85.26ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -113,11 +115,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
@@ -323,11 +332,11 @@
                      "gloss": "to be promoted",
                      "pos": "[v5r,vi]",
                    },
                    {
                      "gloss": "to do ...",
-                     "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                     "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                      "pos": "[aux-v,v5r]",
                    },
                  ],
                  "prop": [
                    {
@@ -340,11 +349,11 @@
                },
              ],
              "kana": "„Å™„Å£„Åü",
              "reading": "„Å™„Å£„Åü",
              "score": 40,
-             "seq": 10371749,
+             "seq": 25658501,
              "text": "„Å™„Å£„Åü",
            },
            [],
          ],
        ],

- Expected  - 7
+ Received  + 17

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ë¶≥Ë¶ßËªä„ÅÆ‰∏ÄÁï™‰∏ä„ÅßÊ≤àÈªô„ÅåÊôØËâ≤„Å´„Å™„Å£„Åü„ÄÇ" (limit: 1) [29.55ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -114,11 +116,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -161,11 +170,11 @@
                },
              ],
              "kana": "„ÅÇ„Åü„Åü„ÇÅ„Åæ„Åô",
              "reading": "Ê∏©„ÇÅ„Åæ„Åô „Äê„ÅÇ„Åü„Åü„ÇÅ„Åæ„Åô„Äë",
              "score": 840,
-             "seq": 10010979,
+             "seq": 25286448,
              "text": "Ê∏©„ÇÅ„Åæ„Åô",
            },
            [],
          ],
          [
@@ -377,11 +386,11 @@
                },
              ],
              "kana": "„Åç„Åì„Åà„Åü",
              "reading": "ËÅû„Åì„Åà„Åü „Äê„Åç„Åì„Åà„Åü„Äë",
              "score": 840,
-             "seq": 10008875,
+             "seq": 25284587,
              "text": "ËÅû„Åì„Åà„Åü",
            },
            [],
          ],
        ],

- Expected  - 7
+ Received  + 17

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Â§úÊõ¥„Åë„ÅÆ„Ç≥„É≥„Éì„Éã„ÅßÊ∏©„ÇÅ„Åæ„Åô„Åã„ÅåÂì≤Â≠¶„Å´ËÅû„Åì„Åà„Åü„ÄÇ" (limit: 1) [120.72ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -160,11 +162,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -172,20 +174,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -275,11 +279,11 @@
                    },
                  ],
                  "kana": "„Åã„Åç„Åã„Åà„Å¶",
                  "reading": "Êõ∏„ÅçÊèõ„Åà„Å¶ „Äê„Åã„Åç„Åã„Åà„Å¶„Äë",
                  "score": 0,
-                 "seq": 10028388,
+                 "seq": 25304555,
                  "text": "Êõ∏„ÅçÊèõ„Åà„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÅÑ„Çã",

- Expected  - 11
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Éù„Ç±„ÉÉ„Éà„ÅÆ„É¨„Ç∑„Éº„Éà„ÅåË≤°Â∏É„ÅÆÊ≠¥Âè≤„ÇíÊõ∏„ÅçÊèõ„Åà„Å¶„ÅÑ„Çã„ÄÇ" (limit: 1) [75.96ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -48,11 +48,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -60,20 +60,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -107,11 +109,11 @@
                    },
                  ],
                  "kana": "„ÇÑ„Åï„Åó",
                  "reading": "ÂÑ™„Åó „Äê„ÇÑ„Åï„Åó„Äë",
                  "score": 0,
-                 "seq": 10022301,
+                 "seq": 25298301,
                  "text": "ÂÑ™„Åó",
                },
                {
                  "conj": [],
                  "kana": "„Åï",

- Expected  - 6
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈùûÈÄöÁü•Ë®≠ÂÆö„ÅÆÂÑ™„Åó„Åï„ÅØÊôÇ„ÄÖÊÆãÈÖ∑„Å†„ÄÇ" (limit: 1) [36.44ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -15,11 +15,11 @@
                  "gloss": "last; final; latest; most recent",
                  "pos": "[adj-no]",
                },
                {
                  "gloss": "no sooner than; once; right after (often having negative consequences)",
-                 "info": "after -tara form or -ta form followed by "ga"",
+                 "info": "after -tara form, or -ta form followed by "ga"",
                  "pos": "[exp]",
                },
                {
                  "gloss": "one's final moments",
                  "pos": "[n]",
@@ -38,11 +38,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -50,20 +50,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -118,11 +120,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -130,20 +132,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -439,11 +443,11 @@
                },
              ],
              "kana": "„ÅÇ„Å§„Åã„Å£„Åü",
              "reading": "ÁÜ±„Åã„Å£„Åü „Äê„ÅÇ„Å§„Åã„Å£„Åü„Äë",
              "score": 336,
-             "seq": 10459081,
+             "seq": 25748239,
              "text": "ÁÜ±„Åã„Å£„Åü",
            },
            [],
          ],
        ],

- Expected  - 12
+ Received  + 16

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÊúÄÂæå„ÅÆ‰∏ÄÊú¨„ÅÆ„Éù„ÉÜ„Éà„Åå‰∏ñÁïåÂπ≥Âíå„ÇíÂ∑¶Âè≥„Åô„Çã„Åª„Å©ÁÜ±„Åã„Å£„Åü„ÄÇ" (limit: 1) [69.97ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -232,11 +232,11 @@
                },
              ],
              "kana": "„ÅÆ„Å≥„Åü",
              "reading": "‰º∏„Å≥„Åü „Äê„ÅÆ„Å≥„Åü„Äë",
              "score": 336,
-             "seq": 10065222,
+             "seq": 25342256,
              "text": "‰º∏„Å≥„Åü",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Èõ®‰∏ä„Åå„ÇäÁõ¥ÂæåÈôêÂÆöË≤©Â£≤ÈñãÂßãÂæÖÊ©üÂàó„Åå‰º∏„Å≥„Åü„ÄÇ" (limit: 1) [28.00ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -60,11 +60,11 @@
            "saisai",
            {
              "conj": [],
              "gloss": [
                {
-                 "gloss": "often; frequently",
+                 "gloss": "often; frequently; again and again",
                  "pos": "[n,adv]",
                },
              ],
              "kana": "„Åï„ÅÑ„Åï„ÅÑ",
              "reading": "ÂÜç„ÄÖ „Äê„Åï„ÅÑ„Åï„ÅÑ„Äë",
@@ -217,11 +217,11 @@
                    },
                  ],
                  "kana": "„Åæ„Çè„Å£„Å¶",
                  "reading": "Âõû„Å£„Å¶ „Äê„Åæ„Çè„Å£„Å¶„Äë",
                  "score": 0,
-                 "seq": 10310469,
+                 "seq": 25595169,
                  "text": "Âõû„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -260,11 +260,11 @@
                    },
                  ],
                  "kana": "„Åç„Åü",
                  "reading": "„Åç„Åü",
                  "score": 0,
-                 "seq": 10219035,
+                 "seq": 25501290,
                  "suffix": "indicates action that had been continuing up till now / came to be ",
                  "text": "„Åç„Åü",
                },
              ],
              "compound": [

- Expected  - 3
+ Received  + 3

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈßÖÂâçÂÜçÈñãÁô∫Ë®àÁîªÊ°àÂÜç„ÄÖ‰øÆÊ≠£Áâà„ÅåÂõû„Å£„Å¶„Åç„Åü„ÄÇ" (limit: 1) [52.25ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -154,11 +154,11 @@
                    },
                  ],
                  "kana": "„ÅÇ„Çâ„Åó",
                  "reading": "Ëçí„Çâ„Åó „Äê„ÅÇ„Çâ„Åó„Äë",
                  "score": 336,
-                 "seq": 10065840,
+                 "seq": 25343036,
                  "text": "Ëçí„Çâ„Åó",
                },
              ],
            },
            [],
@@ -301,11 +301,11 @@
                    },
                  ],
                  "kana": "„ÅÇ„ÅÑ„Åü",
                  "reading": "Èñã„ÅÑ„Åü „Äê„ÅÇ„ÅÑ„Åü„Äë",
                  "score": 336,
-                 "seq": 10314721,
+                 "seq": 25599678,
                  "text": "Èñã„ÅÑ„Åü",
                },
                {
                  "conj": [
                    {
@@ -374,11 +374,16 @@
                          "field": "{sports}",
                          "gloss": "to slacken (into a poor posture)",
                          "info": "as ‰Ωì„ÅåÈñã„Åè, ËÇ©„ÅåÈñã„Åè, etc.",
                          "pos": "[v5k,vi]",
                        },
+                       {
+                         "field": "{go}",
+                         "gloss": "to extend",
+                         "info": "usu. „Éí„É©„Åè",
+                         "pos": "[v5k,vi]",
+                       },
                      ],
                      "prop": [
                        {
                          "pos": "v5k",
                          "type": "Past (~ta)",
@@ -389,11 +394,11 @@
                    },
                  ],
                  "kana": "„Å≤„Çâ„ÅÑ„Åü",
                  "reading": "Èñã„ÅÑ„Åü „Äê„Å≤„Çâ„ÅÑ„Åü„Äë",
                  "score": 336,
-                 "seq": 10459682,
+                 "seq": 25748940,
                  "text": "Èñã„ÅÑ„Åü",
                },
              ],
            },
            [],

- Expected  - 3
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÊúùÊ¥ª‰ª≤ÈñìÂãüÈõÜÊé≤Á§∫ÊùøËçí„Çâ„ÅóÂØæÁ≠ñ‰ºöË≠∞„ÇíÈñã„ÅÑ„Åü„ÄÇ" (limit: 1) [152.55ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -200,11 +200,11 @@
                },
              ],
              "kana": "„Çà„Çì„Å†",
              "reading": "Ë™≠„Çì„Å† „Äê„Çà„Çì„Å†„Äë",
              "score": 336,
-             "seq": 10101134,
+             "seq": 25379408,
              "text": "Ë™≠„Çì„Å†",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "‰ΩéÁ≥ñË≥™È´ò„Åü„Çì„Å±„ÅèÂºÅÂΩìËá™ÁÇäÂàùÂøÉËÄÖÂêë„ÅëÁâπÈõÜ„ÇíË™≠„Çì„Å†„ÄÇ" (limit: 1) [86.00ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -256,11 +256,11 @@
                },
              ],
              "kana": "„Åä„Åç„Åü",
              "reading": "Ëµ∑„Åç„Åü „Äê„Åä„Åç„Åü„Äë",
              "score": 336,
-             "seq": 10508067,
+             "seq": 25799076,
              "text": "Ëµ∑„Åç„Åü",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Âè§Á¥ôÂõûÂèéÊó•Á®ãÂ§âÊõ¥ÈÄöÁü•Êú™Ë™≠Êó¢Ë™≠ÂïèÈ°å„ÅåËµ∑„Åç„Åü„ÄÇ" (limit: 1) [45.48ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -42,11 +42,11 @@
            "t≈çki",
            {
              "conj": [],
              "gloss": [
                {
-                 "gloss": "(season of) winter",
+                 "gloss": "winter season; winter",
                  "pos": "[n]",
                },
              ],
              "kana": "„Å®„ÅÜ„Åç",
              "reading": "ÂÜ¨Â≠£ „Äê„Å®„ÅÜ„Åç„Äë",
@@ -284,11 +284,11 @@
                },
              ],
              "kana": "„Åç„Åü",
              "reading": "Êù•„Åü „Äê„Åç„Åü„Äë",
              "score": 112,
-             "seq": 10219035,
+             "seq": 25501290,
              "text": "Êù•„Åü",
            },
            [],
          ],
        ],

- Expected  - 2
+ Received  + 2

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Â§©‰ΩìË¶≥Ê∏¨ÂêåÂ•Ω‰ºöÂÜ¨Â≠£ÊµÅÊòüÁæ§Ë¶≥Êúõ‰ºö‰∏≠Ê≠¢ÈÄ£Áµ°„ÅåÊù•„Åü„ÄÇ" (limit: 1) [45.36ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -195,11 +195,11 @@
                },
              ],
              "kana": "„Åì„Çì„Å†",
              "reading": "Ê∑∑„Çì„Å† „Äê„Åì„Çì„Å†„Äë",
              "score": 336,
-             "seq": 10345746,
+             "seq": 25631809,
              "text": "Ê∑∑„Çì„Å†",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Âú®ÂÆÖÂã§ÂãôÊé®Â•®ÊúüÈñìÈôêÂÆöÈÄöÂã§ÂÆöÊúüËß£Á¥ÑÁõ∏Ë´áÁ™ìÂè£„ÅåÊ∑∑„Çì„Å†„ÄÇ" (limit: 1) [54.42ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -101,11 +101,11 @@
              "text": "Ë®ò",
            },
            [],
          ],
          [
-           "f≈´/kaze",
+           "kaze/f≈´",
            {
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
@@ -257,11 +257,11 @@
                },
              ],
              "kana": "„Åã„Å£„Åü",
              "reading": "Ë≤∑„Å£„Åü „Äê„Åã„Å£„Åü„Äë",
              "score": 112,
-             "seq": 10266552,
+             "seq": 25550076,
              "text": "Ë≤∑„Å£„Åü",
            },
            [],
          ],
        ],

- Expected  - 2
+ Received  + 2

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Êµ∑Ê≤ø„ÅÑÈ¢®ÂæÖ„Å°Ê∏ØÁî∫Êï£Á≠ñË®òÈ¢®ÂÜôÁúüÈõÜ„ÇíË≤∑„Å£„Åü„ÄÇ" (limit: 1) [40.90ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -59,11 +59,11 @@
                },
              ],
              "kana": "„Çè„Åô„Çå",
              "reading": "Âøò„Çå „Äê„Çè„Åô„Çå„Äë",
              "score": 72,
-             "seq": 10524515,
+             "seq": 25816388,
              "text": "Âøò„Çå",
            },
            [],
          ],
          [

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "‰∏äÊõ∏„Åç‰øùÂ≠òÂøò„Çå‰∫ãÊïÖÂÜçÁô∫Èò≤Ê≠¢Á≠ñÊ°à„Çí‰ΩúÊàê‰∏≠„Å†„ÄÇ" (limit: 1) [41.06ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -56,11 +56,11 @@
              "text": "Ê†ó„Åç„Çì„Å®„Çì",
            },
            [],
          ],
          [
-           "f≈´/kaze",
+           "kaze/f≈´",
            {
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
@@ -345,11 +345,11 @@
                    },
                  ],
                  "kana": "„Åó„Åü",
                  "reading": "„Åó„Åü",
                  "score": 0,
-                 "seq": 10150860,
+                 "seq": 25430291,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Åü",
                },
              ],
              "compound": [

- Expected  - 2
+ Received  + 2

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Êñ∞‰ΩúÂíåËèìÂ≠êÊ†ó„Åç„Çì„Å®„ÇìÈ¢®„Ç¢„Ç§„ÇπÊúÄÁµÇË©¶‰ΩúÂìÅ„ÇíË©¶È£ü„Åó„Åü„ÄÇ" (limit: 1) [123.98ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -370,11 +370,11 @@
                },
              ],
              "kana": "„Å®„Å©„ÅÑ„Åü",
              "reading": "Â±ä„ÅÑ„Åü „Äê„Å®„Å©„ÅÑ„Åü„Äë",
              "score": 336,
-             "seq": 10249184,
+             "seq": 25532288,
              "text": "Â±ä„ÅÑ„Åü",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Âá∫Ê±ÅÂèñ„ÇäÂàùÂøÉËÄÖË¨õÂ∫ßÈÖçÂ∏ÉË≥áÊñôË™§Ê§çÊåáÊëò„É°„Éº„É´„ÅåÂ±ä„ÅÑ„Åü„ÄÇ" (limit: 1) [39.21ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -321,11 +321,11 @@
                },
              ],
              "kana": "„Åç„ÅÑ„Åü",
              "reading": "ËÅû„ÅÑ„Åü „Äê„Åç„ÅÑ„Åü„Äë",
              "score": 336,
-             "seq": 10196621,
+             "seq": 25478083,
              "text": "ËÅû„ÅÑ„Åü",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Âè§ÂÖ∏ÊñáÊ≥ïÊú™Â±•‰øÆËÄÖÂêë„ÅëÂÖ•ÈñÄÊõ∏Â¢óÂà∑Ê±∫ÂÆö„ÇíËÅû„ÅÑ„Åü„ÄÇ" (limit: 1) [77.46ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -6,11 +6,11 @@
            "shitsudo",
            {
              "conj": [],
              "gloss": [
                {
-                 "gloss": "level of humidity",
+                 "gloss": "humidity",
                  "pos": "[n]",
                },
              ],
              "kana": "„Åó„Å§„Å©",
              "reading": "ÊπøÂ∫¶ „Äê„Åó„Å§„Å©„Äë",
@@ -280,11 +280,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„ÇÑ„ÇÅ„Å™„ÅÑ",
                  "reading": "Âê¶„ÇÅ„Å™„ÅÑ „Äê„ÅÑ„ÇÑ„ÇÅ„Å™„ÅÑ„Äë",
                  "score": 440,
-                 "seq": 10190341,
+                 "seq": 25471286,
                  "text": "Âê¶„ÇÅ„Å™„ÅÑ",
                },
                {
                  "conj": [
                    {
@@ -311,11 +311,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å™„ÇÅ„Å™„ÅÑ",
                  "reading": "Âê¶„ÇÅ„Å™„ÅÑ „Äê„ÅÑ„Å™„ÇÅ„Å™„ÅÑ„Äë",
                  "score": 440,
-                 "seq": 10275267,
+                 "seq": 25559433,
                  "text": "Âê¶„ÇÅ„Å™„ÅÑ",
                },
              ],
            },
            [],

- Expected  - 3
+ Received  + 3

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÊπøÂ∫¶È´ò„ÇÅË®≠ÂÆöÊé®Â•®ÁêÜÁî±Ë™¨Êòé‰∏çË∂≥ÊÑü„ÅåÂê¶„ÇÅ„Å™„ÅÑ„ÄÇ" (limit: 1) [53.48ms]
(pass) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Â§öÊã†ÁÇπÂ±Ö‰ΩèÂÆüÈ®ìÊúüÈñìÈôêÂÆöÂâ≤ÂºïÈÅ©Áî®Êù°‰ª∂„ÅåÂé≥„Åó„ÅÑ„ÄÇ" (limit: 1) [138.19ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -157,14 +157,11 @@
                },
                {
                  "gloss": "optical fiber; optical fibre",
                  "pos": "[n]",
                },
-               {
-                 "gloss": "Hikari (city), Yamaguchi Prefecture",
-                 "pos": "[n]",
-               },
              ],
              "kana": "„Å≤„Åã„Çä",
              "reading": "ÂÖâ „Äê„Å≤„Åã„Çä„Äë",
              "score": 25,
              "seq": 1272780,
@@ -342,11 +339,11 @@
                    },
                  ],
                  "kana": "„Åó„Åü",
                  "reading": "„Åó„Åü",
                  "score": 0,
-                 "seq": 10150860,
+                 "seq": 25430291,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Åü",
                },
              ],
              "compound": [

- Expected  - 5
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Êó©Ëµ∑„ÅçËã¶ÊâãÊ∞óÂë≥ÂØæÁ≠ñÁî®ÂÖâÁõÆË¶ö„Åæ„ÅóÊôÇË®à„ÇíÂ∞éÂÖ•„Åó„Åü„ÄÇ" (limit: 1) [91.66ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -365,11 +367,11 @@
                },
              ],
              "kana": "„Å™„Åå„Å≥„ÅÑ„Åü",
              "reading": "Èï∑Âºï„ÅÑ„Åü „Äê„Å™„Åå„Å≥„ÅÑ„Åü„Äë",
              "score": 1035,
-             "seq": 10188568,
+             "seq": 25469316,
              "text": "Èï∑Âºï„ÅÑ„Åü",
            },
            [],
          ],
        ],

- Expected  - 6
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Á¥ô„ÅÆÊú¨Ê¥æÈõªÂ≠êÊõ∏Á±ç‰ΩµÁî®Êé®ÈÄ≤Ê¥æË´ñ‰∫â„ÅåÈï∑Âºï„ÅÑ„Åü„ÄÇ" (limit: 1) [34.91ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -199,11 +199,15 @@
                },
                {
                  "gloss": "Ench≈ç era (923.4.11-931.4.26)",
                  "pos": "[n]",
                },
+               {
+                 "field": "{sports}",
+                 "gloss": "extended game; overtime; extra time; extra innings",
+                 "pos": "[n]",
+               },
              ],
              "kana": "„Åà„Çì„Å°„Çá„ÅÜ",
              "reading": "Âª∂Èï∑ „Äê„Åà„Çì„Å°„Çá„ÅÜ„Äë",
              "score": 312,
              "seq": 1176510,
@@ -216,11 +220,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -228,20 +232,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -430,11 +436,11 @@
                },
              ],
              "kana": "„Åß„Åü",
              "reading": "Âá∫„Åü „Äê„Åß„Åü„Äë",
              "score": 112,
-             "seq": 10032465,
+             "seq": 25308675,
              "text": "Âá∫„Åü",
            },
            [],
          ],
        ],

- Expected  - 6
+ Received  + 13

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈÄ±Êú´ÈôêÂÆöÈáåÂ±±Êï£Ê≠©‰ºöÂèó‰ªòÁ∑†ÂàáÂª∂Èï∑„ÅÆ„ÅäÁü•„Çâ„Åõ„ÅåÂá∫„Åü„ÄÇ" (limit: 1) [136.11ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -314,11 +314,11 @@
                    },
                  ],
                  "kana": "„Åó„Åü",
                  "reading": "„Åó„Åü",
                  "score": 0,
-                 "seq": 10150860,
+                 "seq": 25430291,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Åü",
                },
              ],
              "compound": [

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Â∞èË¶èÊ®°Â§öÊ©üËÉΩËá™Ê≤ªÂÆüË£ÖÊîØÊè¥„ÉÅ„Éº„É†Áô∫Ë∂≥‰ºö„Å´ÂèÇÂä†„Åó„Åü„ÄÇ" (limit: 1) [74.43ms]
(pass) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Âç≥Â∏≠Âë≥ÂôåÊ±ÅÊ∏õÂ°©ÁâàÊñ∞Áô∫Â£≤Ë®òÂøµË©¶È£≤‰ºö„ÅåÁõõÊ≥Å„Å†„Å£„Åü„ÄÇ" (limit: 1) [46.88ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -138,11 +138,14 @@
                  "field": "{math}",
                  "gloss": "expected value; expectation",
                  "pos": "[n]",
                },
                {
+                 "gloss": "expectations",
+                 "pos": "[n]",
+               },
+               {
                  "field": "{physics}",
                  "gloss": "expectation value (in quantum mechanics)",
                  "pos": "[n]",
                },
              ],
@@ -303,11 +306,11 @@
                },
              ],
              "kana": "„Åô„Åé„Åü",
              "reading": "„Åô„Åé„Åü",
              "score": 90,
-             "seq": 10639360,
+             "seq": 25935043,
              "text": "„Åô„Åé„Åü",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 5

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÊóÖÂÖàÂÅ∂ÁÑ∂ÂÜç‰ºöÂäáÁöÑÂ±ïÈñãÊúüÂæÖÂÄ§„Åå‰∏ä„Åå„Çä„Åô„Åé„Åü„ÄÇ" (limit: 1) [71.99ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -243,11 +243,11 @@
                },
              ],
              "kana": "„Åä„Åè„Å£„Åü",
              "reading": "ÈÄÅ„Å£„Åü „Äê„Åä„Åè„Å£„Åü„Äë",
              "score": 112,
-             "seq": 10270197,
+             "seq": 25553763,
              "text": "ÈÄÅ„Å£„Åü",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Èò≤ÁÅΩÂÇôËìÑÊ£öÂç∏‰ΩúÊ•≠Êó•Á®ãË™øÊï¥„ÅäÈ°ò„ÅÑ„É°„Éº„É´„ÇíÈÄÅ„Å£„Åü„ÄÇ" (limit: 1) [38.81ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -58,11 +58,11 @@
                },
              ],
              "kana": "„ÇÅ„Åê„Çä",
              "reading": "Â∑°„Çä „Äê„ÇÅ„Åê„Çä„Äë",
              "score": 112,
-             "seq": 10636953,
+             "seq": 25932418,
              "text": "Â∑°„Çä",
            },
            [],
          ],
          [
@@ -205,11 +205,11 @@
                },
              ],
              "kana": "„Åø„Å§„Åë„Åü",
              "reading": "Ë¶ã„Å§„Åë„Åü „Äê„Åø„Å§„Åë„Åü„Äë",
              "score": 840,
-             "seq": 10125349,
+             "seq": 25404616,
              "text": "Ë¶ã„Å§„Åë„Åü",
            },
            [],
          ],
        ],

- Expected  - 2
+ Received  + 2

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Á•ûÁ§æ‰ªèÈñ£Â∑°„ÇäÈÄî‰∏≠‰∏ãËªäÊé®Â•®„É´„Éº„ÉàÊ°àÂÜÖÊùø„ÇíË¶ã„Å§„Åë„Åü„ÄÇ" (limit: 1) [71.80ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -154,13 +154,13 @@
                {
                  "gloss": "same year (of graduation, entering a company, etc.); contemporary; classmate",
                  "pos": "[n,adj-no]",
                },
                {
+                 "field": "{comp}",
                  "gloss": "synchronization; synchronism",
-                 "pos": "[vs,n]",
+                 "pos": "[vi,vt,vs,n]",
                },
              ],
              "kana": "„Å©„ÅÜ„Åç",
              "reading": "ÂêåÊúü „Äê„Å©„ÅÜ„Åç„Äë",
              "score": 286,
@@ -237,11 +237,11 @@
                    },
                  ],
                  "kana": "„Åö„Çå",
                  "reading": "„Åö„Çå",
                  "score": 40,
-                 "seq": 10581565,
+                 "seq": 25875118,
                  "text": "„Åö„Çå",
                },
              ],
            },
            [],
@@ -361,11 +361,11 @@
                },
              ],
              "kana": "„ÅÆ„Åì„Å£„Åü",
              "reading": "ÊÆã„Å£„Åü „Äê„ÅÆ„Åì„Å£„Åü„Äë",
              "score": 112,
-             "seq": 10421616,
+             "seq": 25709808,
              "text": "ÊÆã„Å£„Åü",
            },
            [],
          ],
        ],

- Expected  - 3
+ Received  + 4

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÊâãË©±ÈÄöË®≥‰ªòË¨õÊºîÂãïÁîªÂ≠óÂπïÂêåÊúü„Åö„ÇåÂïèÈ°å„ÅåÊÆã„Å£„Åü„ÄÇ" (limit: 1) [58.93ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -216,11 +216,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -228,20 +228,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 5
+ Received  + 7

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Âõ≥Êõ∏È§®ÂÜÖÈñ≤Ë¶ßÂ∏≠Á¢∫‰øù‰∫âÂ•™Êà¶ÂõûÈÅøÁ≠ñ„ÅÆÊ§úË®é„ÅåÈÄ≤„ÇÄ„ÄÇ" (limit: 1) [45.20ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -241,11 +241,11 @@
                },
              ],
              "kana": "„ÅØ„Çâ„Çå„Åü",
              "reading": "Ë≤º„Çâ„Çå„Åü „Äê„ÅØ„Çâ„Çå„Åü„Äë",
              "score": 200,
-             "seq": 10988695,
+             "seq": 26311540,
              "text": "Ë≤º„Çâ„Çå„Åü",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ËêΩË™ûÁ†îÁ©∂‰ºöÂØÑÂ∏≠ÂõÉÂ≠êÁ∑¥Áøí‰ºöÂÜçÈñãÂëäÁü•„ÅåË≤º„Çâ„Çå„Åü„ÄÇ" (limit: 1) [82.44ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -28,11 +28,14 @@
              "gloss": [
                {
                  "gloss": "sound source; sound generator; tone generator",
                  "pos": "[n]",
                },
+               {
+                 "gloss": "audio; audio file; recording",
+                 "pos": "[n]",
+               },
              ],
              "kana": "„Åä„Çì„Åí„Çì",
              "reading": "Èü≥Ê∫ê „Äê„Åä„Çì„Åí„Çì„Äë",
              "score": 65,
              "seq": 1183820,
@@ -101,11 +104,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -113,20 +116,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -328,11 +333,11 @@
                    },
                  ],
                  "kana": "„Å®„Åë„Å™„ÅÑ",
                  "reading": "Ëß£„Åë„Å™„ÅÑ „Äê„Å®„Åë„Å™„ÅÑ„Äë",
                  "score": 840,
-                 "seq": 10638496,
+                 "seq": 25933985,
                  "text": "Ëß£„Åë„Å™„ÅÑ",
                },
              ],
            },
            [],

- Expected  - 6
+ Received  + 12

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈùûÂèØÈÄÜÂúßÁ∏ÆÈü≥Ê∫êÈ´òËß£ÂÉèÂ∫¶ÂåñÈ¢®Âë≥„ÅÆË¨é„ÅåËß£„Åë„Å™„ÅÑ„ÄÇ" (limit: 1) [60.44ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -204,11 +204,11 @@
                },
              ],
              "kana": "„Å§„Åè„Çä„Å™„Åä„Åó„Åü",
              "reading": "‰Ωú„ÇäÁõ¥„Åó„Åü „Äê„Å§„Åè„Çä„Å™„Åä„Åó„Åü„Äë",
              "score": 1495,
-             "seq": 10569140,
+             "seq": 25862589,
              "text": "‰Ωú„ÇäÁõ¥„Åó„Åü",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÊéàÊ•≠Ê∫ñÂÇô‰∏çË∂≥ÊÑüÊ∫ÄËºâ„Çπ„É©„Ç§„Éâ‰∏ÄÂºè„Çí‰Ωú„ÇäÁõ¥„Åó„Åü„ÄÇ" (limit: 1) [71.34ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -327,11 +327,11 @@
                    },
                  ],
                  "kana": "„Åó„Åü",
                  "reading": "„Åó„Åü",
                  "score": 0,
-                 "seq": 10150860,
+                 "seq": 25430291,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Åü",
                },
              ],
              "compound": [

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Âè§Ê∞ëÂÆ∂ÂÜçÁîüÂÆøÊ≥ä‰ΩìÈ®ìÁßãÂÜ¨ÈôêÂÆö„Éó„É©„É≥„ÅåÂÆåÂ£≤„Åó„Åü„ÄÇ" (limit: 1) [65.87ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -6,11 +6,11 @@
            "yofukashi",
            {
              "conj": [],
              "gloss": [
                {
-                 "gloss": "staying up late; keeping late hours; sitting up late at night; nighthawk",
+                 "gloss": "staying up late; sitting up late at night; keeping late hours",
                  "pos": "[vi,vs,n]",
                },
              ],
              "kana": "„Çà„Åµ„Åã„Åó",
              "reading": "Â§úÊõ¥„Åã„Åó „Äê„Çà„Åµ„Åã„Åó„Äë",
@@ -232,11 +232,11 @@
                },
              ],
              "kana": "„Åü„ÇÅ„Åó„Åü",
              "reading": "Ë©¶„Åó„Åü „Äê„Åü„ÇÅ„Åó„Åü„Äë",
              "score": 336,
-             "seq": 10645291,
+             "seq": 25940938,
              "text": "Ë©¶„Åó„Åü",
            },
            [],
          ],
        ],

- Expected  - 2
+ Received  + 2

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Â§úÊõ¥„Åã„ÅóÂ∏∏ÁøíÂåñÈò≤Ê≠¢Áî®Âº∑Âà∂Ê∂àÁÅØ„Çø„Ç§„Éû„Éº„ÇíË©¶„Åó„Åü„ÄÇ" (limit: 1) [72.46ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -41,58 +41,24 @@
              "text": "Áõ¥Ââç",
            },
            [],
          ],
          [
-           "ky≈´",
+           "ky≈´t≈ç",
            {
              "conj": [],
              "gloss": [
                {
-                 "gloss": "sudden; abrupt; unexpected",
-                 "pos": "[adj-na]",
-               },
-               {
-                 "gloss": "urgent; pressing",
-                 "pos": "[adj-na]",
-               },
-               {
-                 "gloss": "steep; sharp; precipitous",
-                 "pos": "[adj-na]",
-               },
-               {
-                 "gloss": "rapid; swift; fast",
-                 "pos": "[adj-na]",
-               },
-               {
-                 "gloss": "emergency; crisis; danger",
-                 "pos": "[n]",
-               },
-               {
-                 "gloss": "urgency; hurrying; haste",
-                 "pos": "[n]",
-               },
-               {
-                 "gloss": "(in gagaku or noh) end of a song",
+                 "gloss": "steep climb; steep slope",
                  "pos": "[n]",
                },
              ],
-             "kana": "„Åç„ÇÖ„ÅÜ",
-             "reading": "ÊÄ• „Äê„Åç„ÇÖ„ÅÜ„Äë",
-             "score": 23,
-             "seq": 1228560,
-             "text": "ÊÄ•",
-           },
-           [],
-         ],
-         [
-           "Áôª",
-           {
-             "kana": "Áôª",
-             "reading": "Áôª",
-             "score": 0,
-             "text": "Áôª",
+             "kana": "„Åç„ÇÖ„ÅÜ„Å®„ÅÜ",
+             "reading": "ÊÄ•Áôª „Äê„Åç„ÇÖ„ÅÜ„Å®„ÅÜ„Äë",
+             "score": 65,
+             "seq": 2865498,
+             "text": "ÊÄ•Áôª",
            },
            [],
          ],
          [
            "kukan",
@@ -290,11 +256,11 @@
                    },
                  ],
                  "kana": "„Åï„Çå„Åü",
                  "reading": "„Åï„Çå„Åü",
                  "score": 0,
-                 "seq": 10401872,
+                 "seq": 25689756,
                  "suffix": "makes a verb from a noun (honorific or passive)",
                  "text": "„Åï„Çå„Åü",
                },
              ],
              "compound": [
@@ -307,10 +273,10 @@
              "text": "Êé°Êäû„Åï„Çå„Åü",
            },
            [],
          ],
        ],
-       1674,
+       2216,
      ],
    ],
    ". ",
  ]

- Expected  - 43
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Â±±È†ÇÁõ¥ÂâçÊÄ•ÁôªÂå∫ÈñìÊ∏ãÊªûËß£Ê∂àÊ°à„ÅåÊé°Êäû„Åï„Çå„Åü„ÄÇ" (limit: 1) [62.53ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -41,11 +41,11 @@
              "text": "ÂæåË®ò",
            },
            [],
          ],
          [
-           "f≈´/kaze",
+           "kaze/f≈´",
            {
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
@@ -440,11 +440,11 @@
                    },
                  ],
                  "kana": "„Åó„Åü",
                  "reading": "„Åó„Åü",
                  "score": 0,
-                 "seq": 10150860,
+                 "seq": 25430291,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Åü",
                },
              ],
              "compound": [

- Expected  - 2
+ Received  + 2

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Á∑®ÈõÜÂæåË®òÈ¢®„Å§„Å∂„ÇÑ„ÅçÈï∑„Åô„ÅéÂïèÈ°å„ÅåÁô∫Áîü„Åó„Åü„ÄÇ" (limit: 1) [120.52ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -284,11 +284,11 @@
                    },
                  ],
                  "kana": "„Åó„Åü",
                  "reading": "„Åó„Åü",
                  "score": 0,
-                 "seq": 10150860,
+                 "seq": 25430291,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Åü",
                },
              ],
              "compound": [

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Â∫ÉÂ†±ÊãÖÂΩìËÄÖ‰∫§‰ª£Áõ¥ÂæåË®ò‰∫ãÂ∑Æ„ÅóÊõø„ÅàË¶ÅÊúõ„ÅåÊÆ∫Âà∞„Åó„Åü„ÄÇ" (limit: 1) [79.96ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -302,11 +302,11 @@
                },
              ],
              "kana": "„Åó„Åü",
              "reading": "„Åó„Åü",
              "score": 40,
-             "seq": 10150860,
+             "seq": 25430291,
              "text": "„Åó„Åü",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈáéËâØÁå´‰øùË≠∑Ë≠≤Ê∏°‰ºöÈñãÂÇ¨‰∫àÂÆöÂú∞ÊúÄÁµÇÁ¢∫Ë™ç„Çí„Åó„Åü„ÄÇ" (limit: 1) [50.21ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -342,11 +342,11 @@
                    },
                  ],
                  "kana": "„Åó„Åü",
                  "reading": "„Åó„Åü",
                  "score": 0,
-                 "seq": 10150860,
+                 "seq": 25430291,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Åü",
                },
              ],
              "compound": [

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Â∞èÈ∫¶ÂÖ®Á≤íÁ≤âÈÖçÂêàÈ£ü„Éë„É≥ËÄ≥„Åæ„Åß„Åµ„Çè„Åµ„ÇèË™¨„ÇíÊ§úË®º„Åó„Åü„ÄÇ" (limit: 1) [103.44ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -188,11 +188,11 @@
                },
              ],
              "kana": "„ÅÜ„Åæ„Åè",
              "reading": "„ÅÜ„Åæ„Åè",
              "score": 90,
-             "seq": 10008869,
+             "seq": 25284174,
              "text": "„ÅÜ„Åæ„Åè",
            },
            [],
          ],
          [
@@ -259,11 +259,11 @@
                },
              ],
              "kana": "„Åæ„Çè„Çâ„Å™„ÅÑ",
              "reading": "Âõû„Çâ„Å™„ÅÑ „Äê„Åæ„Çè„Çâ„Å™„ÅÑ„Äë",
              "score": 840,
-             "seq": 10310463,
+             "seq": 25595163,
              "text": "Âõû„Çâ„Å™„ÅÑ",
            },
            [],
          ],
        ],

- Expected  - 2
+ Received  + 2

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Âú∞‰∏ãË°óËø∑Â≠êÊïëÂá∫Ë¶ÅË´ãÈÄ£Áµ°Á∂≤„Åå„ÅÜ„Åæ„ÅèÂõû„Çâ„Å™„ÅÑ„ÄÇ" (limit: 1) [96.33ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -210,11 +210,11 @@
                    },
                  ],
                  "kana": "„Åä„Åì„Å™„Å£„Åü",
                  "reading": "Ë°å„Å£„Åü „Äê„Åä„Åì„Å™„Å£„Åü„Äë",
                  "score": 112,
-                 "seq": 10086694,
+                 "seq": 25364738,
                  "text": "Ë°å„Å£„Åü",
                },
                {
                  "conj": [
                    {
@@ -283,11 +283,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Åü",
                  "reading": "Ë°å„Å£„Åü „Äê„ÅÑ„Å£„Åü„Äë",
                  "score": 112,
-                 "seq": 10346508,
+                 "seq": 25632661,
                  "text": "Ë°å„Å£„Åü",
                },
              ],
            },
            [],

- Expected  - 2
+ Received  + 2

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ê∑±Â±§Â≠¶ÁøíÁîªÂÉèÂàÜÈ°ûÈ´òÁ≤æÂ∫¶ÂåñÊâãÊ≥ïÊØîËºÉÂÆüÈ®ì„ÇíË°å„Å£„Åü„ÄÇ" (limit: 1) [47.84ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -186,11 +186,11 @@
                {
                  "conj": [],
                  "gloss": [
                    {
                      "gloss": "appointment; nomination; ordination; commission; designation",
-                     "pos": "[adj-no,vt,vs,n]",
+                     "pos": "[vt,vs,n]",
                    },
                  ],
                  "kana": "„Å´„Çì„ÇÅ„ÅÑ",
                  "reading": "‰ªªÂëΩ „Äê„Å´„Çì„ÇÅ„ÅÑ„Äë",
                  "score": 0,
@@ -223,11 +223,11 @@
                    },
                  ],
                  "kana": "„Åï„Çå„Åü",
                  "reading": "„Åï„Çå„Åü",
                  "score": 0,
-                 "seq": 10401872,
+                 "seq": 25689756,
                  "suffix": "makes a verb from a noun (honorific or passive)",
                  "text": "„Åï„Çå„Åü",
                },
              ],
              "compound": [

- Expected  - 2
+ Received  + 2

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈùûÁ∑öÂΩ¢ÊúÄÈÅ©ÂåñÊâãÊ≥ïÈÅ∏ÂÆö‰ºöË≠∞Ë≥áÊñô‰ΩúÊàêÊãÖÂΩì„Å´‰ªªÂëΩ„Åï„Çå„Åü„ÄÇ" (limit: 1) [91.62ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -231,11 +231,11 @@
                },
              ],
              "kana": "„Çà„Çì„Å†",
              "reading": "Ë™≠„Çì„Å† „Äê„Çà„Çì„Å†„Äë",
              "score": 336,
-             "seq": 10101134,
+             "seq": 25379408,
              "text": "Ë™≠„Çì„Å†",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈáèÂ≠ê„ÇÇ„Å§„ÇåÊ§úË®ºÁî®Á∞°ÊòìÂÆüÈ®ì„Ç≠„ÉÉ„ÉàÁ¥π‰ªãË®ò‰∫ã„ÇíË™≠„Çì„Å†„ÄÇ" (limit: 1) [77.53ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -65,11 +65,11 @@
            "sai",
            {
              "conj": [],
              "gloss": [
                {
-                 "gloss": "re-; again; repeated; deutero-; deuto-; deuter-",
+                 "gloss": "re-; again",
                  "pos": "[pref]",
                },
              ],
              "kana": "„Åï„ÅÑ",
              "reading": "ÂÜç „Äê„Åï„ÅÑ„Äë",
@@ -218,11 +218,11 @@
                },
              ],
              "kana": "„Å®„Å©„ÅÑ„Åü",
              "reading": "Â±ä„ÅÑ„Åü „Äê„Å®„Å©„ÅÑ„Åü„Äë",
              "score": 336,
-             "seq": 10249184,
+             "seq": 25532288,
              "text": "Â±ä„ÅÑ„Åü",
            },
            [],
          ],
        ],

- Expected  - 2
+ Received  + 2

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÂÅèÂæÆÂàÜÊñπÁ®ãÂºèÊï∞ÂÄ§Ëß£Ê≥ïÂÜçÂÖ•ÈñÄÁâπÈõÜÂè∑„ÅåÂ±ä„ÅÑ„Åü„ÄÇ" (limit: 1) [33.36ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -236,11 +236,11 @@
                },
              ],
              "kana": "„ÅÜ„Åî„ÅÑ„Åü",
              "reading": "Âãï„ÅÑ„Åü „Äê„ÅÜ„Åî„ÅÑ„Åü„Äë",
              "score": 336,
-             "seq": 10007824,
+             "seq": 25283217,
              "text": "Âãï„ÅÑ„Åü",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÊúâÊ©üÈáëÂ±ûÈåØ‰ΩìËß¶Â™íÂèçÂøúÊ©üÊßãËß£Êòé„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅåÂãï„ÅÑ„Åü„ÄÇ" (limit: 1) [56.67ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -315,11 +315,11 @@
                    },
                  ],
                  "kana": "„Åó„Åü",
                  "reading": "„Åó„Åü",
                  "score": 0,
-                 "seq": 10150860,
+                 "seq": 25430291,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Åü",
                },
              ],
              "compound": [

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Éä„ÉÉ„Ç∏ÁêÜË´ñÂøúÁî®Ë°åÂãïË®≠Ë®àÂÆüË∑µÁ∑®„ÉØ„Éº„ÇØ„Ç∑„Éß„ÉÉ„Éó„Å´ÂèÇÂä†„Åó„Åü„ÄÇ" (limit: 1) [55.76ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -232,11 +232,11 @@
                    },
                  ],
                  "kana": "„Åã„Åë„Åì„Åø",
                  "reading": "ÈßÜ„ÅëËæº„Åø „Äê„Åã„Åë„Åì„Åø„Äë",
                  "score": 518,
-                 "seq": 10646541,
+                 "seq": 25942275,
                  "text": "ÈßÜ„ÅëËæº„Åø",
                },
              ],
            },
            [],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Áµ±Ë®àÁöÑÂõ†ÊûúÊé®Ë´ñÂÖ•ÈñÄË™≤È°åÊèêÂá∫Á∑†ÂàáÁõ¥ÂâçÈßÜ„ÅëËæº„ÅøÊèêÂá∫„ÅåÂ§ö„ÅÑ„ÄÇ" (limit: 1) [49.75ms]
(pass) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ëá™ÁÑ∂Ë®ÄË™ûÂá¶ÁêÜÂÖàË°åÁ†îÁ©∂ÂÜçÁèæÂÆüÈ®ìÂ§±ÊïóÂéüÂõ†ÂàÜÊûê‰∏≠„Å†„ÄÇ" (limit: 1) [37.91ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -276,11 +276,11 @@
                    },
                  ],
                  "kana": "„ÅØ„ÅÑ„Å£„Åü",
                  "reading": "ÂÖ•„Å£„Åü „Äê„ÅØ„ÅÑ„Å£„Åü„Äë",
                  "score": 112,
-                 "seq": 10121673,
+                 "seq": 25400799,
                  "text": "ÂÖ•„Å£„Åü",
                },
                {
                  "conj": [
                    {
@@ -320,11 +320,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Åü",
                  "reading": "ÂÖ•„Å£„Åü „Äê„ÅÑ„Å£„Åü„Äë",
                  "score": 112,
-                 "seq": 10180392,
+                 "seq": 25461150,
                  "text": "ÂÖ•„Å£„Åü",
                },
              ],
            },
            [],

- Expected  - 2
+ Received  + 2

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Èü≥Â£∞ÂêàÊàêÂìÅË≥™Ë©ï‰æ°Âü∫Ê∫ñÁ≠ñÂÆöÊ°à‰øÆÊ≠£‰æùÈ†º„ÅåÂÖ•„Å£„Åü„ÄÇ" (limit: 1) [39.11ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -297,11 +297,11 @@
                },
              ],
              "kana": "„Åß„Åü",
              "reading": "Âá∫„Åü „Äê„Åß„Åü„Äë",
              "score": 112,
-             "seq": 10032465,
+             "seq": 25308675,
              "text": "Âá∫„Åü",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÁæéË°ìÈ§®Â§úÈñìÁâπÂà•Ë≤∏ÂàáÈëëË≥û‰ºöÊäΩÈÅ∏ÁµêÊûú„ÅåÂá∫„Åü„ÄÇ" (limit: 1) [37.50ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -176,11 +176,11 @@
                    },
                  ],
                  "kana": "„ÅÇ„ÅÑ„Åü",
                  "reading": "Èñã„ÅÑ„Åü „Äê„ÅÇ„ÅÑ„Åü„Äë",
                  "score": 336,
-                 "seq": 10314721,
+                 "seq": 25599678,
                  "text": "Èñã„ÅÑ„Åü",
                },
                {
                  "conj": [
                    {
@@ -249,11 +249,16 @@
                          "field": "{sports}",
                          "gloss": "to slacken (into a poor posture)",
                          "info": "as ‰Ωì„ÅåÈñã„Åè, ËÇ©„ÅåÈñã„Åè, etc.",
                          "pos": "[v5k,vi]",
                        },
+                       {
+                         "field": "{go}",
+                         "gloss": "to extend",
+                         "info": "usu. „Éí„É©„Åè",
+                         "pos": "[v5k,vi]",
+                       },
                      ],
                      "prop": [
                        {
                          "pos": "v5k",
                          "type": "Past (~ta)",
@@ -264,11 +269,11 @@
                    },
                  ],
                  "kana": "„Å≤„Çâ„ÅÑ„Åü",
                  "reading": "Èñã„ÅÑ„Åü „Äê„Å≤„Çâ„ÅÑ„Åü„Äë",
                  "score": 336,
-                 "seq": 10459682,
+                 "seq": 25748940,
                  "text": "Èñã„ÅÑ„Åü",
                },
              ],
            },
            [],

- Expected  - 2
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Éê„É≠„ÉÉ„ÇØÈü≥Ê•ΩÂç≥ËààÊºîÂ•èÂü∫Á§éÁ∑¥Áøí‰ºö„ÇíÈñã„ÅÑ„Åü„ÄÇ" (limit: 1) [33.83ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -178,11 +178,11 @@
                },
              ],
              "kana": "„Å™„Åå„ÇÅ„Åü",
              "reading": "Áú∫„ÇÅ„Åü „Äê„Å™„Åå„ÇÅ„Åü„Äë",
              "score": 336,
-             "seq": 10043160,
+             "seq": 25319624,
              "text": "Áú∫„ÇÅ„Åü",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Êõ∏ÈÅìÂçäÁ¥ôÊπø„ÇäÊ∞óË™øÊï¥Â§±Êïó‰æãÈõÜ„ÇíÁú∫„ÇÅ„Åü„ÄÇ" (limit: 1) [33.84ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -194,11 +194,11 @@
                },
              ],
              "kana": "„Åø„Åã„Åà„Åó„Åü",
              "reading": "Ë¶ãËøî„Åó„Åü „Äê„Åø„Åã„Åà„Åó„Åü„Äë",
              "score": 1035,
-             "seq": 10483884,
+             "seq": 25774319,
              "text": "Ë¶ãËøî„Åó„Åü",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ëå∂ÈÅìËñÑËå∂ÁÇπÂâçÊâãÈ†ÜÁ¢∫Ë™çÂãïÁîª„ÇíË¶ãËøî„Åó„Åü„ÄÇ" (limit: 1) [66.15ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -81,11 +81,11 @@
                },
              ],
              "kana": "„ÅØ„Åö„Åó",
              "reading": "Â§ñ„Åó „Äê„ÅØ„Åö„Åó„Äë",
              "score": 112,
-             "seq": 10613655,
+             "seq": 25908214,
              "text": "Â§ñ„Åó",
            },
            [],
          ],
          [
@@ -362,11 +362,11 @@
                    },
                  ],
                  "kana": "„Åó„Åü",
                  "reading": "„Åó„Åü",
                  "score": 0,
-                 "seq": 10150860,
+                 "seq": 25430291,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Åü",
                },
              ],
              "compound": [

- Expected  - 2
+ Received  + 2

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Âõ≤Á¢ÅÂÆöÁü≥Â§ñ„ÅóÂÆüÊà¶ÁöÑÁ†îÁ©∂‰ºöË≥áÊñô„ÇíÈÖçÂ∏É„Åó„Åü„ÄÇ" (limit: 1) [66.42ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -230,11 +230,11 @@
                    },
                  ],
                  "kana": "„Åó„Åü",
                  "reading": "„Åó„Åü",
                  "score": 0,
-                 "seq": 10150860,
+                 "seq": 25430291,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Åü",
                },
              ],
              "compound": [

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ââ£ÈÅìÁ¥†ÊåØ„ÇäÂçÉÊú¨‰ºÅÁîªÁÑ°ÁêÜ„ÇÑ„ÇäÂÆåÈÅÇ„Åó„Åü„ÄÇ" (limit: 1) [71.83ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -108,11 +108,11 @@
                    },
                  ],
                  "kana": "„Åä„Åç„Å¶",
                  "reading": "„Åä„Åç„Å¶",
                  "score": 0,
-                 "seq": 10508071,
+                 "seq": 25799080,
                  "text": "„Åä„Åç„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÅÑ„Çã",
@@ -314,11 +314,11 @@
                    },
                  ],
                  "kana": "„Å≠„Å¶",
                  "reading": "„Å≠„Å¶",
                  "score": 0,
-                 "seq": 10423071,
+                 "seq": 25711343,
                  "text": "„Å≠„Å¶",
                },
                {
                  "conj": [
                    {
@@ -344,11 +344,11 @@
                    },
                  ],
                  "kana": "„Å°„ÇÉ„Å£„Å¶",
                  "reading": "„Å°„ÇÉ„Å£„Å¶",
                  "score": 0,
-                 "seq": 10065273,
+                 "seq": 25342365,
                  "suffix": "indicates completion (to finish ...)",
                  "text": "„Å°„ÇÉ„Å£„Å¶",
                },
                {
                  "conj": [
@@ -361,13 +361,18 @@
                        {
                          "gloss": "to stay",
                          "pos": "[v1,vi]",
                        },
                        {
-                         "gloss": "to be ...-ing; to have been ...-ing",
-                         "info": "after the -te form of a verb; indicates continuing action or state",
-                         "pos": "[v1,aux-v]",
+                         "gloss": "to be ...-ing",
+                         "info": "after the -te form of a verb; indicates continuing action",
+                         "pos": "[aux-v,v1]",
+                       },
+                       {
+                         "gloss": "to have ...-ed; to be ...-ed",
+                         "info": "after the -te form of a verb; indicates continuing state",
+                         "pos": "[aux-v,v1]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v1",
@@ -379,11 +384,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Åü",
                  "reading": "„ÅÑ„Åü",
                  "score": 0,
-                 "seq": 10547537,
+                 "seq": 25839474,
                  "suffix": "indicates continuing action (to be ...ing)",
                  "text": "„ÅÑ„Åü",
                },
              ],
              "compound": [

- Expected  - 7
+ Received  + 12

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÅÇ„Åï„Åæ„Åß„Åä„Åç„Å¶„Çã„Å§„ÇÇ„Çä„Å†„Å£„Åü„ÅÆ„Å´„ÅÑ„Å§„ÅÆ„Åæ„Å´„Åã„Å≠„Å°„ÇÉ„Å£„Å¶„Åü„ÄÇ" (limit: 1) [243.74ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -56,11 +56,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -192,11 +199,11 @@
                    },
                  ],
                  "kana": "„Åã„Åë„Çà„ÅÜ",
                  "reading": "„Åã„Åë„Çà„ÅÜ",
                  "score": 0,
-                 "seq": 10661656,
+                 "seq": 25958210,
                  "text": "„Åã„Åë„Çà„ÅÜ",
                },
                {
                  "conj": [
                    {
@@ -269,13 +276,18 @@
                        {
                          "gloss": "to stay",
                          "pos": "[v1,vi]",
                        },
                        {
-                         "gloss": "to be ...-ing; to have been ...-ing",
-                         "info": "after the -te form of a verb; indicates continuing action or state",
-                         "pos": "[v1,aux-v]",
+                         "gloss": "to be ...-ing",
+                         "info": "after the -te form of a verb; indicates continuing action",
+                         "pos": "[aux-v,v1]",
+                       },
+                       {
+                         "gloss": "to have ...-ed; to be ...-ed",
+                         "info": "after the -te form of a verb; indicates continuing state",
+                         "pos": "[aux-v,v1]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v1",
@@ -287,11 +299,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Åü„Çâ",
                  "reading": "„ÅÑ„Åü„Çâ",
                  "score": 0,
-                 "seq": 10547573,
+                 "seq": 25839510,
                  "suffix": "indicates continuing action (to be ...ing)",
                  "text": "„ÅÑ„Åü„Çâ",
                },
              ],
              "compound": [
@@ -328,11 +340,11 @@
                },
              ],
              "kana": "„ÅÇ„ÇÅ„Åå„Åµ„Çä",
              "reading": "„ÅÇ„ÇÅ„Åå„Åµ„Çä",
              "score": 275,
-             "seq": 10168561,
+             "seq": 25448640,
              "text": "„ÅÇ„ÇÅ„Åå„Åµ„Çä",
            },
            [],
          ],
          [
@@ -391,11 +403,11 @@
                },
              ],
              "kana": "„Å†„Åó„Å¶",
              "reading": "„Å†„Åó„Å¶",
              "score": 36,
-             "seq": 10350929,
+             "seq": 25636992,
              "text": "„Å†„Åó„Å¶",
            },
            [],
          ],
          [
@@ -426,11 +438,11 @@
                    },
                  ],
                  "kana": "„ÇÑ„ÇÅ„Å¶",
                  "reading": "„ÇÑ„ÇÅ„Å¶",
                  "score": 0,
-                 "seq": 10103535,
+                 "seq": 25381783,
                  "text": "„ÇÑ„ÇÅ„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„Å®„Åè",
@@ -484,11 +496,11 @@
                },
              ],
              "kana": "„Åì„Å®„Å´„Åó„Åü",
              "reading": "„Åì„Å®„Å´„Åó„Åü",
              "score": 191,
-             "seq": 10398127,
+             "seq": 25685512,
              "text": "„Åì„Å®„Å´„Åó„Åü",
            },
            [],
          ],
        ],

- Expected  - 9
+ Received  + 22

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÅÑ„Åæ„Åã„Çâ„Åß„Åã„Åë„Çà„ÅÜ„Å®„Åó„Å¶„Åü„Çâ„ÅÇ„ÇÅ„Åå„Åµ„Çä„Å†„Åó„Å¶„ÇÑ„ÇÅ„Å®„Åè„Åì„Å®„Å´„Åó„Åü„ÄÇ" (limit: 1) [540.65ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -45,11 +45,11 @@
                },
              ],
              "kana": "„Åä„Å°„Å§„ÅÑ„Å¶",
              "reading": "„Åä„Å°„Å§„ÅÑ„Å¶",
              "score": 275,
-             "seq": 10003890,
+             "seq": 25279319,
              "text": "„Åä„Å°„Å§„ÅÑ„Å¶",
            },
            [],
          ],
          [
@@ -84,11 +84,11 @@
                    },
                  ],
                  "kana": "„ÅØ„Å™„Åõ„Å∞",
                  "reading": "„ÅØ„Å™„Åõ„Å∞",
                  "score": 176,
-                 "seq": 10141983,
+                 "seq": 25421515,
                  "text": "„ÅØ„Å™„Åõ„Å∞",
                },
                {
                  "conj": [
                    {
@@ -109,11 +109,11 @@
                    },
                  ],
                  "kana": "„ÅØ„Å™„Åõ„Å∞",
                  "reading": "„ÅØ„Å™„Åõ„Å∞",
                  "score": 176,
-                 "seq": 10577285,
+                 "seq": 25870739,
                  "text": "„ÅØ„Å™„Åõ„Å∞",
                },
                {
                  "conj": [
                    {
@@ -138,11 +138,11 @@
                    },
                  ],
                  "kana": "„ÅØ„Å™„Åõ„Å∞",
                  "reading": "„ÅØ„Å™„Åõ„Å∞",
                  "score": 176,
-                 "seq": 10580979,
+                 "seq": 25874739,
                  "text": "„ÅØ„Å™„Åõ„Å∞",
                },
              ],
            },
            [],
@@ -155,11 +155,11 @@
                {
                  "gloss": "to understand; to comprehend; to grasp; to see; to get; to follow",
                  "pos": "[v5r,vi]",
                },
                {
-                 "gloss": "to become clear; to be known; to be discovered; to be realized; to be realised; to be found out",
+                 "gloss": "to become clear; to be known; to be discovered; to be realized (realised); to be found out; to make sense",
                  "pos": "[v5r,vi]",
                },
                {
                  "gloss": "I know!; I think so too!",
                  "pos": "[int]",
@@ -263,11 +263,70 @@
                },
                {
                  "gloss": "indicates „Å™-adjective",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
              ],
              "kana": "„Å™",
              "reading": "„Å™",
              "score": 6,
              "seq": 2029110,
@@ -454,11 +513,11 @@
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
                    {
-                     "gloss": "house; residence; dwelling",
+                     "gloss": "house; residence; dwelling; home",
                      "pos": "[n]",
                    },
                    {
                      "gloss": "family; household",
                      "pos": "[n]",
@@ -494,19 +553,19 @@
                    },
                    {
                      "gloss": [
                        {
                          "gloss": "to say; to utter; to declare",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vt]",
                        },
                        {
                          "gloss": "to name; to call",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vt]",
                        },
                        {
                          "gloss": "to go (e.g. "the alarm went ping"); to make a noise",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vi]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v5u",
@@ -518,11 +577,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Åà",
                  "reading": "„ÅÑ„Åà",
                  "score": 12,
-                 "seq": 10112699,
+                 "seq": 25391436,
                  "text": "„ÅÑ„Åà",
                },
              ],
            },
            [],
@@ -554,11 +613,11 @@
                              "info": "as ...„Åì„Å®„Åå„Å™„ÅÑ, etc.; indicates negation, inexperience, unnecessariness or impossibility",
                              "pos": "[adj-i]",
                            },
                            {
                              "gloss": "not",
-                             "info": "after the ren'y≈çkei form of an adjective",
+                             "info": "after the conjunctive form of an adjective",
                              "pos": "[adj-i,aux-adj]",
                            },
                            {
                              "gloss": "to not be; to have not",
                              "info": "after the -te form of a verb",
@@ -576,11 +635,11 @@
                        },
                      ],
                      "kana": "„Å™„Åè",
                      "reading": "„Å™„Åè",
                      "score": 0,
-                     "seq": 10643730,
+                     "seq": 25939457,
                      "text": "„Å™„Åè",
                    },
                    {
                      "conj": [],
                      "kana": "„Å™„Çã",

- Expected  - 12
+ Received  + 72

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åä„Å°„Å§„ÅÑ„Å¶„ÅØ„Å™„Åõ„Å∞„Çè„Åã„Çã„ÅØ„Åö„Å™„ÅÆ„Å´„Åã„Åä„Çí„Åø„Çã„Å®„ÅÑ„Åà„Å™„Åè„Å™„Çã„ÄÇ" (limit: 1) [313.12ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -3,32 +3,55 @@
      [
        [
          [
            "sono",
            {
-             "conj": [],
-             "gloss": [
-               {
-                 "gloss": "that; the",
-                 "info": "something or someone distant from the speaker, close to the listener; actions of the listener, or ideas expressed or understood by the listener",
-                 "pos": "[adj-pn]",
-               },
+             "alternative": [
                {
-                 "gloss": "part (as in "part two")",
-                 "info": "preceding a number",
-                 "pos": "[adj-pn]",
+                 "conj": [],
+                 "gloss": [
+                   {
+                     "gloss": "that; the",
+                     "info": "something or someone distant from the speaker, close to the listener; actions of the listener, or ideas expressed or understood by the listener",
+                     "pos": "[adj-pn]",
+                   },
+                   {
+                     "gloss": "part (as in "part two")",
+                     "info": "preceding a number",
+                     "pos": "[adj-pn]",
+                   },
+                   {
+                     "gloss": "um ...; er ...; uh ...",
+                     "pos": "[int]",
+                   },
+                 ],
+                 "kana": "„Åù„ÅÆ",
+                 "reading": "„Åù„ÅÆ",
+                 "score": 12,
+                 "seq": 1006830,
+                 "text": "„Åù„ÅÆ",
                },
                {
-                 "gloss": "um ...; er ...; uh ...",
-                 "pos": "[int]",
+                 "conj": [],
+                 "gloss": [
+                   {
+                     "gloss": "garden; orchard; park",
+                     "pos": "[n]",
+                   },
+                   {
+                     "gloss": "place; world; environment",
+                     "pos": "[n]",
+                   },
+                 ],
+                 "kana": "„Åù„ÅÆ",
+                 "reading": "„Åù„ÅÆ",
+                 "score": 16,
+                 "seq": 1176240,
+                 "text": "„Åù„ÅÆ",
                },
              ],
-             "kana": "„Åù„ÅÆ",
-             "reading": "„Åù„ÅÆ",
-             "score": 40,
-             "seq": 1006830,
-             "text": "„Åù„ÅÆ",
            },
            [],
          ],
          [
            "hanashi",
@@ -249,11 +272,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -297,11 +327,11 @@
                    },
                  ],
                  "kana": "„Åæ„Å®„ÇÅ„Å¶",
                  "reading": "„Åæ„Å®„ÇÅ„Å¶",
                  "score": 0,
-                 "seq": 10350226,
+                 "seq": 25636605,
                  "text": "„Åæ„Å®„ÇÅ„Å¶",
                },
                {
                  "conj": [
                    {
@@ -340,11 +370,11 @@
                    },
                  ],
                  "kana": "„Åç",
                  "reading": "„Åç",
                  "score": 0,
-                 "seq": 10219079,
+                 "seq": 25501338,
                  "suffix": "indicates action that had been continuing up till now / came to be ",
                  "text": "„Åç",
                },
              ],
              "compound": [
@@ -371,13 +401,18 @@
                    {
                      "gloss": "to stay",
                      "pos": "[v1,vi]",
                    },
                    {
-                     "gloss": "to be ...-ing; to have been ...-ing",
-                     "info": "after the -te form of a verb; indicates continuing action or state",
-                     "pos": "[v1,aux-v]",
+                     "gloss": "to be ...-ing",
+                     "info": "after the -te form of a verb; indicates continuing action",
+                     "pos": "[aux-v,v1]",
+                   },
+                   {
+                     "gloss": "to have ...-ed; to be ...-ed",
+                     "info": "after the -te form of a verb; indicates continuing state",
+                     "pos": "[aux-v,v1]",
                    },
                  ],
                  "prop": [
                    {
                      "pos": "v1",
@@ -389,11 +424,11 @@
                },
              ],
              "kana": "„ÅÑ„Å¶",
              "reading": "„ÅÑ„Å¶",
              "score": 40,
-             "seq": 10547541,
+             "seq": 25839478,
              "text": "„ÅÑ„Å¶",
            },
            [],
          ],
          [
@@ -426,11 +461,11 @@
                        },
                      ],
                      "kana": "„Åä„Åè„Å£„Å¶",
                      "reading": "„Åä„Åè„Å£„Å¶",
                      "score": 0,
-                     "seq": 10020730,
+                     "seq": 25296714,
                      "text": "„Åä„Åè„Å£„Å¶",
                    },
                    {
                      "conj": [
                        {
@@ -499,11 +534,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Å£„Å¶",
                      "reading": "„ÅÑ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10346512,
+                     "seq": 25632665,
                      "suffix": "is becoming / action starting now and continuing",
                      "text": "„ÅÑ„Å£„Å¶",
                    },
                    {
                      "conj": [
@@ -516,13 +551,18 @@
                            {
                              "gloss": "to stay",
                              "pos": "[v1,vi]",
                            },
                            {
-                             "gloss": "to be ...-ing; to have been ...-ing",
-                             "info": "after the -te form of a verb; indicates continuing action or state",
-                             "pos": "[v1,aux-v]",
+                             "gloss": "to be ...-ing",
+                             "info": "after the -te form of a verb; indicates continuing action",
+                             "pos": "[aux-v,v1]",
+                           },
+                           {
+                             "gloss": "to have ...-ed; to be ...-ed",
+                             "info": "after the -te form of a verb; indicates continuing state",
+                             "pos": "[aux-v,v1]",
                            },
                          ],
                          "prop": [
                            {
                              "pos": "v1",
@@ -534,11 +574,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Åü",
                      "reading": "„ÅÑ„Åü",
                      "score": 0,
-                     "seq": 10547537,
+                     "seq": 25839474,
                      "suffix": "indicates continuing action (to be ...ing)",
                      "text": "„ÅÑ„Åü",
                    },
                  ],
                  "compound": [
@@ -593,11 +633,11 @@
                        },
                      ],
                      "kana": "„Åä„Åè„Å£„Å¶",
                      "reading": "„Åä„Åè„Å£„Å¶",
                      "score": 0,
-                     "seq": 10270201,
+                     "seq": 25553767,
                      "text": "„Åä„Åè„Å£„Å¶",
                    },
                    {
                      "conj": [
                        {
@@ -666,11 +706,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Å£„Å¶",
                      "reading": "„ÅÑ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10346512,
+                     "seq": 25632665,
                      "suffix": "is becoming / action starting now and continuing",
                      "text": "„ÅÑ„Å£„Å¶",
                    },
                    {
                      "conj": [
@@ -683,13 +723,18 @@
                            {
                              "gloss": "to stay",
                              "pos": "[v1,vi]",
                            },
                            {
-                             "gloss": "to be ...-ing; to have been ...-ing",
-                             "info": "after the -te form of a verb; indicates continuing action or state",
-                             "pos": "[v1,aux-v]",
+                             "gloss": "to be ...-ing",
+                             "info": "after the -te form of a verb; indicates continuing action",
+                             "pos": "[aux-v,v1]",
+                           },
+                           {
+                             "gloss": "to have ...-ed; to be ...-ed",
+                             "info": "after the -te form of a verb; indicates continuing state",
+                             "pos": "[aux-v,v1]",
                            },
                          ],
                          "prop": [
                            {
                              "pos": "v1",
@@ -701,11 +746,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Åü",
                      "reading": "„ÅÑ„Åü",
                      "score": 0,
-                     "seq": 10547537,
+                     "seq": 25839474,
                      "suffix": "indicates continuing action (to be ...ing)",
                      "text": "„ÅÑ„Åü",
                    },
                  ],
                  "compound": [
@@ -740,10 +785,10 @@
              "text": "„Çà„Å≠",
            },
            [],
          ],
        ],
-       900,
+       876,
      ],
    ],
    ". ",
  ]

- Expected  - 36
+ Received  + 81

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åù„ÅÆ„ÅØ„Å™„Åó„ÅØ„ÅÇ„Å®„Åß„Åæ„Å®„ÇÅ„Å¶„Åç„ÅÑ„Å¶„Åä„Åè„Å£„Å¶„ÅÑ„Å£„Å¶„Åü„Çà„Å≠„ÄÇ" (limit: 1) [315.22ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -24,11 +24,11 @@
                },
              ],
              "kana": "„Åü„Åπ„Åô„Åé„Åü",
              "reading": "„Åü„Åπ„Åô„Åé„Åü",
              "score": 275,
-             "seq": 10089462,
+             "seq": 25367304,
              "text": "„Åü„Åπ„Åô„Åé„Åü",
            },
            [],
          ],
          [
@@ -232,11 +232,11 @@
                },
              ],
              "kana": "„Åó„Åü",
              "reading": "„Åó„Åü",
              "score": 40,
-             "seq": 10150860,
+             "seq": 25430291,
              "text": "„Åó„Åü",
            },
            [],
          ],
          [
@@ -282,11 +282,11 @@
                },
              ],
              "kana": "„ÅÜ„Åî„Åë„Å∞",
              "reading": "„ÅÜ„Åî„Åë„Å∞",
              "score": 176,
-             "seq": 10007832,
+             "seq": 25283225,
              "text": "„ÅÜ„Åî„Åë„Å∞",
            },
            [],
          ],
          [
@@ -408,11 +408,11 @@
                },
              ],
              "kana": "„ÇÑ„Å£„Å¶",
              "reading": "„ÇÑ„Å£„Å¶",
              "score": 40,
-             "seq": 10399708,
+             "seq": 25687374,
              "text": "„ÇÑ„Å£„Å¶",
            },
            [],
          ],
          [
@@ -465,11 +465,11 @@
                          "gloss": "to be promoted",
                          "pos": "[v5r,vi]",
                        },
                        {
                          "gloss": "to do ...",
-                         "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                         "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                          "pos": "[aux-v,v5r]",
                        },
                      ],
                      "prop": [
                        {
@@ -482,11 +482,11 @@
                    },
                  ],
                  "kana": "„Å™„Å£„Å¶",
                  "reading": "„Å™„Å£„Å¶",
                  "score": 0,
-                 "seq": 10371753,
+                 "seq": 25658509,
                  "text": "„Å™„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -507,11 +507,11 @@
                          "gloss": "to do completely; to finish",
                          "info": "after the -te form of a verb",
                          "pos": "[aux-v,v5u]",
                        },
                        {
-                         "gloss": "to do accidentally; to do without meaning to; to happen to do",
+                         "gloss": "to do accidentally; to do without meaning to; to happen to do; to end up ...",
                          "info": "after the -te form of a verb",
                          "pos": "[aux-v,v5u]",
                        },
                      ],
                      "prop": [
@@ -525,11 +525,11 @@
                    },
                  ],
                  "kana": "„Åó„Åæ„ÅÑ",
                  "reading": "„Åó„Åæ„ÅÑ",
                  "score": 0,
-                 "seq": 10584219,
+                 "seq": 25877923,
                  "suffix": "indicates completion (to finish ...)",
                  "text": "„Åó„Åæ„ÅÑ",
                },
                {
                  "conj": [],

- Expected  - 8
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åü„Åπ„Åô„Åé„Åü„Å∂„Çì„ÅØ„ÅÇ„Åó„Åü„ÅÜ„Åî„Åë„Å∞„ÅÑ„ÅÑ„ÇÑ„Å£„Å¶„Å™„Å£„Å¶„Åó„Åæ„ÅÑ„Åå„Å°„ÄÇ" (limit: 1) [205.10ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,19 +25,19 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "to say; to utter; to declare",
-                 "pos": "[v5u]",
+                 "pos": "[v5u,vt]",
                },
                {
                  "gloss": "to name; to call",
-                 "pos": "[v5u]",
+                 "pos": "[v5u,vt]",
                },
                {
                  "gloss": "to go (e.g. "the alarm went ping"); to make a noise",
-                 "pos": "[v5u]",
+                 "pos": "[v5u,vi]",
                },
              ],
              "kana": "„ÅÑ„ÅÜ",
              "reading": "„ÅÑ„ÅÜ",
              "score": 16,
@@ -104,11 +104,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -152,11 +159,11 @@
                },
              ],
              "kana": "„Çà„Åã„Å£„Åü",
              "reading": "„Çà„Åã„Å£„Åü",
              "score": 90,
-             "seq": 10122076,
+             "seq": 25400581,
              "text": "„Çà„Åã„Å£„Åü",
            },
            [],
          ],
          [
@@ -226,20 +233,20 @@
                          "gloss": "to spread; to extend; to expand; to enlarge; to widen; to broaden",
                          "pos": "[v1,vt]",
                        },
                        {
                          "gloss": "to unfold; to open; to unroll; to unwrap",
+                         "info": "occ. written Â±ï„Åí„Çã",
                          "pos": "[v1,vt]",
                        },
                        {
                          "gloss": "to scatter about; to spread around",
                          "pos": "[v1,vt]",
                        },
                        {
                          "gloss": "to make flourish; to cause to prosper",
-                         "pos": "[v1,vt]",
+                         "pos": "[vt,v1]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v1",
@@ -253,11 +260,11 @@
                },
              ],
              "kana": "„Å≤„Çç„Åí„Åï„Åõ„Çâ„Çå„Åü",
              "reading": "„Å≤„Çç„Åí„Åï„Åõ„Çâ„Çå„Åü",
              "score": 384,
-             "seq": 11194626,
+             "seq": 26534416,
              "text": "„Å≤„Çç„Åí„Åï„Åõ„Çâ„Çå„Åü",
            },
            [],
          ],
        ],

- Expected  - 6
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Å≤„Å®„Åì„Å®„ÅÑ„ÅÜ„Å†„Åë„Åß„Çà„Åã„Å£„Åü„ÅÆ„Å´„ÇÄ„Çä„ÇÑ„Çä„Å≤„Çç„Åí„Åï„Åõ„Çâ„Çå„Åü„ÄÇ" (limit: 1) [323.82ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -55,11 +55,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -67,20 +67,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -227,11 +229,11 @@
                },
              ],
              "kana": "„Åî„Åæ„Åã„Åó„Å¶",
              "reading": "„Åî„Åæ„Åã„Åó„Å¶",
              "score": 525,
-             "seq": 10314466,
+             "seq": 25598987,
              "text": "„Åî„Åæ„Åã„Åó„Å¶",
            },
            [],
          ],
          [
@@ -248,12 +250,12 @@
                      "gloss": "to smile",
                      "pos": "[v5u,vi]",
                    },
                    {
                      "gloss": "to sneer; to ridicule",
-                     "info": "occ. written as Âó§„ÅÜ",
-                     "pos": "[v5u,vt,vi]",
+                     "info": "esp. Âó§„ÅÜ",
+                     "pos": "[v5u,vt]",
                    },
                    {
                      "gloss": "to be dumbfounded; to be flabbergasted",
                      "info": "as Á¨ë„Å£„Å¶„Åó„Åæ„ÅÜ or Á¨ë„Å£„Å°„ÇÉ„ÅÜ",
                      "pos": "[v5u,vi]",
@@ -270,11 +272,11 @@
                },
              ],
              "kana": "„Çè„Çâ„Å£„Å¶",
              "reading": "„Çè„Çâ„Å£„Å¶",
              "score": 36,
-             "seq": 10162684,
+             "seq": 25443027,
              "text": "„Çè„Çâ„Å£„Å¶",
            },
            [],
          ],
          [
@@ -337,11 +339,11 @@
                },
              ],
              "kana": "„Åä„ÅÑ„Åü",
              "reading": "„Åä„ÅÑ„Åü",
              "score": 90,
-             "seq": 10297984,
+             "seq": 25582578,
              "text": "„Åä„ÅÑ„Åü",
            },
            [],
          ],
        ],

- Expected  - 10
+ Received  + 12

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÅÑ„Åæ„Åï„Çâ„Åç„Åç„Åã„Åà„Åô„ÅÆ„ÇÇ„ÅØ„Åö„Åã„Åó„ÅÑ„Åã„Çâ„Åî„Åæ„Åã„Åó„Å¶„Çè„Çâ„Å£„Å¶„Åä„ÅÑ„Åü„ÄÇ" (limit: 1) [388.50ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -30,11 +30,11 @@
                    },
                  ],
                  "kana": "„Åæ„Å´„ÅÇ„ÅÑ",
                  "reading": "„Åæ„Å´„ÅÇ„ÅÑ",
                  "score": 0,
-                 "seq": 10042112,
+                 "seq": 25318473,
                  "text": "„Åæ„Å´„ÅÇ„ÅÑ",
                },
                {
                  "conj": [],
                  "kana": "„Åù„ÅÜ",
@@ -241,11 +241,11 @@
                },
              ],
              "kana": "„Åì„Å™„Åè„Å¶",
              "reading": "„Åì„Å™„Åè„Å¶",
              "score": 64,
-             "seq": 10219041,
+             "seq": 25501296,
              "text": "„Åì„Å™„Åè„Å¶",
            },
            [],
          ],
          [
@@ -281,11 +281,11 @@
                    },
                  ],
                  "kana": "„ÅÆ„Åå„Åó„Å¶",
                  "reading": "„ÅÆ„Åå„Åó„Å¶",
                  "score": 0,
-                 "seq": 10109891,
+                 "seq": 25388277,
                  "text": "„ÅÆ„Åå„Åó„Å¶",
                },
                {
                  "conj": [
                    {
@@ -306,11 +306,11 @@
                          "gloss": "to do completely; to finish",
                          "info": "after the -te form of a verb",
                          "pos": "[aux-v,v5u]",
                        },
                        {
-                         "gloss": "to do accidentally; to do without meaning to; to happen to do",
+                         "gloss": "to do accidentally; to do without meaning to; to happen to do; to end up ...",
                          "info": "after the -te form of a verb",
                          "pos": "[aux-v,v5u]",
                        },
                      ],
                      "prop": [
@@ -324,11 +324,11 @@
                    },
                  ],
                  "kana": "„Åó„Åæ„Å£„Åü",
                  "reading": "„Åó„Åæ„Å£„Åü",
                  "score": 0,
-                 "seq": 10584171,
+                 "seq": 25877875,
                  "suffix": "indicates completion (to finish ...)",
                  "text": "„Åó„Åæ„Å£„Åü",
                },
              ],
              "compound": [

- Expected  - 5
+ Received  + 5

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åæ„Å´„ÅÇ„ÅÑ„Åù„ÅÜ„Å†„Å£„Åü„ÅÆ„Å´„Éê„Çπ„Åå„Åì„Å™„Åè„Å¶„ÅÆ„Åå„Åó„Å¶„Åó„Åæ„Å£„Åü„ÄÇ" (limit: 1) [188.11ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -111,11 +111,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -128,11 +135,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "once more; again",
-                 "pos": "[exp]",
+                 "pos": "[adv,exp]",
                },
              ],
              "kana": "„ÇÇ„ÅÜ„ÅÑ„Å°„Å©",
              "reading": "„ÇÇ„ÅÜ„ÅÑ„Å°„Å©",
              "score": 275,
@@ -163,11 +170,11 @@
                },
              ],
              "kana": "„Çà„Åø„Å™„Åä„Åõ„Å∞",
              "reading": "„Çà„Åø„Å™„Åä„Åõ„Å∞",
              "score": 396,
-             "seq": 10610247,
+             "seq": 25904825,
              "text": "„Çà„Åø„Å™„Åä„Åõ„Å∞",
            },
            [],
          ],
          [
@@ -206,11 +213,11 @@
                },
              ],
              "kana": "„Çà„Åã„Å£„Åü",
              "reading": "„Çà„Åã„Å£„Åü",
              "score": 90,
-             "seq": 10122076,
+             "seq": 25400581,
              "text": "„Çà„Åã„Å£„Åü",
            },
            [],
          ],
          [
@@ -302,11 +309,11 @@
                },
              ],
              "kana": "„Åô„Åî„Åè",
              "reading": "„Åô„Åî„Åè",
              "score": 90,
-             "seq": 10524417,
+             "seq": 25815975,
              "text": "„Åô„Åî„Åè",
            },
            [],
          ],
          [

- Expected  - 4
+ Received  + 12

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÅÇ„Å®„Åß„ÇÇ„ÅÜ„ÅÑ„Å°„Å©„Çà„Åø„Å™„Åä„Åõ„Å∞„Çà„Åã„Å£„Åü„Å£„Å¶„Åô„Åî„Åè„Åä„ÇÇ„ÅÜ„ÄÇ" (limit: 1) [150.75ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -53,11 +53,11 @@
                },
              ],
              "kana": "„ÅÑ„ÅÑ„Å£„Å¶„ÅÑ„Çè„Çå„Åü",
              "reading": "„ÅÑ„ÅÑ„Å£„Å¶„ÅÑ„Çè„Çå„Åü",
              "score": 462,
-             "seq": 12191184,
+             "seq": 27610459,
              "text": "„ÅÑ„ÅÑ„Å£„Å¶„ÅÑ„Çè„Çå„Åü",
            },
            [],
          ],
          [
@@ -163,11 +163,11 @@
                        },
                      ],
                      "kana": "„ÇÇ„Å£„Å¶",
                      "reading": "„ÇÇ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10618848,
+                     "seq": 25913716,
                      "text": "„ÇÇ„Å£„Å¶",
                    },
                    {
                      "conj": [
                        {
@@ -236,11 +236,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Åç",
                      "reading": "„ÅÑ„Åç",
                      "score": 0,
-                     "seq": 10346556,
+                     "seq": 25632776,
                      "suffix": "is becoming / action starting now and continuing",
                      "text": "„ÅÑ„Åç",
                    },
                    {
                      "conj": [],
@@ -304,11 +304,11 @@
                        },
                      ],
                      "kana": "„ÇÇ„Å£„Å¶",
                      "reading": "„ÇÇ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10357500,
+                     "seq": 25643968,
                      "text": "„ÇÇ„Å£„Å¶",
                    },
                    {
                      "conj": [
                        {
@@ -377,11 +377,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Åç",
                      "reading": "„ÅÑ„Åç",
                      "score": 0,
-                     "seq": 10346556,
+                     "seq": 25632776,
                      "suffix": "is becoming / action starting now and continuing",
                      "text": "„ÅÑ„Åç",
                    },
                    {
                      "conj": [],
@@ -425,11 +425,11 @@
                        },
                      ],
                      "kana": "„ÇÇ„Å£„Å¶",
                      "reading": "„ÇÇ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10073576,
+                     "seq": 25351400,
                      "text": "„ÇÇ„Å£„Å¶",
                    },
                    {
                      "conj": [
                        {
@@ -498,11 +498,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Åç",
                      "reading": "„ÅÑ„Åç",
                      "score": 0,
-                     "seq": 10346556,
+                     "seq": 25632776,
                      "suffix": "is becoming / action starting now and continuing",
                      "text": "„ÅÑ„Åç",
                    },
                    {
                      "conj": [],
@@ -530,11 +530,11 @@
                      "conj": [
                        {
                          "gloss": [
                            {
                              "gloss": "to take (something) along; to bring with one; to carry (something) away; to bear",
-                             "pos": "[vt,v5k-s,exp]",
+                             "pos": "[v5k-s,exp]",
                            },
                          ],
                          "prop": [
                            {
                              "pos": "v5k-s",
@@ -546,11 +546,11 @@
                        },
                      ],
                      "kana": "„ÇÇ„Å£„Å¶„ÅÑ„Åç",
                      "reading": "„ÇÇ„Å£„Å¶„ÅÑ„Åç",
                      "score": 0,
-                     "seq": 10211901,
+                     "seq": 25493497,
                      "text": "„ÇÇ„Å£„Å¶„ÅÑ„Åç",
                    },
                    {
                      "conj": [],
                      "kana": "„Åü„ÅÑ",

- Expected  - 9
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Å™„Åè„Å¶„ÇÇ„ÅÑ„ÅÑ„Å£„Å¶„ÅÑ„Çè„Çå„Åü„Åë„Å©„ÇÑ„Å£„Å±„Çä„ÇÇ„Å£„Å¶„ÅÑ„Åç„Åü„ÅÑ„ÄÇ" (limit: 1) [190.51ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -45,11 +45,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Åù„Åå„Å™„Åè„Å¶",
                  "reading": "„ÅÑ„Åù„Åå„Å™„Åè„Å¶",
                  "score": 0,
-                 "seq": 10267302,
+                 "seq": 25550997,
                  "text": "„ÅÑ„Åù„Åå„Å™„Åè„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÇÇ„ÅÑ„ÅÑ",
@@ -172,11 +172,11 @@
                    },
                  ],
                  "kana": "„Åì„Åº„Åó„Å¶",
                  "reading": "„Åì„Åº„Åó„Å¶",
                  "score": 0,
-                 "seq": 10492465,
+                 "seq": 25782866,
                  "text": "„Åì„Åº„Åó„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„Å°„ÇÉ„ÅÜ",
@@ -208,15 +208,11 @@
                  "pos": "[int]",
                },
                {
                  "gloss": "huh?; what?",
                  "pos": "[int]",
-               },
-               {
-                 "gloss": "not",
-                 "info": "negative verb ending used in informal speech; abbr. of negative verb ending „Å¨",
-                 "pos": "[aux-v,suf]",
                },
                {
                  "gloss": "'s; of; belonging to",
                  "info": "abbr. of particle „ÅÆ; indicates possessive",
                  "pos": "[prt]",

- Expected  - 7
+ Received  + 2

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åù„Çì„Å™„Å´„ÅÑ„Åù„Åå„Å™„Åè„Å¶„ÇÇ„ÅÑ„ÅÑ„ÅÆ„Å´„ÅÑ„Åù„ÅÑ„Åß„Åì„Åº„Åó„Å°„ÇÉ„ÅÜ„Çì„Å†„Çà„Å≠„ÄÇ" (limit: 1) [245.26ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
                },
              ],
              "kana": "„Å≠„ÇÄ„Åè„Å™„ÅÑ",
              "reading": "„Å≠„ÇÄ„Åè„Å™„ÅÑ",
              "score": 275,
-             "seq": 10000281,
+             "seq": 25275558,
              "text": "„Å≠„ÇÄ„Åè„Å™„ÅÑ",
            },
            [],
          ],
          [
@@ -274,11 +274,11 @@
                    },
                  ],
                  "kana": "„Åó„Å¶",
                  "reading": "„Åó„Å¶",
                  "score": 0,
-                 "seq": 10150864,
+                 "seq": 25430295,
                  "text": "„Åó„Å¶",
                },
                {
                  "conj": [
                    {
@@ -290,13 +290,18 @@
                        {
                          "gloss": "to stay",
                          "pos": "[v1,vi]",
                        },
                        {
-                         "gloss": "to be ...-ing; to have been ...-ing",
-                         "info": "after the -te form of a verb; indicates continuing action or state",
-                         "pos": "[v1,aux-v]",
+                         "gloss": "to be ...-ing",
+                         "info": "after the -te form of a verb; indicates continuing action",
+                         "pos": "[aux-v,v1]",
+                       },
+                       {
+                         "gloss": "to have ...-ed; to be ...-ed",
+                         "info": "after the -te form of a verb; indicates continuing state",
+                         "pos": "[aux-v,v1]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v1",
@@ -308,11 +313,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Åü",
                  "reading": "„ÅÑ„Åü",
                  "score": 0,
-                 "seq": 10547537,
+                 "seq": 25839474,
                  "suffix": "indicates continuing action (to be ...ing)",
                  "text": "„ÅÑ„Åü",
                },
              ],
              "compound": [
@@ -463,11 +468,11 @@
                },
              ],
              "kana": "„Åä„ÇÇ„Åè",
              "reading": "„Åä„ÇÇ„Åè",
              "score": 36,
-             "seq": 10374925,
+             "seq": 25661985,
              "text": "„Åä„ÇÇ„Åè",
            },
            [],
          ],
          [
@@ -520,11 +525,11 @@
                          "gloss": "to be promoted",
                          "pos": "[v5r,vi]",
                        },
                        {
                          "gloss": "to do ...",
-                         "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                         "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                          "pos": "[aux-v,v5r]",
                        },
                      ],
                      "prop": [
                        {
@@ -537,11 +542,11 @@
                    },
                  ],
                  "kana": "„Å™„Å£„Å¶",
                  "reading": "„Å™„Å£„Å¶",
                  "score": 0,
-                 "seq": 10371753,
+                 "seq": 25658509,
                  "text": "„Å™„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -580,11 +585,11 @@
                    },
                  ],
                  "kana": "„Åç„Å¶",
                  "reading": "„Åç„Å¶",
                  "score": 0,
-                 "seq": 10219039,
+                 "seq": 25501294,
                  "suffix": "indicates action that had been continuing up till now / came to be ",
                  "text": "„Åç„Å¶",
                },
                {
                  "conj": [],

- Expected  - 10
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Å≠„ÇÄ„Åè„Å™„ÅÑ„Åµ„Çä„Çí„Åó„Å¶„Åü„Åë„Å©„Åæ„Å∂„Åü„Åå„Åä„ÇÇ„Åè„Å™„Å£„Å¶„Åç„Å¶„Çã„ÄÇ" (limit: 1) [188.81ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -84,55 +84,97 @@
            [],
          ],
          [
            "makerarenai",
            {
-             "conj": [
+             "alternative": [
                {
-                 "gloss": [
+                 "conj": [
                    {
-                     "gloss": "to lose; to be defeated",
-                     "pos": "[v1,vi]",
-                   },
-                   {
-                     "gloss": "to succumb; to give in; to surrender; to yield",
-                     "pos": "[v1,vi]",
-                   },
-                   {
-                     "gloss": "to be inferior to",
-                     "pos": "[v1,vi]",
-                   },
-                   {
-                     "gloss": "to break out in a rash due to (e.g. lacquer, shaving, etc.)",
-                     "pos": "[v1,vi]",
-                   },
-                   {
-                     "gloss": "to reduce the price; to give a discount; to throw in (something extra) for free",
-                     "pos": "[v1,vt]",
+                     "gloss": [
+                       {
+                         "gloss": "to lose; to be defeated",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to succumb; to give in; to surrender; to yield",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to be inferior to",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to break out in a rash due to (e.g. lacquer, shaving, etc.)",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to reduce the price; to give a discount; to throw in (something extra) for free",
+                         "pos": "[v1,vt]",
+                       },
+                     ],
+                     "prop": [
+                       {
+                         "neg": true,
+                         "pos": "v1",
+                         "type": "Potential",
+                       },
+                     ],
+                     "reading": "Ë≤†„Åë„Çã „Äê„Åæ„Åë„Çã„Äë",
+                     "readok": true,
                    },
                  ],
-                 "prop": [
-                   {
-                     "neg": true,
-                     "pos": "v1",
-                     "type": "Potential",
-                   },
+                 "kana": "„Åæ„Åë„Çâ„Çå„Å™„ÅÑ",
+                 "reading": "„Åæ„Åë„Çâ„Çå„Å™„ÅÑ",
+                 "score": 396,
+                 "seq": 25804711,
+                 "text": "„Åæ„Åë„Çâ„Çå„Å™„ÅÑ",
+               },
+               {
+                 "conj": [
                    {
-                     "neg": true,
-                     "pos": "v1",
-                     "type": "Passive",
+                     "gloss": [
+                       {
+                         "gloss": "to lose; to be defeated",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to succumb; to give in; to surrender; to yield",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to be inferior to",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to break out in a rash due to (e.g. lacquer, shaving, etc.)",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to reduce the price; to give a discount; to throw in (something extra) for free",
+                         "pos": "[v1,vt]",
+                       },
+                     ],
+                     "prop": [
+                       {
+                         "neg": true,
+                         "pos": "v1",
+                         "type": "Passive",
+                       },
+                     ],
+                     "reading": "Ë≤†„Åë„Çã „Äê„Åæ„Åë„Çã„Äë",
+                     "readok": true,
                    },
                  ],
-                 "reading": "Ë≤†„Åë„Çã „Äê„Åæ„Åë„Çã„Äë",
-                 "readok": true,
+                 "kana": "„Åæ„Åë„Çâ„Çå„Å™„ÅÑ",
+                 "reading": "„Åæ„Åë„Çâ„Çå„Å™„ÅÑ",
+                 "score": 396,
+                 "seq": 25804715,
+                 "text": "„Åæ„Åë„Çâ„Çå„Å™„ÅÑ",
                },
              ],
-             "kana": "„Åæ„Åë„Çâ„Çå„Å™„ÅÑ",
-             "reading": "„Åæ„Åë„Çâ„Çå„Å™„ÅÑ",
-             "score": 396,
-             "seq": 10513480,
-             "text": "„Åæ„Åë„Çâ„Çå„Å™„ÅÑ",
            },
            [],
          ],
          [
            "tte",
@@ -320,11 +362,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„ÅÑ„Åç„Åã„Åõ„Å¶",
                  "reading": "„ÅÑ„ÅÑ„Åç„Åã„Åõ„Å¶",
                  "score": 0,
-                 "seq": 10350273,
+                 "seq": 25636374,
                  "text": "„ÅÑ„ÅÑ„Åç„Åã„Åõ„Å¶",
                },
                {
                  "conj": [
                    {
@@ -363,11 +405,11 @@
                    },
                  ],
                  "kana": "„Åç„Åü",
                  "reading": "„Åç„Åü",
                  "score": 0,
-                 "seq": 10219035,
+                 "seq": 25501290,
                  "suffix": "indicates action that had been continuing up till now / came to be ",
                  "text": "„Åç„Åü",
                },
              ],
              "compound": [

- Expected  - 38
+ Received  + 79

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åì„Åì„Å†„Åë„ÅØ„Åæ„Åë„Çâ„Çå„Å™„ÅÑ„Å£„Å¶„Åò„Å∂„Çì„Å´„ÅÑ„ÅÑ„Åç„Åã„Åõ„Å¶„Åç„Åü„ÄÇ" (limit: 1) [322.64ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -96,11 +96,11 @@
                    },
                  ],
                  "kana": "„ÅØ„ÇÑ„Åè",
                  "reading": "„ÅØ„ÇÑ„Åè",
                  "score": 36,
-                 "seq": 10241196,
+                 "seq": 25524047,
                  "text": "„ÅØ„ÇÑ„Åè",
                },
              ],
            },
            [],
@@ -159,11 +159,11 @@
                    },
                  ],
                  "kana": "„Åä„Çè„Çâ„Åõ„Çà„ÅÜ",
                  "reading": "„Åä„Çè„Çâ„Åõ„Çà„ÅÜ",
                  "score": 0,
-                 "seq": 11166491,
+                 "seq": 26503809,
                  "text": "„Åä„Çè„Çâ„Åõ„Çà„ÅÜ",
                },
                {
                  "conj": [
                    {
@@ -262,11 +262,11 @@
                {
                  "conj": [
                    {
                      "gloss": [
                        {
-                         "gloss": "to cut corners; to be shoddy",
+                         "gloss": "to cut corners; to be shoddy; to slack off; to go easy (on an opponent); to hold back (in a competition, fight, etc.)",
                          "pos": "[v5k,exp]",
                        },
                      ],
                      "prop": [
                        {
@@ -279,11 +279,11 @@
                    },
                  ],
                  "kana": "„Å¶„Çí„Å¨„ÅÑ„Å¶",
                  "reading": "„Å¶„Çí„Å¨„ÅÑ„Å¶",
                  "score": 0,
-                 "seq": 10273437,
+                 "seq": 25557304,
                  "text": "„Å¶„Çí„Å¨„ÅÑ„Å¶",
                },
                {
                  "conj": [
                    {
@@ -309,11 +309,11 @@
                    },
                  ],
                  "kana": "„Å°„ÇÉ„Å£„Åü",
                  "reading": "„Å°„ÇÉ„Å£„Åü",
                  "score": 0,
-                 "seq": 10065269,
+                 "seq": 25342360,
                  "suffix": "indicates completion (to finish ...)",
                  "text": "„Å°„ÇÉ„Å£„Åü",
                },
              ],
              "compound": [

- Expected  - 5
+ Received  + 5

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åß„Åç„Çã„Å†„Åë„ÅØ„ÇÑ„Åè„Åä„Çè„Çâ„Åõ„Çà„ÅÜ„Å®„Åó„Å¶„Åã„Åà„Å£„Å¶„Å¶„Çí„Å¨„ÅÑ„Å°„ÇÉ„Å£„Åü„ÄÇ" (limit: 1) [296.70ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -84,11 +84,11 @@
                        },
                      ],
                      "kana": "„Åô„Åé„Å¶",
                      "reading": "„Åô„Åé„Å¶",
                      "score": 0,
-                     "seq": 10639364,
+                     "seq": 25935047,
                      "suffix": "to be too (much) ...",
                      "text": "„Åô„Åé„Å¶",
                    },
                  ],
                  "compound": [
@@ -170,11 +170,11 @@
                        },
                      ],
                      "kana": "„Åô„Åé„Å¶",
                      "reading": "„Åô„Åé„Å¶",
                      "score": 0,
-                     "seq": 10639364,
+                     "seq": 25935047,
                      "suffix": "to be too (much) ...",
                      "text": "„Åô„Åé„Å¶",
                    },
                  ],
                  "compound": [
@@ -252,11 +252,11 @@
                        },
                      ],
                      "kana": "„Åô„Åé„Å¶",
                      "reading": "„Åô„Åé„Å¶",
                      "score": 0,
-                     "seq": 10639364,
+                     "seq": 25935047,
                      "suffix": "to be too (much) ...",
                      "text": "„Åô„Åé„Å¶",
                    },
                  ],
                  "compound": [
@@ -390,11 +390,11 @@
                    },
                  ],
                  "kana": "„Å™„ÇÅ„Å¶",
                  "reading": "„Å™„ÇÅ„Å¶",
                  "score": 0,
-                 "seq": 10119845,
+                 "seq": 25399123,
                  "text": "„Å™„ÇÅ„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÅÑ„Çã",
@@ -717,11 +717,11 @@
                      "gloss": "to be promoted",
                      "pos": "[v5r,vi]",
                    },
                    {
                      "gloss": "to do ...",
-                     "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                     "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                      "pos": "[aux-v,v5r]",
                    },
                  ],
                  "prop": [
                    {
@@ -734,11 +734,11 @@
                },
              ],
              "kana": "„Å™„Å£„Åü",
              "reading": "„Å™„Å£„Åü",
              "score": 40,
-             "seq": 10371749,
+             "seq": 25658501,
              "text": "„Å™„Å£„Åü",
            },
            [],
          ],
        ],

- Expected  - 6
+ Received  + 6

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÅÇ„Å§„Åô„Åé„Å¶„Ç¢„Ç§„Çπ„Çí„Å™„ÇÅ„Å¶„Çã„ÅÜ„Å°„Å´„Å¶„Åå„Å≠„Å∞„Å≠„Å∞„Å´„Å™„Å£„Åü„ÄÇ" (limit: 1) [134.53ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -42,11 +42,11 @@
                },
              ],
              "kana": "„Å™„Çâ„Åπ„Å™„Åä„Åõ„Å∞",
              "reading": "„Å™„Çâ„Åπ„Å™„Åä„Åõ„Å∞",
              "score": 294,
-             "seq": 10247201,
+             "seq": 25530050,
              "text": "„Å™„Çâ„Åπ„Å™„Åä„Åõ„Å∞",
            },
            [],
          ],
          [
@@ -173,11 +173,11 @@
                  "gloss": "to be promoted",
                  "pos": "[v5r,vi]",
                },
                {
                  "gloss": "to do ...",
-                 "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                 "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                  "pos": "[aux-v,v5r]",
                },
              ],
              "kana": "„Å™„Çã",
              "reading": "„Å™„Çã",
@@ -357,11 +357,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -543,11 +550,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Åì„ÅÜ",
                  "reading": "„ÅÑ„Åì„ÅÜ",
                  "score": 36,
-                 "seq": 10346540,
+                 "seq": 25632760,
                  "text": "„ÅÑ„Åì„ÅÜ",
                },
              ],
            },
            [],

- Expected  - 3
+ Received  + 11

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÅÇ„Å®„Åã„Çâ„Å™„Çâ„Åπ„Å™„Åä„Åõ„Å∞„Åç„Çå„ÅÑ„Å´„Å™„Çã„Åã„Çâ„ÅÑ„Åæ„ÅØ„Å™„Çä„ÇÜ„Åç„Åß„ÅÑ„Åì„ÅÜ„ÄÇ" (limit: 1) [249.66ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -104,11 +104,11 @@
                    },
                  ],
                  "kana": "„Åæ„Åà",
                  "reading": "„Åæ„Åà",
                  "score": 16,
-                 "seq": 10345191,
+                 "seq": 25631392,
                  "text": "„Åæ„Åà",
                },
                {
                  "conj": [
                    {
@@ -133,11 +133,11 @@
                    },
                  ],
                  "kana": "„Åæ„Åà",
                  "reading": "„Åæ„Åà",
                  "score": 12,
-                 "seq": 10544164,
+                 "seq": 25836406,
                  "text": "„Åæ„Åà",
                },
              ],
            },
            [],
@@ -248,11 +248,11 @@
                    },
                  ],
                  "kana": "„Åµ„ÅÑ„Å¶",
                  "reading": "„Åµ„ÅÑ„Å¶",
                  "score": 36,
-                 "seq": 10415576,
+                 "seq": 25703756,
                  "text": "„Åµ„ÅÑ„Å¶",
                },
                {
                  "conj": [
                    {
@@ -273,11 +273,11 @@
                    },
                  ],
                  "kana": "„Åµ„ÅÑ„Å¶",
                  "reading": "„Åµ„ÅÑ„Å¶",
                  "score": 36,
-                 "seq": 10541529,
+                 "seq": 25833879,
                  "text": "„Åµ„ÅÑ„Å¶",
                },
              ],
            },
            [],
@@ -471,11 +471,11 @@
                    },
                  ],
                  "kana": "„Åó„Å¶",
                  "reading": "„Åó„Å¶",
                  "score": 0,
-                 "seq": 10150864,
+                 "seq": 25430295,
                  "text": "„Åó„Å¶",
                },
                {
                  "conj": [
                    {
@@ -487,13 +487,18 @@
                        {
                          "gloss": "to stay",
                          "pos": "[v1,vi]",
                        },
                        {
-                         "gloss": "to be ...-ing; to have been ...-ing",
-                         "info": "after the -te form of a verb; indicates continuing action or state",
-                         "pos": "[v1,aux-v]",
+                         "gloss": "to be ...-ing",
+                         "info": "after the -te form of a verb; indicates continuing action",
+                         "pos": "[aux-v,v1]",
+                       },
+                       {
+                         "gloss": "to have ...-ed; to be ...-ed",
+                         "info": "after the -te form of a verb; indicates continuing state",
+                         "pos": "[aux-v,v1]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v1",
@@ -505,11 +510,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Åü",
                  "reading": "„ÅÑ„Åü",
                  "score": 0,
-                 "seq": 10547537,
+                 "seq": 25839474,
                  "suffix": "indicates continuing action (to be ...ing)",
                  "text": "„ÅÑ„Åü",
                },
              ],
              "compound": [

- Expected  - 9
+ Received  + 14

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åì„Åº„Çå„Çã„Åæ„Åà„Å´„Åµ„ÅÑ„Å¶„Åä„Åë„Å∞„Çà„Åã„Å£„Åü„ÅÆ„Å´„Åº„ÅÜ„Å£„Å®„Åó„Å¶„Åü„ÄÇ" (limit: 1) [238.81ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -44,19 +44,19 @@
                      "conj": [
                        {
                          "gloss": [
                            {
                              "gloss": "to say; to utter; to declare",
-                             "pos": "[v5u]",
+                             "pos": "[v5u,vt]",
                            },
                            {
                              "gloss": "to name; to call",
-                             "pos": "[v5u]",
+                             "pos": "[v5u,vt]",
                            },
                            {
                              "gloss": "to go (e.g. "the alarm went ping"); to make a noise",
-                             "pos": "[v5u]",
+                             "pos": "[v5u,vi]",
                            },
                          ],
                          "prop": [
                            {
                              "pos": "v5u",
@@ -68,11 +68,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Å£„Å¶",
                      "reading": "„ÅÑ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10112667,
+                     "seq": 25391404,
                      "text": "„ÅÑ„Å£„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„Å°„ÇÉ„ÅÜ",
@@ -114,11 +114,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Å£„Å¶",
                      "reading": "„ÅÑ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10237833,
+                     "seq": 25520414,
                      "text": "„ÅÑ„Å£„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„Å°„ÇÉ„ÅÜ",
@@ -179,11 +179,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Å£„Å¶",
                      "reading": "„ÅÑ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10180396,
+                     "seq": 25461154,
                      "text": "„ÅÑ„Å£„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„Å°„ÇÉ„ÅÜ",
@@ -273,11 +273,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Å£„Å¶",
                      "reading": "„ÅÑ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10346512,
+                     "seq": 25632665,
                      "text": "„ÅÑ„Å£„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„Å°„ÇÉ„ÅÜ",
@@ -397,11 +397,11 @@
                    },
                  ],
                  "kana": "„Åä„Çè„Å£„Å¶",
                  "reading": "„Åä„Çè„Å£„Å¶",
                  "score": 0,
-                 "seq": 10045995,
+                 "seq": 25322873,
                  "text": "„Åä„Çè„Å£„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„Å°„ÇÉ„ÅÜ",
@@ -435,15 +435,11 @@
                {
                  "gloss": "huh?; what?",
                  "pos": "[int]",
                },
                {
-                 "gloss": "not",
-                 "info": "negative verb ending used in informal speech; abbr. of negative verb ending „Å¨",
-                 "pos": "[aux-v,suf]",
-               },
-               {
                  "gloss": "'s; of; belonging to",
                  "info": "abbr. of particle „ÅÆ; indicates possessive",
                  "pos": "[prt]",
                },
                {
@@ -484,11 +480,11 @@
                },
              ],
              "kana": "„Åò„ÇÉ„Å™„ÅÑ",
              "reading": "„Åò„ÇÉ„Å™„ÅÑ",
              "score": 144,
-             "seq": 10019552,
+             "seq": 25295465,
              "text": "„Åò„ÇÉ„Å™„ÅÑ",
            },
            [],
          ],
          [
@@ -496,11 +492,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -508,20 +504,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 19
+ Received  + 16

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åù„Çå„ÅÑ„Å£„Å°„ÇÉ„ÅÜ„Å®„Åú„Çì„Å∂„Åä„Çè„Å£„Å°„ÇÉ„ÅÜ„Çì„Åò„ÇÉ„Å™„ÅÑ„ÅÆ„Åã„Å™„ÄÇ" (limit: 1) [192.58ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -129,11 +129,11 @@
                },
              ],
              "kana": "„Åæ„Å°„Åå„Åà„Åü",
              "reading": "„Åæ„Å°„Åå„Åà„Åü",
              "score": 275,
-             "seq": 10198235,
+             "seq": 25479428,
              "text": "„Åæ„Å°„Åå„Åà„Åü",
            },
            [],
          ],
          [
@@ -178,11 +178,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -190,20 +190,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -313,11 +315,11 @@
                        },
                      ],
                      "kana": "„Åä„Åè„Çâ„Çå„Å¶",
                      "reading": "„Åä„Åè„Çâ„Çå„Å¶",
                      "score": 0,
-                     "seq": 10965891,
+                     "seq": 26287064,
                      "text": "„Åä„Åè„Çâ„Çå„Å¶",
                    },
                    {
                      "conj": [
                        {
@@ -356,11 +358,11 @@
                        },
                      ],
                      "kana": "„Åç„Åü",
                      "reading": "„Åç„Åü",
                      "score": 0,
-                     "seq": 10219035,
+                     "seq": 25501290,
                      "suffix": "indicates action that had been continuing up till now / came to be ",
                      "text": "„Åç„Åü",
                    },
                  ],
                  "compound": [
@@ -425,11 +427,11 @@
                        },
                      ],
                      "kana": "„Åä„Åè„Çâ„Çå„Å¶",
                      "reading": "„Åä„Åè„Çâ„Çå„Å¶",
                      "score": 0,
-                     "seq": 10964859,
+                     "seq": 26285996,
                      "text": "„Åä„Åè„Çâ„Çå„Å¶",
                    },
                    {
                      "conj": [
                        {
@@ -468,11 +470,11 @@
                        },
                      ],
                      "kana": "„Åç„Åü",
                      "reading": "„Åç„Åü",
                      "score": 0,
-                     "seq": 10219035,
+                     "seq": 25501290,
                      "suffix": "indicates action that had been continuing up till now / came to be ",
                      "text": "„Åç„Åü",
                    },
                  ],
                  "compound": [

- Expected  - 10
+ Received  + 12

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åü„ÅÆ„Åø„Åã„Åü„Çí„Åæ„Å°„Åå„Åà„Åü„Åõ„ÅÑ„Åß„Å°„Åå„ÅÜ„ÅÆ„Åå„Åä„Åè„Çâ„Çå„Å¶„Åç„Åü„ÄÇ" (limit: 1) [276.58ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -26,11 +26,11 @@
                    },
                  ],
                  "kana": "„Å¨„Çå„Åü",
                  "reading": "„Å¨„Çå„Åü",
                  "score": 36,
-                 "seq": 10252064,
+                 "seq": 25534962,
                  "text": "„Å¨„Çå„Åü",
                },
                {
                  "conj": [
                    {
@@ -43,11 +43,11 @@
                      "readok": true,
                      "via": [
                        {
                          "gloss": [
                            {
-                             "gloss": "to paint; to plaster; to lacquer; to varnish; to spread; to smear; to put up (wallpaper)",
+                             "gloss": "to paint; to spread; to plaster; to apply (cream, lotion); to smear; to lacquer; to varnish; to put up (wallpaper)",
                              "pos": "[vt,v5r]",
                            },
                          ],
                          "prop": [
                            {
@@ -62,11 +62,11 @@
                    },
                  ],
                  "kana": "„Å¨„Çå„Åü",
                  "reading": "„Å¨„Çå„Åü",
                  "score": 27,
-                 "seq": 11005343,
+                 "seq": 26329675,
                  "text": "„Å¨„Çå„Åü",
                },
              ],
            },
            [],
@@ -189,13 +189,18 @@
                        {
                          "gloss": "to stay",
                          "pos": "[v1,vi]",
                        },
                        {
-                         "gloss": "to be ...-ing; to have been ...-ing",
-                         "info": "after the -te form of a verb; indicates continuing action or state",
-                         "pos": "[v1,aux-v]",
+                         "gloss": "to be ...-ing",
+                         "info": "after the -te form of a verb; indicates continuing action",
+                         "pos": "[aux-v,v1]",
+                       },
+                       {
+                         "gloss": "to have ...-ed; to be ...-ed",
+                         "info": "after the -te form of a verb; indicates continuing state",
+                         "pos": "[aux-v,v1]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v1",
@@ -209,11 +214,11 @@
                },
              ],
              "kana": "„ÅÑ„Çå",
              "reading": "„ÅÑ„Çå",
              "score": 20,
-             "seq": 11150802,
+             "seq": 26486788,
              "text": "„ÅÑ„Çå",
            },
            [],
          ],
          [
@@ -385,11 +390,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -397,20 +402,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -484,11 +491,11 @@
                },
              ],
              "kana": "„Çà„Åè„Å™„ÅÑ",
              "reading": "„Çà„Åè„Å™„ÅÑ",
              "score": 336,
-             "seq": 10122074,
+             "seq": 25400578,
              "text": "„Çà„Åè„Å™„ÅÑ",
            },
            [],
          ],
        ],

- Expected  - 13
+ Received  + 20

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Å¨„Çå„Åü„Åæ„Åæ„Åã„Å∞„Çì„Å´„ÅÑ„Çå„Å£„Å±„Å™„Åó„Å´„Åô„Çã„ÅÆ„ÅØ„Çà„Åè„Å™„ÅÑ„ÄÇ" (limit: 1) [182.04ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -99,11 +99,11 @@
                    },
                  ],
                  "kana": "„Åß„Åç„Å™„ÅÑ",
                  "reading": "„Åß„Åç„Å™„ÅÑ",
                  "score": 336,
-                 "seq": 10150873,
+                 "seq": 25430305,
                  "text": "„Åß„Åç„Å™„ÅÑ",
                },
                {
                  "conj": [
                    {
@@ -163,11 +163,11 @@
                    },
                  ],
                  "kana": "„Åß„Åç„Å™„ÅÑ",
                  "reading": "„Åß„Åç„Å™„ÅÑ",
                  "score": 336,
-                 "seq": 10228478,
+                 "seq": 25510477,
                  "text": "„Åß„Åç„Å™„ÅÑ",
                },
              ],
            },
            [],
@@ -353,11 +353,11 @@
                    },
                  ],
                  "kana": "„Åß„Åç„Å™„ÅÑ",
                  "reading": "„Åß„Åç„Å™„ÅÑ",
                  "score": 336,
-                 "seq": 10150873,
+                 "seq": 25430305,
                  "text": "„Åß„Åç„Å™„ÅÑ",
                },
                {
                  "conj": [
                    {
@@ -417,11 +417,11 @@
                    },
                  ],
                  "kana": "„Åß„Åç„Å™„ÅÑ",
                  "reading": "„Åß„Åç„Å™„ÅÑ",
                  "score": 336,
-                 "seq": 10228478,
+                 "seq": 25510477,
                  "text": "„Åß„Åç„Å™„ÅÑ",
                },
              ],
            },
            [],
@@ -494,11 +494,11 @@
                  "gloss": "clearly; plainly; distinctly",
                  "pos": "[adv,adv-to]",
                },
                {
                  "gloss": "to be clear; to be definite; to be certain; to be exact; to become clear; to clear up",
-                 "info": "often as „ÅØ„Å£„Åç„Çä„Åó„Åü",
                  "pos": "[vs]",
                },
              ],
              "kana": "„ÅØ„Å£„Åç„Çä",
              "reading": "„ÅØ„Å£„Åç„Çä",
@@ -516,19 +516,19 @@
                  "conj": [
                    {
                      "gloss": [
                        {
                          "gloss": "to say; to utter; to declare",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vt]",
                        },
                        {
                          "gloss": "to name; to call",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vt]",
                        },
                        {
                          "gloss": "to go (e.g. "the alarm went ping"); to make a noise",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vi]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v5u",
@@ -540,11 +540,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Åü",
                  "reading": "„ÅÑ„Å£„Åü",
                  "score": 12,
-                 "seq": 10112663,
+                 "seq": 25391400,
                  "text": "„ÅÑ„Å£„Åü",
                },
                {
                  "conj": [
                    {
@@ -584,11 +584,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Åü",
                  "reading": "„ÅÑ„Å£„Åü",
                  "score": 12,
-                 "seq": 10180392,
+                 "seq": 25461150,
                  "text": "„ÅÑ„Å£„Åü",
                },
                {
                  "conj": [
                    {
@@ -609,11 +609,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Åü",
                  "reading": "„ÅÑ„Å£„Åü",
                  "score": 12,
-                 "seq": 10237829,
+                 "seq": 25520410,
                  "text": "„ÅÑ„Å£„Åü",
                },
                {
                  "conj": [
                    {
@@ -682,11 +682,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Åü",
                  "reading": "„ÅÑ„Å£„Åü",
                  "score": 12,
-                 "seq": 10346508,
+                 "seq": 25632661,
                  "text": "„ÅÑ„Å£„Åü",
                },
              ],
            },
            [],

- Expected  - 12
+ Received  + 11

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åß„Åç„Å™„ÅÑ„Åì„Å®„ÅØ„Åß„Åç„Å™„ÅÑ„Å£„Å¶„ÅØ„Å£„Åç„Çä„ÅÑ„Å£„Åü„Åª„ÅÜ„Åå„ÅÑ„ÅÑ„ÄÇ" (limit: 1) [136.65ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -51,11 +51,11 @@
                    },
                  ],
                  "kana": "„Åó„Å£„Å¶",
                  "reading": "„Åó„Å£„Å¶",
                  "score": 0,
-                 "seq": 10104974,
+                 "seq": 25383442,
                  "text": "„Åó„Å£„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÅÑ„Çã",
@@ -160,11 +160,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -185,13 +192,18 @@
                    {
                      "gloss": "to stay",
                      "pos": "[v1,vi]",
                    },
                    {
-                     "gloss": "to be ...-ing; to have been ...-ing",
-                     "info": "after the -te form of a verb; indicates continuing action or state",
-                     "pos": "[v1,aux-v]",
+                     "gloss": "to be ...-ing",
+                     "info": "after the -te form of a verb; indicates continuing action",
+                     "pos": "[aux-v,v1]",
+                   },
+                   {
+                     "gloss": "to have ...-ed; to be ...-ed",
+                     "info": "after the -te form of a verb; indicates continuing state",
+                     "pos": "[aux-v,v1]",
                    },
                  ],
                  "prop": [
                    {
                      "pos": "v1",
@@ -203,11 +215,11 @@
                },
              ],
              "kana": "„ÅÑ„Åü",
              "reading": "„ÅÑ„Åü",
              "score": 40,
-             "seq": 10547537,
+             "seq": 25839474,
              "text": "„ÅÑ„Åü",
            },
            [],
          ],
          [
@@ -264,11 +276,11 @@
                    },
                  ],
                  "kana": "„Åç„ÅÑ„Å¶",
                  "reading": "„Åç„ÅÑ„Å¶",
                  "score": 36,
-                 "seq": 10187232,
+                 "seq": 25468063,
                  "text": "„Åç„ÅÑ„Å¶",
                },
                {
                  "conj": [
                    {
@@ -320,11 +332,11 @@
                    },
                  ],
                  "kana": "„Åç„ÅÑ„Å¶",
                  "reading": "„Åç„ÅÑ„Å¶",
                  "score": 36,
-                 "seq": 10196625,
+                 "seq": 25478087,
                  "text": "„Åç„ÅÑ„Å¶",
                },
                {
                  "conj": [
                    {
@@ -359,11 +371,11 @@
                    },
                  ],
                  "kana": "„Åç„ÅÑ„Å¶",
                  "reading": "„Åç„ÅÑ„Å¶",
                  "score": 36,
-                 "seq": 10541634,
+                 "seq": 25834003,
                  "text": "„Åç„ÅÑ„Å¶",
                },
              ],
            },
            [],
@@ -412,11 +424,11 @@
                },
              ],
              "kana": "„Åø„Åü„Çâ",
              "reading": "„Åø„Åü„Çâ",
              "score": 90,
-             "seq": 10312456,
+             "seq": 25597355,
              "text": "„Åø„Åü„Çâ",
            },
            [],
          ],
          [
@@ -480,11 +492,11 @@
                    },
                  ],
                  "kana": "„Å°„Åå„Å£„Å¶",
                  "reading": "„Å°„Åå„Å£„Å¶",
                  "score": 0,
-                 "seq": 10554294,
+                 "seq": 25847074,
                  "text": "„Å°„Åå„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -496,13 +508,18 @@
                        {
                          "gloss": "to stay",
                          "pos": "[v1,vi]",
                        },
                        {
-                         "gloss": "to be ...-ing; to have been ...-ing",
-                         "info": "after the -te form of a verb; indicates continuing action or state",
-                         "pos": "[v1,aux-v]",
+                         "gloss": "to be ...-ing",
+                         "info": "after the -te form of a verb; indicates continuing action",
+                         "pos": "[aux-v,v1]",
+                       },
+                       {
+                         "gloss": "to have ...-ed; to be ...-ed",
+                         "info": "after the -te form of a verb; indicates continuing state",
+                         "pos": "[aux-v,v1]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v1",
@@ -514,11 +531,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Åü",
                  "reading": "„ÅÑ„Åü",
                  "score": 0,
-                 "seq": 10547537,
+                 "seq": 25839474,
                  "suffix": "indicates continuing action (to be ...ing)",
                  "text": "„ÅÑ„Åü",
                },
              ],
              "compound": [

- Expected  - 14
+ Received  + 32

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åó„Å£„Å¶„Çã„Å§„ÇÇ„Çä„Åß„ÅÑ„Åü„ÅÆ„Å´„Åç„ÅÑ„Å¶„Åø„Åü„Çâ„Åú„Çì„Åú„Çì„Å°„Åå„Å£„Å¶„Åü„ÄÇ" (limit: 1) [147.91ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -111,11 +111,11 @@
                        },
                      ],
                      "kana": "„ÇÑ„Å£„Å¶",
                      "reading": "„ÇÑ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10399708,
+                     "seq": 25687374,
                      "text": "„ÇÑ„Å£„Å¶",
                    },
                    {
                      "conj": [
                        {
@@ -184,11 +184,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Åë„Å∞",
                      "reading": "„ÅÑ„Åë„Å∞",
                      "score": 0,
-                     "seq": 10346516,
+                     "seq": 25632669,
                      "suffix": "is becoming / action starting now and continuing",
                      "text": "„ÅÑ„Åë„Å∞",
                    },
                  ],
                  "compound": [
@@ -220,11 +220,11 @@
                    },
                  ],
                  "kana": "„ÇÑ„Å£„Å¶„ÅÑ„Åë„Å∞",
                  "reading": "„ÇÑ„Å£„Å¶„ÅÑ„Åë„Å∞",
                  "score": 275,
-                 "seq": 10270656,
+                 "seq": 25554138,
                  "text": "„ÇÑ„Å£„Å¶„ÅÑ„Åë„Å∞",
                },
              ],
            },
            [],
@@ -271,11 +271,11 @@
                },
              ],
              "kana": "„Åä„Çè„Çâ„Å™„ÅÑ",
              "reading": "„Åä„Çè„Çâ„Å™„ÅÑ",
              "score": 275,
-             "seq": 10045989,
+             "seq": 25322822,
              "text": "„Åä„Çè„Çâ„Å™„ÅÑ",
            },
            [],
          ],
          [
@@ -365,11 +365,11 @@
                },
              ],
              "kana": "„Åã„Çì„Åò„Åü",
              "reading": "„Åã„Çì„Åò„Åü",
              "score": 176,
-             "seq": 10562087,
+             "seq": 25855252,
              "text": "„Åã„Çì„Åò„Åü",
            },
            [],
          ],
        ],

- Expected  - 5
+ Received  + 5

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Å°„Çá„Å£„Å®„Åö„Å§„ÇÑ„Å£„Å¶„ÅÑ„Åë„Å∞„Åä„Çè„Çâ„Å™„ÅÑ„Åì„Å®„ÅØ„Å™„ÅÑ„Å®„Åã„Çì„Åò„Åü„ÄÇ" (limit: 1) [235.89ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -3,53 +3,162 @@
      [
        [
          [
            "hiraketara",
            {
-             "conj": [
+             "alternative": [
                {
-                 "gloss": [
+                 "conj": [
                    {
-                     "gloss": "to open out (of a view, scenery, etc.); to spread out; to become clear (of a road, visibility, etc.); to open up",
-                     "pos": "[v1,vi]",
-                   },
-                   {
-                     "gloss": "to improve (of luck, prospects, etc.); to get better",
-                     "pos": "[v1,vi]",
-                   },
-                   {
-                     "gloss": "to develop (of a town, civilization, etc.); to become civilized; to modernize; to grow; to advance (of knowledge, ideas, etc.)",
-                     "pos": "[v1,vi]",
-                   },
-                   {
-                     "gloss": "to be sensible; to be understanding; to be enlightened",
-                     "pos": "[v1,vi]",
-                   },
-                   {
-                     "gloss": "to open (of a new road, railway, etc.); to be opened to traffic",
-                     "pos": "[v1,vi]",
-                   },
-                   {
-                     "gloss": "to become populous; to become densely built; to become bustling",
-                     "pos": "[vi,v1]",
+                     "gloss": [
+                       {
+                         "gloss": "to open out (of a view, scenery, etc.); to spread out; to become clear (of a road, visibility, etc.); to open up",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to improve (of luck, prospects, etc.); to get better",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to develop (of a town, civilization, etc.); to become civilized; to modernize; to grow; to advance (of knowledge, ideas, etc.)",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to be sensible; to be understanding; to be enlightened",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to open (of a new road, railway, etc.); to be opened to traffic",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to become populous; to become densely built; to become bustling",
+                         "pos": "[vi,v1]",
+                       },
+                     ],
+                     "prop": [
+                       {
+                         "pos": "v1",
+                         "type": "Conditional (~tara)",
+                       },
+                     ],
+                     "reading": "Èñã„Åë„Çã „Äê„Å≤„Çâ„Åë„Çã„Äë",
+                     "readok": true,
                    },
                  ],
-                 "prop": [
+                 "kana": "„Å≤„Çâ„Åë„Åü„Çâ",
+                 "reading": "„Å≤„Çâ„Åë„Åü„Çâ",
+                 "score": 275,
+                 "seq": 25621020,
+                 "text": "„Å≤„Çâ„Åë„Åü„Çâ",
+               },
+               {
+                 "conj": [
                    {
-                     "pos": "v1",
-                     "type": "Conditional (~tara)",
+                     "prop": [
+                       {
+                         "pos": "v1",
+                         "type": "Conditional (~tara)",
+                       },
+                     ],
+                     "readok": true,
+                     "via": [
+                       {
+                         "gloss": [
+                           {
+                             "gloss": "to open; to undo; to unseal; to unpack",
+                             "pos": "[v5k,vi,vt]",
+                           },
+                           {
+                             "gloss": "to bloom; to unfold; to spread out",
+                             "pos": "[v5k,vi,vt]",
+                           },
+                           {
+                             "gloss": "to open (for business, e.g. in the morning)",
+                             "pos": "[v5k,vi,vt]",
+                           },
+                           {
+                             "gloss": "to be wide (gap, etc.); to widen",
+                             "pos": "[v5k,vi,vt]",
+                           },
+                           {
+                             "gloss": "to hold (meeting, party, etc.); to give; to open",
+                             "pos": "[v5k,vt]",
+                           },
+                           {
+                             "gloss": "to found (nation, dynasty, sect, etc.); to open (a new business); to set up; to establish; to start",
+                             "pos": "[v5k,vt]",
+                           },
+                           {
+                             "gloss": "to open (ports, borders, etc.)",
+                             "pos": "[v5k,vt]",
+                           },
+                           {
+                             "gloss": "to open (an account)",
+                             "pos": "[v5k,vt]",
+                           },
+                           {
+                             "gloss": "to open up (new land, path, etc.); to clear; to develop",
+                             "pos": "[v5k,vt]",
+                           },
+                           {
+                             "field": "{comp}",
+                             "gloss": "to open (a file, etc.)",
+                             "pos": "[v5k,vt]",
+                           },
+                           {
+                             "field": "{math}",
+                             "gloss": "to extract (root); to reduce (equation)",
+                             "pos": "[v5k,vt]",
+                           },
+                           {
+                             "field": "{food}",
+                             "gloss": "to cut open (fish)",
+                             "info": "as È≠ö„ÇíÈñã„Åè",
+                             "pos": "[v5k,vt]",
+                           },
+                           {
+                             "gloss": "to change (kanji into hiragana)",
+                             "pos": "[v5k,vt]",
+                           },
+                           {
+                             "gloss": "to flare (e.g. skirt)",
+                             "pos": "[v5k,vi]",
+                           },
+                           {
+                             "field": "{sports}",
+                             "gloss": "to slacken (into a poor posture)",
+                             "info": "as ‰Ωì„ÅåÈñã„Åè, ËÇ©„ÅåÈñã„Åè, etc.",
+                             "pos": "[v5k,vi]",
+                           },
+                           {
+                             "field": "{go}",
+                             "gloss": "to extend",
+                             "info": "usu. „Éí„É©„Åè",
+                             "pos": "[v5k,vi]",
+                           },
+                         ],
+                         "prop": [
+                           {
+                             "pos": "v5k",
+                             "type": "Potential",
+                           },
+                         ],
+                         "reading": "Èñã„Åè „Äê„Å≤„Çâ„Åè„Äë",
+                         "readok": true,
+                       },
+                     ],
                    },
                  ],
-                 "reading": "Èñã„Åë„Çã „Äê„Å≤„Çâ„Åë„Çã„Äë",
-                 "readok": true,
+                 "kana": "„Å≤„Çâ„Åë„Åü„Çâ",
+                 "reading": "„Å≤„Çâ„Åë„Åü„Çâ",
+                 "score": 325,
+                 "seq": 26026447,
+                 "text": "„Å≤„Çâ„Åë„Åü„Çâ",
                },
              ],
-             "kana": "„Å≤„Çâ„Åë„Åü„Çâ",
-             "reading": "„Å≤„Çâ„Åë„Åü„Çâ",
-             "score": 275,
-             "seq": 10335211,
-             "text": "„Å≤„Çâ„Åë„Åü„Çâ",
            },
            [],
          ],
          [
            "sugu",
@@ -138,11 +247,11 @@
                        },
                      ],
                      "kana": "„Åø„Åõ„Å¶",
                      "reading": "„Åø„Åõ„Å¶",
                      "score": 0,
-                     "seq": 10430171,
+                     "seq": 25718435,
                      "text": "„Åø„Åõ„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„Åè„Å†„Åï„ÅÑ",
@@ -184,11 +293,11 @@
                        },
                      ],
                      "kana": "„Åø„Åõ„Å¶",
                      "reading": "„Åø„Åõ„Å¶",
                      "score": 0,
-                     "seq": 10534958,
+                     "seq": 25826821,
                      "text": "„Åø„Åõ„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„Åè„Å†„Åï„ÅÑ",
@@ -230,11 +339,11 @@
                        },
                      ],
                      "kana": "„Åø„Åõ„Å¶",
                      "reading": "„Åø„Åõ„Å¶",
                      "score": 0,
-                     "seq": 10435708,
+                     "seq": 25724181,
                      "text": "„Åø„Åõ„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„Åè„Å†„Åï„ÅÑ",
@@ -368,11 +477,11 @@
                    },
                  ],
                  "kana": "„Å§„Åü„Åà„Å¶",
                  "reading": "„Å§„Åü„Åà„Å¶",
                  "score": 0,
-                 "seq": 10344198,
+                 "seq": 25630072,
                  "text": "„Å§„Åü„Åà„Å¶",
                },
                {
                  "conj": [
                    {
@@ -431,11 +540,11 @@
                    },
                  ],
                  "kana": "„Åä„ÅÑ„Å¶",
                  "reading": "„Åä„ÅÑ„Å¶",
                  "score": 0,
-                 "seq": 10297988,
+                 "seq": 25582582,
                  "suffix": "to do in advance / to leave in the current state expecting a later change",
                  "text": "„Åä„ÅÑ„Å¶",
                },
              ],
              "compound": [
@@ -448,10 +557,10 @@
              "text": "„Å§„Åü„Åà„Å¶„Åä„ÅÑ„Å¶",
            },
            [],
          ],
        ],
-       1170,
+       1220,
      ],
    ],
    ". ",
  ]

- Expected  - 40
+ Received  + 148

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Å≤„Çâ„Åë„Åü„Çâ„Åô„Åê„Åø„Åõ„Å¶„Åè„Å†„Åï„ÅÑ„Å£„Å¶„Å§„Åü„Åà„Å¶„Åä„ÅÑ„Å¶„ÄÇ" (limit: 1) [284.46ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -69,11 +69,11 @@
                    },
                  ],
                  "kana": "„Åã„Åà„Çå„Å∞",
                  "reading": "„Åã„Åà„Çå„Å∞",
                  "score": 176,
-                 "seq": 10063995,
+                 "seq": 25341544,
                  "text": "„Åã„Åà„Çå„Å∞",
                },
                {
                  "conj": [
                    {
@@ -103,11 +103,11 @@
                    },
                  ],
                  "kana": "„Åã„Åà„Çå„Å∞",
                  "reading": "„Åã„Åà„Çå„Å∞",
                  "score": 176,
-                 "seq": 10137416,
+                 "seq": 25416676,
                  "text": "„Åã„Åà„Çå„Å∞",
                },
                {
                  "conj": [
                    {
@@ -138,11 +138,11 @@
                    },
                  ],
                  "kana": "„Åã„Åà„Çå„Å∞",
                  "reading": "„Åã„Åà„Çå„Å∞",
                  "score": 176,
-                 "seq": 10249293,
+                 "seq": 25532369,
                  "text": "„Åã„Åà„Çå„Å∞",
                },
                {
                  "conj": [
                    {
@@ -174,11 +174,11 @@
                    },
                  ],
                  "kana": "„Åã„Åà„Çå„Å∞",
                  "reading": "„Åã„Åà„Çå„Å∞",
                  "score": 176,
-                 "seq": 10283637,
+                 "seq": 25567679,
                  "text": "„Åã„Åà„Çå„Å∞",
                },
              ],
            },
            [],

- Expected  - 4
+ Received  + 4

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÅÑ„Åù„ÅÑ„Åß„Åã„Åà„Çå„Å∞„ÇÜ„ÅÜ„ÅØ„Çì„Å´„Åæ„Å´„ÅÇ„ÅÜ„Åã„ÇÇ„Åó„Çå„Å™„ÅÑ„ÄÇ" (limit: 1) [224.06ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -68,11 +68,27 @@
            {
              "conj": [
                {
                  "gloss": [
                    {
+                     "gloss": "to be able to sleep",
+                     "pos": "[vi,v1]",
+                   },
+                 ],
+                 "prop": [
+                   {
+                     "neg": true,
+                     "pos": "v1",
+                     "type": "Non-past",
+                   },
+                 ],
+                 "reading": "Áú†„Çå„Çã „Äê„Å≠„ÇÄ„Çå„Çã„Äë",
+                 "readok": true,
+               },
+               {
+                 "gloss": [
+                   {
                      "gloss": "to sleep",
                      "pos": "[v5r,vi]",
                    },
                    {
                      "gloss": "to die; to rest (in peace); to lie (buried); to sleep (in the grave)",
@@ -99,22 +115,22 @@
                },
              ],
              "kana": "„Å≠„ÇÄ„Çå„Å™„ÅÑ",
              "reading": "„Å≠„ÇÄ„Çå„Å™„ÅÑ",
              "score": 275,
-             "seq": 10139050,
+             "seq": 25418754,
              "text": "„Å≠„ÇÄ„Çå„Å™„ÅÑ",
            },
            [],
          ],
          [
            "wake dewanai",
            {
              "conj": [],
              "gloss": [
                {
-                 "gloss": "it does not mean that ...; I don't mean that ...; it is not the case that...",
+                 "gloss": "it does not mean that ...; I don't mean that ...; it is not the case that ...",
                  "pos": "[exp]",
                },
              ],
              "kana": "„Çè„Åë‚Äã„Åß‚Äå„ÅØ„Å™„ÅÑ",
              "reading": "„Çè„Åë„Åß„ÅØ„Å™„ÅÑ",

- Expected  - 2
+ Received  + 19

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Å§„Åã„Çå„Åü„Åã„Çâ„Å®„ÅÑ„Å£„Å¶„Å≠„ÇÄ„Çå„Å™„ÅÑ„Çè„Åë„Åß„ÅØ„Å™„ÅÑ„ÄÇ" (limit: 1) [284.21ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -36,11 +36,11 @@
                },
              ],
              "kana": "„Åç„Åì„Åà„Åü",
              "reading": "„Åç„Åì„Åà„Åü",
              "score": 176,
-             "seq": 10008875,
+             "seq": 25284587,
              "text": "„Åç„Åì„Åà„Åü",
            },
            [],
          ],
          [
@@ -65,11 +65,11 @@
                },
              ],
              "kana": "„Çà„ÅÜ„Å™„Åç„Åå„Åó„Åü",
              "reading": "„Çà„ÅÜ„Å™„Åç„Åå„Åó„Åü",
              "score": 462,
-             "seq": 10042012,
+             "seq": 25318577,
              "text": "„Çà„ÅÜ„Å™„Åç„Åå„Åó„Åü",
            },
            [],
          ],
          [

- Expected  - 2
+ Received  + 2

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åç„Åì„Åà„Åü„Çà„ÅÜ„Å™„Åç„Åå„Åó„Åü„Åë„Å©„ÇÑ„Å£„Å±„Çä„Åç„Åç„Åæ„Å°„Åå„ÅÑ„Å†„Å£„Åü„ÄÇ" (limit: 1) [122.10ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -7,11 +7,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "once more; again",
-                 "pos": "[exp]",
+                 "pos": "[adv,exp]",
                },
              ],
              "kana": "„ÇÇ„ÅÜ„ÅÑ„Å°„Å©",
              "reading": "„ÇÇ„ÅÜ„ÅÑ„Å°„Å©",
              "score": 275,
@@ -144,11 +144,11 @@
                },
              ],
              "kana": "„Åó„Å¶",
              "reading": "„Åó„Å¶",
              "score": 40,
-             "seq": 10150864,
+             "seq": 25430295,
              "text": "„Åó„Å¶",
            },
            [],
          ],
          [
@@ -195,11 +195,11 @@
                },
              ],
              "kana": "„Åø",
              "reading": "„Åø",
              "score": 10,
-             "seq": 10312464,
+             "seq": 25597363,
              "text": "„Åø",
            },
            [],
          ],
          [

- Expected  - 3
+ Received  + 3

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÇÇ„ÅÜ„ÅÑ„Å°„Å©„Åü„ÇÅ„Åó„Å¶„Åø„Å™„ÅÑ„Åì„Å®„Å´„ÅØ„Å™„Çì„Å®„ÇÇ„ÅÑ„Åà„Å™„ÅÑ„ÄÇ" (limit: 1) [103.12ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -22,19 +22,19 @@
                          "via": [
                            {
                              "gloss": [
                                {
                                  "gloss": "to say; to utter; to declare",
-                                 "pos": "[v5u]",
+                                 "pos": "[v5u,vt]",
                                },
                                {
                                  "gloss": "to name; to call",
-                                 "pos": "[v5u]",
+                                 "pos": "[v5u,vt]",
                                },
                                {
                                  "gloss": "to go (e.g. "the alarm went ping"); to make a noise",
-                                 "pos": "[v5u]",
+                                 "pos": "[v5u,vi]",
                                },
                              ],
                              "prop": [
                                {
                                  "pos": "v5u",
@@ -48,11 +48,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Çè„Çå„Å™„Åè„Å¶",
                      "reading": "„ÅÑ„Çè„Çå„Å™„Åè„Å¶",
                      "score": 0,
-                     "seq": 11159775,
+                     "seq": 26496346,
                      "text": "„ÅÑ„Çè„Çå„Å™„Åè„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„ÇÇ",
@@ -94,11 +94,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Çè„Çå„Å™„Åè„Å¶",
                      "reading": "„ÅÑ„Çè„Çå„Å™„Åè„Å¶",
                      "score": 0,
-                     "seq": 10457899,
+                     "seq": 25747015,
                      "text": "„ÅÑ„Çè„Çå„Å™„Åè„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„ÇÇ",
@@ -211,11 +211,11 @@
                    },
                  ],
                  "kana": "„ÇÑ„Å£„Å¶",
                  "reading": "„ÇÑ„Å£„Å¶",
                  "score": 0,
-                 "seq": 10399708,
+                 "seq": 25687374,
                  "text": "„ÇÑ„Å£„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„Å®„Åè",
@@ -304,19 +304,19 @@
                  "conj": [
                    {
                      "gloss": [
                        {
                          "gloss": "to say; to utter; to declare",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vt]",
                        },
                        {
                          "gloss": "to name; to call",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vt]",
                        },
                        {
                          "gloss": "to go (e.g. "the alarm went ping"); to make a noise",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vi]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v5u",
@@ -328,11 +328,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Åü",
                  "reading": "„ÅÑ„Å£„Åü",
                  "score": 12,
-                 "seq": 10112663,
+                 "seq": 25391400,
                  "text": "„ÅÑ„Å£„Åü",
                },
                {
                  "conj": [
                    {
@@ -372,11 +372,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Åü",
                  "reading": "„ÅÑ„Å£„Åü",
                  "score": 12,
-                 "seq": 10180392,
+                 "seq": 25461150,
                  "text": "„ÅÑ„Å£„Åü",
                },
                {
                  "conj": [
                    {
@@ -397,11 +397,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Åü",
                  "reading": "„ÅÑ„Å£„Åü",
                  "score": 12,
-                 "seq": 10237829,
+                 "seq": 25520410,
                  "text": "„ÅÑ„Å£„Åü",
                },
                {
                  "conj": [
                    {
@@ -470,11 +470,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Åü",
                  "reading": "„ÅÑ„Å£„Åü",
                  "score": 12,
-                 "seq": 10346508,
+                 "seq": 25632661,
                  "text": "„ÅÑ„Å£„Åü",
                },
              ],
            },
            [],
@@ -574,19 +574,19 @@
              "conj": [
                {
                  "gloss": [
                    {
                      "gloss": "to say; to utter; to declare",
-                     "pos": "[v5u]",
+                     "pos": "[v5u,vt]",
                    },
                    {
                      "gloss": "to name; to call",
-                     "pos": "[v5u]",
+                     "pos": "[v5u,vt]",
                    },
                    {
                      "gloss": "to go (e.g. "the alarm went ping"); to make a noise",
-                     "pos": "[v5u]",
+                     "pos": "[v5u,vi]",
                    },
                  ],
                  "prop": [
                    {
                      "pos": "v5u",
@@ -598,11 +598,11 @@
                },
              ],
              "kana": "„ÅÑ„Çè„Çå„Çã",
              "reading": "„ÅÑ„Çè„Çå„Çã",
              "score": 176,
-             "seq": 10112679,
+             "seq": 25391416,
              "text": "„ÅÑ„Çè„Çå„Çã",
            },
            [],
          ],
        ],

- Expected  - 17
+ Received  + 17

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÅÑ„Çè„Çå„Å™„Åè„Å¶„ÇÇ„ÇÑ„Å£„Å®„Åè„Å£„Å¶„ÅÑ„Å£„Åü„ÅÆ„Å´„Å™„Çì„Å©„ÇÇ„ÅÑ„Çè„Çå„Çã„ÄÇ" (limit: 1) [142.01ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -132,11 +132,11 @@
                    },
                  ],
                  "kana": "„Åç„ÇÅ",
                  "reading": "„Åç„ÇÅ",
                  "score": 12,
-                 "seq": 10617262,
+                 "seq": 25912504,
                  "text": "„Åç„ÇÅ",
                },
              ],
            },
            [],
@@ -279,11 +279,15 @@
                              "pos": "[v5t,vt]",
                            },
                            {
                              "field": "{shogi}",
                              "gloss": "to drop (a piece)",
+                             "pos": "[v5t,vt]",
+                           },
+                           {
+                             "field": "{go}",
+                             "gloss": "to play a move; to play a game",
                              "pos": "[vt,v5t]",
                            },
                          ],
                          "prop": [
                            {
@@ -296,11 +300,11 @@
                        },
                      ],
                      "kana": "„ÅÜ„Å£„Å¶",
                      "reading": "„ÅÜ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10558211,
+                     "seq": 25850669,
                      "text": "„ÅÜ„Å£„Å¶",
                    },
                    {
                      "conj": [
                        {
@@ -369,11 +373,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Å£„Å¶",
                      "reading": "„ÅÑ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10346512,
+                     "seq": 25632665,
                      "suffix": "is becoming / action starting now and continuing",
                      "text": "„ÅÑ„Å£„Å¶",
                    },
                    {
                      "conj": [
@@ -386,13 +390,18 @@
                            {
                              "gloss": "to stay",
                              "pos": "[v1,vi]",
                            },
                            {
-                             "gloss": "to be ...-ing; to have been ...-ing",
-                             "info": "after the -te form of a verb; indicates continuing action or state",
-                             "pos": "[v1,aux-v]",
+                             "gloss": "to be ...-ing",
+                             "info": "after the -te form of a verb; indicates continuing action",
+                             "pos": "[aux-v,v1]",
+                           },
+                           {
+                             "gloss": "to have ...-ed; to be ...-ed",
+                             "info": "after the -te form of a verb; indicates continuing state",
+                             "pos": "[aux-v,v1]",
                            },
                          ],
                          "prop": [
                            {
                              "pos": "v1",
@@ -404,11 +413,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Åü",
                      "reading": "„ÅÑ„Åü",
                      "score": 0,
-                     "seq": 10547537,
+                     "seq": 25839474,
                      "suffix": "indicates continuing action (to be ...ing)",
                      "text": "„ÅÑ„Åü",
                    },
                  ],
                  "compound": [
@@ -455,11 +464,11 @@
                        },
                      ],
                      "kana": "„ÅÜ„Å£„Å¶",
                      "reading": "„ÅÜ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10057560,
+                     "seq": 25334199,
                      "text": "„ÅÜ„Å£„Å¶",
                    },
                    {
                      "conj": [
                        {
@@ -528,11 +537,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Å£„Å¶",
                      "reading": "„ÅÑ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10346512,
+                     "seq": 25632665,
                      "suffix": "is becoming / action starting now and continuing",
                      "text": "„ÅÑ„Å£„Å¶",
                    },
                    {
                      "conj": [
@@ -545,13 +554,18 @@
                            {
                              "gloss": "to stay",
                              "pos": "[v1,vi]",
                            },
                            {
-                             "gloss": "to be ...-ing; to have been ...-ing",
-                             "info": "after the -te form of a verb; indicates continuing action or state",
-                             "pos": "[v1,aux-v]",
+                             "gloss": "to be ...-ing",
+                             "info": "after the -te form of a verb; indicates continuing action",
+                             "pos": "[aux-v,v1]",
+                           },
+                           {
+                             "gloss": "to have ...-ed; to be ...-ed",
+                             "info": "after the -te form of a verb; indicates continuing state",
+                             "pos": "[aux-v,v1]",
                            },
                          ],
                          "prop": [
                            {
                              "pos": "v1",
@@ -563,11 +577,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Åü",
                      "reading": "„ÅÑ„Åü",
                      "score": 0,
-                     "seq": 10547537,
+                     "seq": 25839474,
                      "suffix": "indicates continuing action (to be ...ing)",
                      "text": "„ÅÑ„Åü",
                    },
                  ],
                  "compound": [
@@ -602,11 +616,11 @@
                        },
                      ],
                      "kana": "„ÅÜ„Å£„Å¶",
                      "reading": "„ÅÜ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10180858,
+                     "seq": 25461555,
                      "text": "„ÅÜ„Å£„Å¶",
                    },
                    {
                      "conj": [
                        {
@@ -675,11 +689,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Å£„Å¶",
                      "reading": "„ÅÑ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10346512,
+                     "seq": 25632665,
                      "suffix": "is becoming / action starting now and continuing",
                      "text": "„ÅÑ„Å£„Å¶",
                    },
                    {
                      "conj": [
@@ -692,13 +706,18 @@
                            {
                              "gloss": "to stay",
                              "pos": "[v1,vi]",
                            },
                            {
-                             "gloss": "to be ...-ing; to have been ...-ing",
-                             "info": "after the -te form of a verb; indicates continuing action or state",
-                             "pos": "[v1,aux-v]",
+                             "gloss": "to be ...-ing",
+                             "info": "after the -te form of a verb; indicates continuing action",
+                             "pos": "[aux-v,v1]",
+                           },
+                           {
+                             "gloss": "to have ...-ed; to be ...-ed",
+                             "info": "after the -te form of a verb; indicates continuing state",
+                             "pos": "[aux-v,v1]",
                            },
                          ],
                          "prop": [
                            {
                              "pos": "v1",
@@ -710,11 +729,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Åü",
                      "reading": "„ÅÑ„Åü",
                      "score": 0,
-                     "seq": 10547537,
+                     "seq": 25839474,
                      "suffix": "indicates continuing action (to be ...ing)",
                      "text": "„ÅÑ„Åü",
                    },
                  ],
                  "compound": [
@@ -749,11 +768,11 @@
                        },
                      ],
                      "kana": "„ÅÜ„Å£„Å¶",
                      "reading": "„ÅÜ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10008599,
+                     "seq": 25284237,
                      "text": "„ÅÜ„Å£„Å¶",
                    },
                    {
                      "conj": [
                        {
@@ -822,11 +841,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Å£„Å¶",
                      "reading": "„ÅÑ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10346512,
+                     "seq": 25632665,
                      "suffix": "is becoming / action starting now and continuing",
                      "text": "„ÅÑ„Å£„Å¶",
                    },
                    {
                      "conj": [
@@ -839,13 +858,18 @@
                            {
                              "gloss": "to stay",
                              "pos": "[v1,vi]",
                            },
                            {
-                             "gloss": "to be ...-ing; to have been ...-ing",
-                             "info": "after the -te form of a verb; indicates continuing action or state",
-                             "pos": "[v1,aux-v]",
+                             "gloss": "to be ...-ing",
+                             "info": "after the -te form of a verb; indicates continuing action",
+                             "pos": "[aux-v,v1]",
+                           },
+                           {
+                             "gloss": "to have ...-ed; to be ...-ed",
+                             "info": "after the -te form of a verb; indicates continuing state",
+                             "pos": "[aux-v,v1]",
                            },
                          ],
                          "prop": [
                            {
                              "pos": "v1",
@@ -857,11 +881,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Åü",
                      "reading": "„ÅÑ„Åü",
                      "score": 0,
-                     "seq": 10547537,
+                     "seq": 25839474,
                      "suffix": "indicates continuing action (to be ...ing)",
                      "text": "„ÅÑ„Åü",
                    },
                  ],
                  "compound": [
@@ -1021,11 +1045,11 @@
                          "gloss": "to be promoted",
                          "pos": "[v5r,vi]",
                        },
                        {
                          "gloss": "to do ...",
-                         "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                         "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                          "pos": "[aux-v,v5r]",
                        },
                      ],
                      "prop": [
                        {
@@ -1038,11 +1062,11 @@
                    },
                  ],
                  "kana": "„Å™„Å£„Åü",
                  "reading": "„Å™„Å£„Åü",
                  "score": 0,
-                 "seq": 10371749,
+                 "seq": 25658501,
                  "suffix": "to become ...",
                  "text": "„Å™„Å£„Åü",
                },
              ],
              "compound": [

- Expected  - 27
+ Received  + 52

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åñ„Å£„Åè„Çä„Åç„ÇÅ„Å®„Åì„ÅÜ„Å£„Å¶„ÅÑ„Å£„Å¶„Åü„ÅÆ„Å´„ÇÑ„Åü„Çâ„Åì„Åæ„Åã„Åè„Å™„Å£„Åü„ÄÇ" (limit: 1) [264.43ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -59,19 +59,19 @@
                  "conj": [
                    {
                      "gloss": [
                        {
                          "gloss": "to say; to utter; to declare",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vt]",
                        },
                        {
                          "gloss": "to name; to call",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vt]",
                        },
                        {
                          "gloss": "to go (e.g. "the alarm went ping"); to make a noise",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vi]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v5u",
@@ -83,11 +83,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Å¶",
                  "reading": "„ÅÑ„Å£„Å¶",
                  "score": 12,
-                 "seq": 10112667,
+                 "seq": 25391404,
                  "text": "„ÅÑ„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -127,11 +127,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Å¶",
                  "reading": "„ÅÑ„Å£„Å¶",
                  "score": 12,
-                 "seq": 10180396,
+                 "seq": 25461154,
                  "text": "„ÅÑ„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -152,11 +152,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Å¶",
                  "reading": "„ÅÑ„Å£„Å¶",
                  "score": 12,
-                 "seq": 10237833,
+                 "seq": 25520414,
                  "text": "„ÅÑ„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -225,11 +225,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Å¶",
                  "reading": "„ÅÑ„Å£„Å¶",
                  "score": 12,
-                 "seq": 10346512,
+                 "seq": 25632665,
                  "text": "„ÅÑ„Å£„Å¶",
                },
              ],
            },
            [],
@@ -295,11 +295,11 @@
                },
              ],
              "kana": "„Åä„Åã„Å™„ÅÑ",
              "reading": "„Åä„Åã„Å™„ÅÑ",
              "score": 336,
-             "seq": 10297982,
+             "seq": 25582576,
              "text": "„Åä„Åã„Å™„ÅÑ",
            },
            [],
          ],
          [
@@ -446,11 +446,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -580,11 +587,11 @@
                    },
                  ],
                  "kana": "„Åç„Åæ„Å£„Å¶",
                  "reading": "„Åç„Åæ„Å£„Å¶",
                  "score": 0,
-                 "seq": 10534138,
+                 "seq": 25825840,
                  "text": "„Åç„Åæ„Å£„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÅÑ„Çã",

- Expected  - 9
+ Received  + 17

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åù„Çç„Åù„Çç„ÅÑ„Å£„Å¶„Åä„Åã„Å™„ÅÑ„Å®„ÅÇ„Å®„Åß„Åì„Åæ„Çã„Å´„Åç„Åæ„Å£„Å¶„Çã„ÄÇ" (limit: 1) [103.79ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -61,11 +61,11 @@
                    },
                  ],
                  "kana": "„Åü„Åπ",
                  "reading": "„Åü„Åπ",
                  "score": 0,
-                 "seq": 10091282,
+                 "seq": 25369473,
                  "text": "„Åü„Åπ",
                },
                {
                  "conj": [],
                  "kana": "„Åü„ÅÑ",
@@ -243,11 +243,11 @@
                    },
                  ],
                  "kana": "„Åß„ÇÇ„Å™„ÅÑ",
                  "reading": "„Åß„ÇÇ„Å™„ÅÑ",
                  "score": 336,
-                 "seq": 10164821,
+                 "seq": 25445371,
                  "text": "„Åß„ÇÇ„Å™„ÅÑ",
                },
              ],
            },
            [],
@@ -293,11 +293,16 @@
                      "gloss": "to be equipped with",
                      "pos": "[v5r-i,vi]",
                    },
                    {
                      "gloss": "to happen; to come about",
-                     "pos": "[vi,v5r-i]",
+                     "pos": "[v5r-i,vi]",
+                   },
+                   {
+                     "gloss": "to exist (in a completed state); to be (something unchanged in its current state)",
+                     "info": "after the ÔΩû„Å¶ form of a transitive verb",
+                     "pos": "[aux-v,v5r-i]",
                    },
                  ],
                  "prop": [
                    {
                      "pos": "v5r-i",
@@ -309,11 +314,11 @@
                },
              ],
              "kana": "„ÅÇ„Çå„Å∞",
              "reading": "„ÅÇ„Çå„Å∞",
              "score": 90,
-             "seq": 10467196,
+             "seq": 25756707,
              "text": "„ÅÇ„Çå„Å∞",
            },
            [],
          ],
          [
@@ -344,11 +349,11 @@
                    },
                  ],
                  "kana": "„Åü„Åπ„Å¶",
                  "reading": "„Åü„Åπ„Å¶",
                  "score": 0,
-                 "seq": 10091242,
+                 "seq": 25369429,
                  "text": "„Åü„Åπ„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„Å°„ÇÉ„ÅÜ",

- Expected  - 5
+ Received  + 10

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Å©„ÅÜ„Åó„Å¶„ÇÇ„Åü„Åπ„Åü„ÅÑ„Å£„Å¶„Åª„Å©„Åß„ÇÇ„Å™„ÅÑ„Åë„Å©„ÅÇ„Çå„Å∞„Åü„Åπ„Å°„ÇÉ„ÅÜ„ÄÇ" (limit: 1) [163.87ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -59,11 +59,11 @@
                    },
                  ],
                  "kana": "„ÅØ„Åò„ÇÅ„Å¶",
                  "reading": "„ÅØ„Åò„ÇÅ„Å¶",
                  "score": 0,
-                 "seq": 10452382,
+                 "seq": 25741566,
                  "text": "„ÅØ„Åò„ÇÅ„Å¶",
                },
                {
                  "conj": [
                    {
@@ -122,11 +122,11 @@
                    },
                  ],
                  "kana": "„Åä„Åë„Å∞",
                  "reading": "„Åä„Åë„Å∞",
                  "score": 0,
-                 "seq": 10297992,
+                 "seq": 25582586,
                  "suffix": "to do in advance / to leave in the current state expecting a later change",
                  "text": "„Åä„Åë„Å∞",
                },
              ],
              "compound": [
@@ -328,11 +328,11 @@
                          "gloss": "to be promoted",
                          "pos": "[v5r,vi]",
                        },
                        {
                          "gloss": "to do ...",
-                         "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                         "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                          "pos": "[aux-v,v5r]",
                        },
                      ],
                      "prop": [
                        {
@@ -345,11 +345,11 @@
                    },
                  ],
                  "kana": "„Å™„Å£„Å¶",
                  "reading": "„Å™„Å£„Å¶",
                  "score": 0,
-                 "seq": 10371753,
+                 "seq": 25658509,
                  "text": "„Å™„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -361,13 +361,18 @@
                        {
                          "gloss": "to stay",
                          "pos": "[v1,vi]",
                        },
                        {
-                         "gloss": "to be ...-ing; to have been ...-ing",
-                         "info": "after the -te form of a verb; indicates continuing action or state",
-                         "pos": "[v1,aux-v]",
+                         "gloss": "to be ...-ing",
+                         "info": "after the -te form of a verb; indicates continuing action",
+                         "pos": "[aux-v,v1]",
+                       },
+                       {
+                         "gloss": "to have ...-ed; to be ...-ed",
+                         "info": "after the -te form of a verb; indicates continuing state",
+                         "pos": "[aux-v,v1]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v1",
@@ -379,11 +384,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Åü",
                  "reading": "„ÅÑ„Åü",
                  "score": 0,
-                 "seq": 10547537,
+                 "seq": 25839474,
                  "suffix": "indicates continuing action (to be ...ing)",
                  "text": "„ÅÑ„Åü",
                },
              ],
              "compound": [

- Expected  - 8
+ Received  + 13

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÅØ„ÇÑ„ÇÅ„Å´„ÅØ„Åò„ÇÅ„Å¶„Åä„Åë„Å∞„Åô„Åì„Åó„ÅØ„Çâ„Åè„Å´„Å™„Å£„Å¶„Åü„ÅØ„Åö„ÄÇ" (limit: 1) [158.42ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -186,11 +186,11 @@
                    },
                  ],
                  "kana": "„Åç„Åë„Å™„ÅÑ",
                  "reading": "„Åç„Åë„Å™„ÅÑ",
                  "score": 176,
-                 "seq": 10187242,
+                 "seq": 25468073,
                  "text": "„Åç„Åë„Å™„ÅÑ",
                },
                {
                  "conj": [
                    {
@@ -243,11 +243,11 @@
                    },
                  ],
                  "kana": "„Åç„Åë„Å™„ÅÑ",
                  "reading": "„Åç„Åë„Å™„ÅÑ",
                  "score": 176,
-                 "seq": 10196635,
+                 "seq": 25478097,
                  "text": "„Åç„Åë„Å™„ÅÑ",
                },
                {
                  "conj": [
                    {
@@ -283,11 +283,11 @@
                    },
                  ],
                  "kana": "„Åç„Åë„Å™„ÅÑ",
                  "reading": "„Åç„Åë„Å™„ÅÑ",
                  "score": 176,
-                 "seq": 10541644,
+                 "seq": 25834067,
                  "text": "„Åç„Åë„Å™„ÅÑ",
                },
              ],
            },
            [],
@@ -441,11 +441,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -639,11 +646,11 @@
                },
              ],
              "kana": "„Åø„Åü",
              "reading": "„Åø„Åü",
              "score": 40,
-             "seq": 10312420,
+             "seq": 25597315,
              "text": "„Åø„Åü",
            },
            [],
          ],
        ],

- Expected  - 4
+ Received  + 12

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åç„Åè„Å´„Åç„Åë„Å™„ÅÑ„Åì„Å®„Çí„É°„ÉÉ„Çª„Åß„Åù„Å£„Å®„Åä„Åè„Å£„Å¶„Åø„Åü„ÄÇ" (limit: 1) [99.33ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -251,11 +251,11 @@
                },
              ],
              "kana": "„Åì„Å®„Å´„Å™„Å£„Åü",
              "reading": "„Åì„Å®„Å´„Å™„Å£„Åü",
              "score": 525,
-             "seq": 10617097,
+             "seq": 25911627,
              "text": "„Åì„Å®„Å´„Å™„Å£„Åü",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åì„Çå„Åß„Å†„ÇÅ„Å†„Å£„Åü„Çâ„ÇÇ„Å©„Åô„Åó„Åã„Å™„ÅÑ„Çà„Å≠„Å£„Å¶„Åì„Å®„Å´„Å™„Å£„Åü„ÄÇ" (limit: 1) [109.76ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -35,11 +35,11 @@
                    },
                  ],
                  "kana": "„Åæ„Å£„Å¶",
                  "reading": "„Åæ„Å£„Å¶",
                  "score": 12,
-                 "seq": 10289466,
+                 "seq": 25573970,
                  "text": "„Åæ„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -61,11 +61,11 @@
                    },
                  ],
                  "kana": "„Åæ„Å£„Å¶",
                  "reading": "„Åæ„Å£„Å¶",
                  "score": 16,
-                 "seq": 10345159,
+                 "seq": 25631360,
                  "text": "„Åæ„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -90,11 +90,11 @@
                    },
                  ],
                  "kana": "„Åæ„Å£„Å¶",
                  "reading": "„Åæ„Å£„Å¶",
                  "score": 12,
-                 "seq": 10544132,
+                 "seq": 25836374,
                  "text": "„Åæ„Å£„Å¶",
                },
              ],
            },
            [],
@@ -155,13 +155,18 @@
                        {
                          "gloss": "to stay",
                          "pos": "[v1,vi]",
                        },
                        {
-                         "gloss": "to be ...-ing; to have been ...-ing",
-                         "info": "after the -te form of a verb; indicates continuing action or state",
-                         "pos": "[v1,aux-v]",
+                         "gloss": "to be ...-ing",
+                         "info": "after the -te form of a verb; indicates continuing action",
+                         "pos": "[aux-v,v1]",
+                       },
+                       {
+                         "gloss": "to have ...-ed; to be ...-ed",
+                         "info": "after the -te form of a verb; indicates continuing state",
+                         "pos": "[aux-v,v1]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v1",
@@ -173,11 +178,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å¶",
                  "reading": "„ÅÑ„Å¶",
                  "score": 0,
-                 "seq": 10547541,
+                 "seq": 25839478,
                  "text": "„ÅÑ„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÇÇ",
@@ -386,11 +391,11 @@
                    },
                  ],
                  "kana": "„Åó„Å¶",
                  "reading": "„Åó„Å¶",
                  "score": 0,
-                 "seq": 10150864,
+                 "seq": 25430295,
                  "text": "„Åó„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„ÅÑ„Çã",

- Expected  - 8
+ Received  + 13

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åæ„Å£„Å¶„Å∞„Åã„Çä„ÅÑ„Å¶„ÇÇ„Å™„Å´„ÇÇ„ÅØ„Åò„Åæ„Çâ„Å™„ÅÑ„Åç„Åå„Åó„Å¶„ÅÑ„Çã„ÄÇ" (limit: 1) [185.01ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -71,11 +71,11 @@
                },
              ],
              "kana": "„Åä„Å°„Å§„Åë„Å∞",
              "reading": "„Åä„Å°„Å§„Åë„Å∞",
              "score": 275,
-             "seq": 10003894,
+             "seq": 25279325,
              "text": "„Åä„Å°„Å§„Åë„Å∞",
            },
            [],
          ],
          [
@@ -110,11 +110,11 @@
                    },
                  ],
                  "kana": "„Åø„Åà„Å¶",
                  "reading": "„Åø„Åà„Å¶",
                  "score": 0,
-                 "seq": 10589498,
+                 "seq": 25883120,
                  "text": "„Åø„Åà„Å¶",
                },
                {
                  "conj": [],
                  "kana": "„Åè„Çã",
@@ -323,11 +323,11 @@
                },
              ],
              "kana": "„ÅÑ„ÅÑ„Åç„Åã„Åõ„Åü",
              "reading": "„ÅÑ„ÅÑ„Åç„Åã„Åõ„Åü",
              "score": 396,
-             "seq": 10350269,
+             "seq": 25636370,
              "text": "„ÅÑ„ÅÑ„Åç„Åã„Åõ„Åü",
            },
            [],
          ],
        ],

- Expected  - 3
+ Received  + 3

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åô„Åì„Åó„Åä„Å°„Å§„Åë„Å∞„Åø„Åà„Å¶„Åè„Çã„ÅØ„Åö„Å†„Å®„Åò„Å∂„Çì„Å´„ÅÑ„ÅÑ„Åç„Åã„Åõ„Åü„ÄÇ" (limit: 1) [200.08ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -154,11 +154,11 @@
            "sukoshizutsu",
            {
              "conj": [],
              "gloss": [
                {
-                 "gloss": "little by little",
+                 "gloss": "little by little; bit by bit",
                  "pos": "[adv]",
                },
              ],
              "kana": "„Åô„Åì„Åó„Åö„Å§",
              "reading": "„Åô„Åì„Åó„Åö„Å§",
@@ -216,11 +216,11 @@
                    },
                  ],
                  "kana": "„Å™„Çâ",
                  "reading": "„Å™„Çâ",
                  "score": 64,
-                 "seq": 12279411,
+                 "seq": 25840055,
                  "text": "„Å™„Çâ",
                },
              ],
            },
            [],
@@ -287,11 +287,11 @@
                    },
                  ],
                  "kana": "„Åß„Åç",
                  "reading": "„Åß„Åç",
                  "score": 0,
-                 "seq": 10228524,
+                 "seq": 25510632,
                  "text": "„Åß„Åç",
                },
                {
                  "conj": [],
                  "kana": "„Åù„ÅÜ",

- Expected  - 3
+ Received  + 3

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åô„Åê„Å´„ÅØ„ÇÄ„Çä„Å†„Çç„ÅÜ„Åë„Å©„Åô„Åì„Åó„Åö„Å§„Å™„Çâ„Åß„Åç„Åù„ÅÜ„ÄÇ" (limit: 1) [150.75ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -107,12 +107,12 @@
                      "gloss": "to smile",
                      "pos": "[v5u,vi]",
                    },
                    {
                      "gloss": "to sneer; to ridicule",
-                     "info": "occ. written as Âó§„ÅÜ",
-                     "pos": "[v5u,vt,vi]",
+                     "info": "esp. Âó§„ÅÜ",
+                     "pos": "[v5u,vt]",
                    },
                    {
                      "gloss": "to be dumbfounded; to be flabbergasted",
                      "info": "as Á¨ë„Å£„Å¶„Åó„Åæ„ÅÜ or Á¨ë„Å£„Å°„ÇÉ„ÅÜ",
                      "pos": "[v5u,vi]",
@@ -129,11 +129,11 @@
                },
              ],
              "kana": "„Çè„Çâ„Å£„Å¶",
              "reading": "„Çè„Çâ„Å£„Å¶",
              "score": 36,
-             "seq": 10162684,
+             "seq": 25443027,
              "text": "„Çè„Çâ„Å£„Å¶",
            },
            [],
          ],
          [
@@ -154,15 +154,81 @@
                          "readok": true,
                          "via": [
                            {
                              "gloss": [
                                {
-                                 "gloss": "to finish; to end; to be completed",
+                                 "gloss": "to finish; to get it over with; to conclude",
+                                 "pos": "[v5s,vt]",
+                               },
+                               {
+                                 "gloss": "to settle; to pay back",
+                                 "pos": "[v5s,vt]",
+                               },
+                               {
+                                 "gloss": "to get along (without something); to make do with (without)",
+                                 "info": "often with „Åß",
+                                 "pos": "[v5s,vt]",
+                               },
+                             ],
+                             "prop": [
+                               {
+                                 "pos": "v5s",
+                                 "type": "Potential",
+                               },
+                             ],
+                             "reading": "Ê∏à„Åæ„Åô „Äê„Åô„Åæ„Åô„Äë",
+                             "readok": true,
+                           },
+                         ],
+                       },
+                     ],
+                     "kana": "„Åô„Åæ„Åõ„Å¶",
+                     "reading": "„Åô„Åæ„Åõ„Å¶",
+                     "score": 0,
+                     "seq": 26129228,
+                     "text": "„Åô„Åæ„Åõ„Å¶",
+                   },
+                   {
+                     "conj": [],
+                     "kana": "„ÅÑ„ÅÑ",
+                     "reading": "„ÅÑ„ÅÑ",
+                     "score": 0,
+                     "seq": 2820690,
+                     "suffix": "it's ok if ... / is it ok if ...?",
+                     "text": "„ÅÑ„ÅÑ",
+                   },
+                 ],
+                 "compound": [
+                   "„Åô„Åæ„Åõ„Å¶",
+                   "„ÅÑ„ÅÑ",
+                 ],
+                 "kana": "„Åô„Åæ„Åõ„Å¶ „ÅÑ„ÅÑ",
+                 "reading": "„Åô„Åæ„Åõ„Å¶„ÅÑ„ÅÑ",
+                 "score": 297,
+                 "text": "„Åô„Åæ„Åõ„Å¶„ÅÑ„ÅÑ",
+               },
+               {
+                 "components": [
+                   {
+                     "conj": [
+                       {
+                         "prop": [
+                           {
+                             "pos": "v1",
+                             "type": "Conjunctive (~te)",
+                           },
+                         ],
+                         "readok": true,
+                         "via": [
+                           {
+                             "gloss": [
+                               {
+                                 "gloss": "to finish; to end; to be completed; to be resolved",
                                  "pos": "[v5m,vi]",
                                },
                                {
-                                 "gloss": "to merely result in something less severe than expected",
+                                 "gloss": "to have a result less severe than expected",
                                  "pos": "[v5m,vi]",
                                },
                                {
                                  "gloss": "to feel at ease",
                                  "pos": "[v5m,vi]",
@@ -186,11 +252,11 @@
                        },
                      ],
                      "kana": "„Åô„Åæ„Åõ„Å¶",
                      "reading": "„Åô„Åæ„Åõ„Å¶",
                      "score": 0,
-                     "seq": 10820417,
+                     "seq": 26129574,
                      "text": "„Åô„Åæ„Åõ„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„ÅÑ„ÅÑ",
@@ -283,11 +349,11 @@
                        },
                      ],
                      "kana": "„Åô„Åæ„Åõ„Å¶",
                      "reading": "„Åô„Åæ„Åõ„Å¶",
                      "score": 0,
-                     "seq": 10929273,
+                     "seq": 26247221,
                      "text": "„Åô„Åæ„Åõ„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„ÅÑ„ÅÑ",
@@ -340,11 +406,11 @@
                        },
                      ],
                      "kana": "„Åô„Åæ„Åõ„Å¶",
                      "reading": "„Åô„Åæ„Åõ„Å¶",
                      "score": 0,
-                     "seq": 10873759,
+                     "seq": 26186811,
                      "text": "„Åô„Åæ„Åõ„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„ÅÑ„ÅÑ",
@@ -397,11 +463,11 @@
                        },
                      ],
                      "kana": "„Åô„Åæ„Åõ„Å¶",
                      "reading": "„Åô„Åæ„Åõ„Å¶",
                      "score": 0,
-                     "seq": 11432392,
+                     "seq": 26791129,
                      "text": "„Åô„Åæ„Åõ„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„ÅÑ„ÅÑ",
@@ -447,51 +513,16 @@
                            },
                          ],
                          "reading": "Ê∏à„Åæ„Åõ„Çã „Äê„Åô„Åæ„Åõ„Çã„Äë",
                          "readok": true,
                        },
-                       {
-                         "prop": [
-                           {
-                             "pos": "v1",
-                             "type": "Conjunctive (~te)",
-                           },
-                         ],
-                         "readok": true,
-                         "via": [
-                           {
-                             "gloss": [
-                               {
-                                 "gloss": "to finish; to get it over with; to conclude",
-                                 "pos": "[v5s,vt]",
-                               },
-                               {
-                                 "gloss": "to settle; to pay back",
-                                 "pos": "[v5s,vt]",
-                               },
-                               {
-                                 "gloss": "to get along (without something); to make do with (without)",
-                                 "info": "often with „Åß",
-                                 "pos": "[v5s,vt]",
-                               },
-                             ],
-                             "prop": [
-                               {
-                                 "pos": "v5s",
-                                 "type": "Potential",
-                               },
-                             ],
-                             "reading": "Ê∏à„Åæ„Åô „Äê„Åô„Åæ„Åô„Äë",
-                             "readok": true,
-                           },
-                         ],
-                       },
                      ],
                      "kana": "„Åô„Åæ„Åõ„Å¶",
                      "reading": "„Åô„Åæ„Åõ„Å¶",
                      "score": 0,
-                     "seq": 10081437,
+                     "seq": 25359025,
                      "text": "„Åô„Åæ„Åõ„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„ÅÑ„ÅÑ",
@@ -622,11 +653,11 @@
                },
              ],
              "kana": "„Åò„ÇÉ„Å™„ÅÑ",
              "reading": "„Åò„ÇÉ„Å™„ÅÑ",
              "score": 144,
-             "seq": 10019552,
+             "seq": 25295465,
              "text": "„Åò„ÇÉ„Å™„ÅÑ",
            },
            [],
          ],
          [

- Expected  - 47
+ Received  + 77

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åù„Çå„Å£„Å¶„Çè„Çâ„Å£„Å¶„Åô„Åæ„Åõ„Å¶„ÅÑ„ÅÑ„ÅØ„Å™„Åó„Åò„ÇÉ„Å™„ÅÑ„Å®„Åä„ÇÇ„ÅÜ„ÄÇ" (limit: 1) [224.15ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -58,19 +58,19 @@
                  "conj": [
                    {
                      "gloss": [
                        {
                          "gloss": "to say; to utter; to declare",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vt]",
                        },
                        {
                          "gloss": "to name; to call",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vt]",
                        },
                        {
                          "gloss": "to go (e.g. "the alarm went ping"); to make a noise",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vi]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v5u",
@@ -82,11 +82,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Å¶",
                  "reading": "„ÅÑ„Å£„Å¶",
                  "score": 12,
-                 "seq": 10112667,
+                 "seq": 25391404,
                  "text": "„ÅÑ„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -126,11 +126,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Å¶",
                  "reading": "„ÅÑ„Å£„Å¶",
                  "score": 12,
-                 "seq": 10180396,
+                 "seq": 25461154,
                  "text": "„ÅÑ„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -151,11 +151,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Å¶",
                  "reading": "„ÅÑ„Å£„Å¶",
                  "score": 12,
-                 "seq": 10237833,
+                 "seq": 25520414,
                  "text": "„ÅÑ„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -224,11 +224,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å£„Å¶",
                  "reading": "„ÅÑ„Å£„Å¶",
                  "score": 12,
-                 "seq": 10346512,
+                 "seq": 25632665,
                  "text": "„ÅÑ„Å£„Å¶",
                },
              ],
            },
            [],
@@ -380,11 +380,11 @@
                      "pos": "[v5r,vt]",
                    },
                    {
                      "field": "{go}",
                      "gloss": "to cut (the connection between two groups)",
+                     "info": "sometimes „Ç≠„Çã",
                      "pos": "[v5r,vt]",
                    },
                    {
                      "gloss": "to start a fire (with wood-wood friction or by striking a metal against stone)",
                      "info": "also written as ÈëΩ„Çã",
@@ -531,11 +531,15 @@
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
                    {
-                     "gloss": "stamp (postage); merchandise certificate",
+                     "gloss": "stamp (postage)",
+                     "pos": "[n]",
+                   },
+                   {
+                     "gloss": "merchandise certificate",
                      "pos": "[n]",
                    },
                  ],
                  "kana": "„Åç„Å£„Å¶",
                  "reading": "„Åç„Å£„Å¶",
@@ -563,11 +567,11 @@
                    },
                  ],
                  "kana": "„Åç„Å£„Å¶",
                  "reading": "„Åç„Å£„Å¶",
                  "score": 12,
-                 "seq": 10530575,
+                 "seq": 25822421,
                  "text": "„Åç„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -654,11 +658,11 @@
                          "pos": "[v5r,vt]",
                        },
                        {
                          "field": "{go}",
                          "gloss": "to cut (the connection between two groups)",
+                         "info": "sometimes „Ç≠„Çã",
                          "pos": "[v5r,vt]",
                        },
                        {
                          "gloss": "to start a fire (with wood-wood friction or by striking a metal against stone)",
                          "info": "also written as ÈëΩ„Çã",
@@ -695,11 +699,11 @@
                    },
                  ],
                  "kana": "„Åç„Å£„Å¶",
                  "reading": "„Åç„Å£„Å¶",
                  "score": 12,
-                 "seq": 10569915,
+                 "seq": 25863346,
                  "text": "„Åç„Å£„Å¶",
                },
              ],
            },
            [],
@@ -742,11 +746,11 @@
                          "gloss": "to do completely; to finish",
                          "info": "after the -te form of a verb",
                          "pos": "[aux-v,v5u]",
                        },
                        {
-                         "gloss": "to do accidentally; to do without meaning to; to happen to do",
+                         "gloss": "to do accidentally; to do without meaning to; to happen to do; to end up ...",
                          "info": "after the -te form of a verb",
                          "pos": "[aux-v,v5u]",
                        },
                      ],
                      "prop": [
@@ -760,11 +764,11 @@
                    },
                  ],
                  "kana": "„Åó„Åæ„Å£„Åü",
                  "reading": "„Åó„Åæ„Å£„Åü",
                  "score": 90,
-                 "seq": 10584171,
+                 "seq": 25877875,
                  "text": "„Åó„Åæ„Å£„Åü",
                },
              ],
            },
            [],

- Expected  - 12
+ Received  + 18

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Å™„Å´„Åã„ÅÑ„Å£„Å¶„Åã„Çâ„Åç„Çã„Åπ„Åç„Å†„Å£„Åü„ÅÆ„Å´„Åç„Å£„Å¶„Åó„Åæ„Å£„Åü„ÄÇ" (limit: 1) [135.44ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -44,11 +44,11 @@
                    },
                  ],
                  "kana": "„Åü„Åó„Åã„ÇÅ„Çà„ÅÜ",
                  "reading": "„Åü„Åó„Åã„ÇÅ„Çà„ÅÜ",
                  "score": 0,
-                 "seq": 10131643,
+                 "seq": 25410872,
                  "text": "„Åü„Åó„Åã„ÇÅ„Çà„ÅÜ",
                },
                {
                  "conj": [
                    {
@@ -162,11 +162,11 @@
                },
              ],
              "kana": "„ÇÅ„Å†„Å£„Å¶",
              "reading": "„ÇÅ„Å†„Å£„Å¶",
              "score": 36,
-             "seq": 10549787,
+             "seq": 25842269,
              "text": "„ÇÅ„Å†„Å£„Å¶",
            },
            [],
          ],
          [
@@ -207,11 +207,11 @@
                          "gloss": "to do completely; to finish",
                          "info": "after the -te form of a verb",
                          "pos": "[aux-v,v5u]",
                        },
                        {
-                         "gloss": "to do accidentally; to do without meaning to; to happen to do",
+                         "gloss": "to do accidentally; to do without meaning to; to happen to do; to end up ...",
                          "info": "after the -te form of a verb",
                          "pos": "[aux-v,v5u]",
                        },
                      ],
                      "prop": [
@@ -225,11 +225,11 @@
                    },
                  ],
                  "kana": "„Åó„Åæ„Å£„Åü",
                  "reading": "„Åó„Åæ„Å£„Åü",
                  "score": 90,
-                 "seq": 10584171,
+                 "seq": 25877875,
                  "text": "„Åó„Åæ„Å£„Åü",
                },
              ],
            },
            [],

- Expected  - 4
+ Received  + 4

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åì„Å£„Åù„Çä„Åü„Åó„Åã„ÇÅ„Çà„ÅÜ„Å®„Åó„Å¶„Åã„Åà„Å£„Å¶„ÇÅ„Å†„Å£„Å¶„Åó„Åæ„Å£„Åü„ÄÇ" (limit: 1) [128.57ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -41,11 +41,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Çè„Çå„Åü",
                  "reading": "„ÅÑ„Çè„Çå„Åü",
                  "score": 64,
-                 "seq": 10780059,
+                 "seq": 26085619,
                  "text": "„ÅÑ„Çè„Çå„Åü",
                },
                {
                  "conj": [
                    {
@@ -59,19 +59,19 @@
                      "via": [
                        {
                          "gloss": [
                            {
                              "gloss": "to say; to utter; to declare",
-                             "pos": "[v5u]",
+                             "pos": "[v5u,vt]",
                            },
                            {
                              "gloss": "to name; to call",
-                             "pos": "[v5u]",
+                             "pos": "[v5u,vt]",
                            },
                            {
                              "gloss": "to go (e.g. "the alarm went ping"); to make a noise",
-                             "pos": "[v5u]",
+                             "pos": "[v5u,vi]",
                            },
                          ],
                          "prop": [
                            {
                              "pos": "v5u",
@@ -85,11 +85,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Çè„Çå„Åü",
                  "reading": "„ÅÑ„Çè„Çå„Åü",
                  "score": 64,
-                 "seq": 11159769,
+                 "seq": 26496340,
                  "text": "„ÅÑ„Çè„Çå„Åü",
                },
              ],
            },
            [],
@@ -139,11 +139,16 @@
                      "gloss": "to be (animate); to be; to exist",
                      "pos": "[v5r,vi]",
                    },
                    {
                      "gloss": "to be ...-ing",
-                     "info": "after the -te form of a verb; indicates continuing action or state",
+                     "info": "after the -te form of a verb; indicates continuing action",
+                     "pos": "[v5r,aux-v]",
+                   },
+                   {
+                     "gloss": "to have ...-ed; to be ...-ed",
+                     "info": "after the -te form of a verb; indicates continuing state",
                      "pos": "[v5r,aux-v]",
                    },
                    {
                      "gloss": "to (have the audacity to) do",
                      "info": "after -masu base of verb; indicates contempt or disdain for another's actions",
@@ -161,11 +166,11 @@
                },
              ],
              "kana": "„Åä„Çä",
              "reading": "„Åä„Çä",
              "score": 40,
-             "seq": 10634886,
+             "seq": 25930218,
              "text": "„Åä„Çä",
            },
            [],
          ],
          [
@@ -240,11 +245,11 @@
                },
              ],
              "kana": "„ÇÑ„Å£„Å¶„Åø„Åü„Çâ",
              "reading": "„ÇÑ„Å£„Å¶„Åø„Åü„Çâ",
              "score": 275,
-             "seq": 10381886,
+             "seq": 25668937,
              "text": "„ÇÑ„Å£„Å¶„Åø„Åü„Çâ",
            },
            [],
          ],
          [
@@ -295,11 +300,11 @@
                    },
                  ],
                  "kana": "„Åä„ÇÇ„Å£„Åü",
                  "reading": "„Åä„ÇÇ„Å£„Åü",
                  "score": 36,
-                 "seq": 10138358,
+                 "seq": 25417876,
                  "text": "„Åä„ÇÇ„Å£„Åü",
                },
                {
                  "conj": [
                    {
@@ -349,11 +354,11 @@
                    },
                  ],
                  "kana": "„Åä„ÇÇ„Å£„Åü",
                  "reading": "„Åä„ÇÇ„Å£„Åü",
                  "score": 36,
-                 "seq": 10542054,
+                 "seq": 25834394,
                  "text": "„Åä„ÇÇ„Å£„Åü",
                },
              ],
            },
            [],
@@ -447,11 +452,11 @@
                    },
                  ],
                  "kana": "„Çà„Çä",
                  "reading": "„Çà„Çä",
                  "score": 40,
-                 "seq": 10351921,
+                 "seq": 25638048,
                  "text": "„Çà„Çä",
                },
              ],
            },
            [],

- Expected  - 11
+ Received  + 16

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÅÑ„Çè„Çå„Åü„Å®„Åä„Çä„Å´„ÇÑ„Å£„Å¶„Åø„Åü„Çâ„Åä„ÇÇ„Å£„Åü„Çà„Çä„Åã„Çì„Åü„Çì„Å†„Å£„Åü„ÄÇ" (limit: 1) [150.58ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -9,11 +9,11 @@
                {
                  "conj": [
                    {
                      "gloss": [
                        {
-                         "gloss": "to apologize; to apologise",
+                         "gloss": "to apologize (apologise)",
                          "pos": "[v5r,vt]",
                        },
                        {
                          "gloss": "to refuse; to decline",
                          "pos": "[v5r,vt]",
@@ -34,11 +34,11 @@
                    },
                  ],
                  "kana": "„ÅÇ„ÇÑ„Åæ„Çå„Å∞",
                  "reading": "„ÅÇ„ÇÑ„Åæ„Çå„Å∞",
                  "score": 275,
-                 "seq": 10436635,
+                 "seq": 25725358,
                  "text": "„ÅÇ„ÇÑ„Åæ„Çå„Å∞",
                },
                {
                  "conj": [
                    {
@@ -68,11 +68,11 @@
                    },
                  ],
                  "kana": "„ÅÇ„ÇÑ„Åæ„Çå„Å∞",
                  "reading": "„ÅÇ„ÇÑ„Åæ„Çå„Å∞",
                  "score": 275,
-                 "seq": 10468668,
+                 "seq": 25757982,
                  "text": "„ÅÇ„ÇÑ„Åæ„Çå„Å∞",
                },
              ],
            },
            [],
@@ -83,15 +83,15 @@
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
                    {
-                     "gloss": "to finish; to end; to be completed",
+                     "gloss": "to finish; to end; to be completed; to be resolved",
                      "pos": "[v5m,vi]",
                    },
                    {
-                     "gloss": "to merely result in something less severe than expected",
+                     "gloss": "to have a result less severe than expected",
                      "pos": "[v5m,vi]",
                    },
                    {
                      "gloss": "to feel at ease",
                      "pos": "[v5m,vi]",
@@ -256,11 +256,11 @@
                        },
                      ],
                      "kana": "„Åä„ÇÇ„Å£„Å¶",
                      "reading": "„Åä„ÇÇ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10542058,
+                     "seq": 25834398,
                      "text": "„Åä„ÇÇ„Å£„Å¶",
                    },
                    {
                      "conj": [
                        {
@@ -272,13 +272,18 @@
                            {
                              "gloss": "to stay",
                              "pos": "[v1,vi]",
                            },
                            {
-                             "gloss": "to be ...-ing; to have been ...-ing",
-                             "info": "after the -te form of a verb; indicates continuing action or state",
-                             "pos": "[v1,aux-v]",
+                             "gloss": "to be ...-ing",
+                             "info": "after the -te form of a verb; indicates continuing action",
+                             "pos": "[aux-v,v1]",
+                           },
+                           {
+                             "gloss": "to have ...-ed; to be ...-ed",
+                             "info": "after the -te form of a verb; indicates continuing state",
+                             "pos": "[aux-v,v1]",
                            },
                          ],
                          "prop": [
                            {
                              "pos": "v1",
@@ -290,11 +295,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Åü",
                      "reading": "„ÅÑ„Åü",
                      "score": 0,
-                     "seq": 10547537,
+                     "seq": 25839474,
                      "suffix": "indicates continuing action (to be ...ing)",
                      "text": "„ÅÑ„Åü",
                    },
                  ],
                  "compound": [
@@ -332,11 +337,11 @@
                        },
                      ],
                      "kana": "„Åä„ÇÇ„Å£„Å¶",
                      "reading": "„Åä„ÇÇ„Å£„Å¶",
                      "score": 0,
-                     "seq": 10138362,
+                     "seq": 25417880,
                      "text": "„Åä„ÇÇ„Å£„Å¶",
                    },
                    {
                      "conj": [
                        {
@@ -348,13 +353,18 @@
                            {
                              "gloss": "to stay",
                              "pos": "[v1,vi]",
                            },
                            {
-                             "gloss": "to be ...-ing; to have been ...-ing",
-                             "info": "after the -te form of a verb; indicates continuing action or state",
-                             "pos": "[v1,aux-v]",
+                             "gloss": "to be ...-ing",
+                             "info": "after the -te form of a verb; indicates continuing action",
+                             "pos": "[aux-v,v1]",
+                           },
+                           {
+                             "gloss": "to have ...-ed; to be ...-ed",
+                             "info": "after the -te form of a verb; indicates continuing state",
+                             "pos": "[aux-v,v1]",
                            },
                          ],
                          "prop": [
                            {
                              "pos": "v1",
@@ -366,11 +376,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Åü",
                      "reading": "„ÅÑ„Åü",
                      "score": 0,
-                     "seq": 10547537,
+                     "seq": 25839474,
                      "suffix": "indicates continuing action (to be ...ing)",
                      "text": "„ÅÑ„Åü",
                    },
                  ],
                  "compound": [
@@ -471,11 +481,11 @@
                    },
                  ],
                  "kana": "„Åß„ÇÇ„Å™„ÅÑ",
                  "reading": "„Åß„ÇÇ„Å™„ÅÑ",
                  "score": 336,
-                 "seq": 10164821,
+                 "seq": 25445371,
                  "text": "„Åß„ÇÇ„Å™„ÅÑ",
                },
              ],
            },
            [],

- Expected  - 16
+ Received  + 26

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÅÇ„ÇÑ„Åæ„Çå„Å∞„Åô„ÇÄ„Å®„Åä„ÇÇ„Å£„Å¶„Åü„Åë„Å©„Åù„ÅÜ„ÅÑ„ÅÜ„ÇÇ„Çì„Åß„ÇÇ„Å™„ÅÑ„ÄÇ" (limit: 1) [129.27ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -228,11 +228,11 @@
                },
              ],
              "kana": "„ÇÑ„Å£„Å¶",
              "reading": "„ÇÑ„Å£„Å¶",
              "score": 40,
-             "seq": 10399708,
+             "seq": 25687374,
              "text": "„ÇÑ„Å£„Å¶",
            },
            [],
          ],
          [
@@ -244,98 +244,94 @@
                    {
                      "gloss": "to raise; to elevate",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to do up (one's hair)",
+                     "gloss": "to move something (to a higher place); to put onto (e.g. a shelf)",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to fly (a kite, etc.); to launch (fireworks, etc.); to surface (a submarine, etc.)",
+                     "gloss": "to increase (price, quality, status, etc.); to raise (a wage)",
+                     "info": "occ. È®∞„Åí„Çã in ref. to price",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to land (a boat)",
+                     "gloss": "to show someone (into a room); to let in (e.g. a guest)",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to deep-fry",
+                     "gloss": "to give",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to show someone (into a room)",
+                     "gloss": "to enrol (one's child in school); to enroll; to send (one's child; e.g. to college)",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to give",
+                     "gloss": "to develop (talent, skill, etc.); to improve",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to send someone (away)",
+                     "gloss": "to earn (something desirable); to achieve (e.g. a good result); to obtain",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to enrol (one's child in school); to enroll",
+                     "gloss": "to promote (someone)",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to increase (price, quality, status, etc.); to develop (talent, skill); to improve",
+                     "gloss": "to complete; to finish",
                      "pos": "[v1,vt]",
                    },
                    {
                      "gloss": "to make (a loud sound); to raise (one's voice)",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to earn (something desirable)",
-                     "pos": "[v1,vt]",
-                   },
-                   {
-                     "gloss": "to praise",
+                     "gloss": "to raise (one's gaze); to lift up (one's face); to look up",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to give (an example, etc.); to cite",
-                     "info": "usu. Êåô„Åí„Çã",
+                     "gloss": "to do up (one's hair)",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to summon up (all of one's energy, etc.)",
-                     "info": "usu. Êåô„Åí„Çã",
+                     "gloss": "to offer up (incense, a prayer, etc.) to the gods (or Buddha, etc.)",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to arrest",
+                     "gloss": "to praise; to commend; to flatter",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to nominate",
+                     "gloss": "to make do (with less expenses than expected); to cover expenses (with a given amount); to set costs",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to summon (for geishas, etc.)",
+                     "gloss": "to finish (one's studies); to complete (a lesson); to pass (e.g. a class)",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to offer up (incense, a prayer, etc.) to the gods (or Buddha, etc.)",
+                     "gloss": "to upload (e.g. an image); to publish (on the internet); to post",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to bear (a child)",
+                     "gloss": "to raise someone's spirits; to cheer someone up; to enhance a mood",
+                     "info": "esp. as „Ç¢„Ç≤„Çã",
                      "pos": "[v1,vt]",
                    },
                    {
-                     "gloss": "to conduct (a ceremony, esp. a wedding)",
-                     "info": "usu. Êåô„Åí„Çã",
-                     "pos": "[v1,vt]",
+                     "gloss": "(of the tide) to come in; to rise",
+                     "pos": "[v1,vi]",
                    },
                    {
-                     "gloss": "(of the tide) to come in",
+                     "field": "{finc}",
+                     "gloss": "to increase (of market price); to rise (of stock prices)",
                      "pos": "[v1,vi]",
                    },
                    {
-                     "gloss": "to vomit",
+                     "gloss": "to vomit; to throw up",
                      "pos": "[v1,vi,vt]",
                    },
                    {
                      "gloss": "to do for (the sake of someone else)",
                      "info": "after the -te form of a verb",
@@ -363,11 +359,11 @@
                },
              ],
              "kana": "„ÅÇ„Åí„Çà„ÅÜ",
              "reading": "„ÅÇ„Åí„Çà„ÅÜ",
              "score": 160,
-             "seq": 10605664,
+             "seq": 25900373,
              "text": "„ÅÇ„Åí„Çà„ÅÜ",
            },
            [],
          ],
          [
@@ -492,19 +488,19 @@
                  "via": [
                    {
                      "gloss": [
                        {
                          "gloss": "to say; to utter; to declare",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vt]",
                        },
                        {
                          "gloss": "to name; to call",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vt]",
                        },
                        {
                          "gloss": "to go (e.g. "the alarm went ping"); to make a noise",
-                         "pos": "[v5u]",
+                         "pos": "[v5u,vi]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v5u",
@@ -518,11 +514,11 @@
                },
              ],
              "kana": "„ÅÑ„Çè„Çå„Å¶",
              "reading": "„ÅÑ„Çè„Çå„Å¶",
              "score": 48,
-             "seq": 11159773,
+             "seq": 26496344,
              "text": "„ÅÑ„Çè„Çå„Å¶",
            },
            [],
          ],
          [
@@ -640,11 +636,11 @@
                },
              ],
              "kana": "„Åü„ÅÆ„Çì„Å†",
              "reading": "„Åü„ÅÆ„Çì„Å†",
              "score": 176,
-             "seq": 10550286,
+             "seq": 25842846,
              "text": "„Åü„ÅÆ„Çì„Å†",
            },
            [],
          ],
        ],

- Expected  - 35
+ Received  + 31

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åã„Çè„Çä„Å´„ÇÑ„Å£„Å¶„ÅÇ„Åí„Çà„ÅÜ„Åã„Å£„Å¶„ÅÑ„Çè„Çå„Å¶„Åô„Å™„Åä„Å´„Åü„ÅÆ„Çì„Å†„ÄÇ" (limit: 1) [211.00ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -108,11 +108,11 @@
                },
              ],
              "kana": "„ÇÑ„Çâ„Å™„ÅÑ",
              "reading": "„ÇÑ„Çâ„Å™„ÅÑ",
              "score": 336,
-             "seq": 10399702,
+             "seq": 25687317,
              "text": "„ÇÑ„Çâ„Å™„ÅÑ",
            },
            [],
          ],
          [
@@ -200,11 +200,11 @@
                },
              ],
              "kana": "„Åä„Åì„Çâ„Çå",
              "reading": "„Åä„Åì„Çâ„Çå",
              "score": 176,
-             "seq": 12157744,
+             "seq": 27574315,
              "text": "„Åä„Åì„Çâ„Çå",
            },
            [],
          ],
          [
@@ -247,11 +247,11 @@
                },
              ],
              "gloss": [
                {
                  "gloss": "quite capable of ...; not unlikely to ...; may well ...; might ...; could ...; would not hesitate to ...",
-                 "info": "after the -masu stem of verb",
+                 "info": "after the -masu stem of a verb",
                  "pos": "[exp,suf]",
                },
              ],
              "kana": "„Åã„Å≠„Å™„ÅÑ",
              "reading": "„Åã„Å≠„Å™„ÅÑ",

- Expected  - 3
+ Received  + 3

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åù„Çå„Å™„Çâ„ÇÑ„Çâ„Å™„ÅÑ„Åª„ÅÜ„Åå„Åæ„Åó„Å†„Å£„Å¶„Åä„Åì„Çâ„Çå„Åã„Å≠„Å™„ÅÑ„ÄÇ" (limit: 1) [245.30ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -90,11 +90,11 @@
                },
              ],
              "kana": "„ÇÑ„Çâ„Å™„ÅÑ",
              "reading": "„ÇÑ„Çâ„Å™„ÅÑ",
              "score": 336,
-             "seq": 10399702,
+             "seq": 25687317,
              "text": "„ÇÑ„Çâ„Å™„ÅÑ",
            },
            [],
          ],
          [
@@ -212,11 +212,11 @@
                },
              ],
              "kana": "„Åç„ÇÅ„Åü",
              "reading": "„Åç„ÇÅ„Åü",
              "score": 36,
-             "seq": 10617218,
+             "seq": 25912455,
              "text": "„Åç„ÇÅ„Åü",
            },
            [],
          ],
          [
@@ -336,11 +336,11 @@
                },
              ],
              "kana": "„ÇÑ„Çå",
              "reading": "„ÇÑ„Çå",
              "score": 40,
-             "seq": 10399740,
+             "seq": 25687406,
              "text": "„ÇÑ„Çå",
            },
            [],
          ],
          [
@@ -365,11 +365,11 @@
                },
              ],
              "kana": "„Å®„ÅÑ„Çè„Çå„Åü„Çâ",
              "reading": "„Å®„ÅÑ„Çè„Çå„Åü„Çâ",
              "score": 216,
-             "seq": 10586305,
+             "seq": 25879751,
              "text": "„Å®„ÅÑ„Çè„Çå„Åü„Çâ",
            },
            [],
          ],
          [
@@ -414,11 +414,11 @@
                    },
                  ],
                  "kana": "„ÇÜ„Çå„Çã",
                  "reading": "„ÇÜ„Çå„Çã",
                  "score": 36,
-                 "seq": 10123831,
+                 "seq": 25402995,
                  "text": "„ÇÜ„Çå„Çã",
                },
              ],
            },
            [],

- Expected  - 5
+ Received  + 5

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÇÑ„Çâ„Å™„ÅÑ„Å£„Å¶„Åç„ÇÅ„Åü„ÅÆ„Å´„ÇÑ„Çå„Å®„ÅÑ„Çè„Çå„Åü„Çâ„ÇÜ„Çå„Çã„ÄÇ" (limit: 1) [147.01ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -68,11 +68,11 @@
                    },
                  ],
                  "kana": "„Å™„Çâ",
                  "reading": "„Å™„Çâ",
                  "score": 64,
-                 "seq": 12279411,
+                 "seq": 25840055,
                  "text": "„Å™„Çâ",
                },
              ],
            },
            [],
@@ -129,11 +129,11 @@
                },
              ],
              "kana": "„Å§„Åã„Åà„Å∞",
              "reading": "„Å§„Åã„Åà„Å∞",
              "score": 176,
-             "seq": 10176644,
+             "seq": 25457126,
              "text": "„Å§„Åã„Åà„Å∞",
            },
            [],
          ],
          [
@@ -172,11 +172,11 @@
                },
              ],
              "kana": "„Çà„Åã„Å£„Åü",
              "reading": "„Çà„Åã„Å£„Åü",
              "score": 90,
-             "seq": 10122076,
+             "seq": 25400581,
              "text": "„Çà„Åã„Å£„Åü",
            },
            [],
          ],
          [
@@ -347,11 +347,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -406,11 +413,11 @@
                  "gloss": "to be promoted",
                  "pos": "[v5r,vi]",
                },
                {
                  "gloss": "to do ...",
-                 "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                 "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                  "pos": "[aux-v,v5r]",
                },
              ],
              "kana": "„Å™„Çã",
              "reading": "„Å™„Çã",

- Expected  - 4
+ Received  + 12

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÅÑ„Åù„Åê„Å™„Çâ„Çø„ÇØ„Ç∑„Éº„Å§„Åã„Åà„Å∞„Çà„Åã„Å£„Åü„Å£„Å¶„ÅÇ„Å®„Åß„Å™„Çã„ÄÇ" (limit: 1) [93.68ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -24,11 +24,11 @@
                },
              ],
              "kana": "„ÅÑ„ÅÑ„Åô„Åé„Åü",
              "reading": "„ÅÑ„ÅÑ„Åô„Åé„Åü",
              "score": 275,
-             "seq": 10387364,
+             "seq": 25674526,
              "text": "„ÅÑ„ÅÑ„Åô„Åé„Åü",
            },
            [],
          ],
          [
@@ -112,11 +112,11 @@
                    },
                  ],
                  "kana": "„Åã„Å™„Å£„Å¶",
                  "reading": "„Åã„Å™„Å£„Å¶",
                  "score": 90,
-                 "seq": 10475743,
+                 "seq": 25765676,
                  "text": "„Åã„Å™„Å£„Å¶",
                },
              ],
            },
            [],
@@ -149,11 +149,11 @@
                    },
                  ],
                  "kana": "„Åä„ÇÇ„Å£„Å¶",
                  "reading": "„Åä„ÇÇ„Å£„Å¶",
                  "score": 36,
-                 "seq": 10138362,
+                 "seq": 25417880,
                  "text": "„Åä„ÇÇ„Å£„Å¶",
                },
                {
                  "conj": [
                    {
@@ -203,11 +203,11 @@
                    },
                  ],
                  "kana": "„Åä„ÇÇ„Å£„Å¶",
                  "reading": "„Åä„ÇÇ„Å£„Å¶",
                  "score": 36,
-                 "seq": 10542058,
+                 "seq": 25834398,
                  "text": "„Åä„ÇÇ„Å£„Å¶",
                },
              ],
            },
            [],
@@ -312,11 +312,11 @@
                    },
                  ],
                  "kana": "„Åë„Åó",
                  "reading": "„Åë„Åó",
                  "score": 0,
-                 "seq": 10107783,
+                 "seq": 25386324,
                  "text": "„Åë„Åó",
                },
                {
                  "conj": [
                    {
@@ -338,11 +338,11 @@
                    },
                  ],
                  "kana": "„Åü„Åè",
                  "reading": "„Åü„Åè",
                  "score": 0,
-                 "seq": 10473893,
+                 "seq": 25764037,
                  "suffix": "want to... / would like to...",
                  "text": "„Åü„Åè",
                },
                {
                  "conj": [
@@ -390,11 +390,11 @@
                          "gloss": "to be promoted",
                          "pos": "[v5r,vi]",
                        },
                        {
                          "gloss": "to do ...",
-                         "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                         "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                          "pos": "[aux-v,v5r]",
                        },
                      ],
                      "prop": [
                        {
@@ -407,11 +407,11 @@
                    },
                  ],
                  "kana": "„Å™„Å£„Åü",
                  "reading": "„Å™„Å£„Åü",
                  "score": 0,
-                 "seq": 10371749,
+                 "seq": 25658501,
                  "suffix": "to become ...",
                  "text": "„Å™„Å£„Åü",
                },
              ],
              "compound": [

- Expected  - 8
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÅÑ„ÅÑ„Åô„Åé„Åü„Åã„Å™„Å£„Å¶„Åä„ÇÇ„Å£„Å¶„É°„ÉÉ„Çª„Çí„Åë„Åó„Åü„Åè„Å™„Å£„Åü„ÄÇ" (limit: 1) [151.55ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -55,11 +55,11 @@
                    },
                  ],
                  "kana": "„Åç„ÅÑ„Å¶",
                  "reading": "„Åç„ÅÑ„Å¶",
                  "score": 36,
-                 "seq": 10187232,
+                 "seq": 25468063,
                  "text": "„Åç„ÅÑ„Å¶",
                },
                {
                  "conj": [
                    {
@@ -111,11 +111,11 @@
                    },
                  ],
                  "kana": "„Åç„ÅÑ„Å¶",
                  "reading": "„Åç„ÅÑ„Å¶",
                  "score": 36,
-                 "seq": 10196625,
+                 "seq": 25478087,
                  "text": "„Åç„ÅÑ„Å¶",
                },
                {
                  "conj": [
                    {
@@ -150,11 +150,11 @@
                    },
                  ],
                  "kana": "„Åç„ÅÑ„Å¶",
                  "reading": "„Åç„ÅÑ„Å¶",
                  "score": 36,
-                 "seq": 10541634,
+                 "seq": 25834003,
                  "text": "„Åç„ÅÑ„Å¶",
                },
              ],
            },
            [],
@@ -208,11 +208,70 @@
                  "pos": "[prt]",
                },
                {
                  "gloss": "right?; isn't it?; doesn't it?; don't you?; don't you think?",
                  "info": "used as a request for confirmation or agreement; used at sentence end",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
                  "pos": "[prt]",
                },
                {
                  "gloss": "indicates „Å™-adjective",
                  "pos": "[prt]",
@@ -253,21 +312,21 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "I; me",
+                 "info": "occ. Âíå for „Çè",
                  "pos": "[pn]",
                },
                {
                  "gloss": "oneself",
+                 "info": "occ. Âíå for „Çè",
                  "pos": "[pn]",
                },
                {
                  "gloss": "you",
+                 "info": "occ. Âíå for „Çè",
                  "pos": "[pn]",
                },
              ],
              "kana": "„Çè„Çå",
              "reading": "„Çè„Çå",
@@ -300,11 +359,11 @@
            "dakedo",
            {
              "conj": [],
              "gloss": [
                {
-                 "gloss": "however",
+                 "gloss": "but; however; although",
                  "pos": "[conj]",
                },
              ],
              "kana": "„Å†„Åë„Å©",
              "reading": "„Å†„Åë„Å©",
@@ -372,11 +431,11 @@
                        },
                      ],
                      "kana": "„Åç„ÅÑ„Å¶",
                      "reading": "„Åç„ÅÑ„Å¶",
                      "score": 0,
-                     "seq": 10541634,
+                     "seq": 25834003,
                      "text": "„Åç„ÅÑ„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„ÅÑ„Çã",
@@ -449,11 +508,11 @@
                        },
                      ],
                      "kana": "„Åç„ÅÑ„Å¶",
                      "reading": "„Åç„ÅÑ„Å¶",
                      "score": 0,
-                     "seq": 10196625,
+                     "seq": 25478087,
                      "text": "„Åç„ÅÑ„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„ÅÑ„Çã",
@@ -495,11 +554,11 @@
                        },
                      ],
                      "kana": "„Åç„ÅÑ„Å¶",
                      "reading": "„Åç„ÅÑ„Å¶",
                      "score": 0,
-                     "seq": 10187232,
+                     "seq": 25468063,
                      "text": "„Åç„ÅÑ„Å¶",
                    },
                    {
                      "conj": [],
                      "kana": "„ÅÑ„Çã",

- Expected  - 7
+ Received  + 70

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Åú„Çì„Åú„Çì„Åç„ÅÑ„Å¶„Å™„ÅÑ„Å£„Å¶„ÅÑ„Çè„Çå„Åå„Å°„Å†„Åë„Å©„Åò„Å§„ÅØ„Åç„ÅÑ„Å¶„Çã„ÄÇ" (limit: 1) [97.22ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -95,11 +95,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -217,11 +224,11 @@
                    },
                  ],
                  "kana": "„Åó",
                  "reading": "„Åó",
                  "score": 0,
-                 "seq": 10150906,
+                 "seq": 25430338,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó",
                },
                {
                  "conj": [],
@@ -300,11 +307,70 @@
                },
                {
                  "gloss": "indicates „Å™-adjective",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
              ],
              "kana": "„Å™",
              "reading": "„Å™",
              "score": 6,
              "seq": 2029110,
@@ -355,11 +421,11 @@
                  "gloss": "last; final; latest; most recent",
                  "pos": "[adj-no]",
                },
                {
                  "gloss": "no sooner than; once; right after (often having negative consequences)",
-                 "info": "after -tara form or -ta form followed by "ga"",
+                 "info": "after -tara form, or -ta form followed by "ga"",
                  "pos": "[exp]",
                },
                {
                  "gloss": "one's final moments",
                  "pos": "[n]",
@@ -408,11 +474,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,

- Expected  - 2
+ Received  + 78

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÇÇ„ÅÜ„Åô„Åì„Åó„Åß„Åã„ÅÑ„Åë„Å§„Åó„Åù„ÅÜ„Å™„ÅÆ„Å´„Åï„ÅÑ„Åî„Åß„Å§„Åæ„Å•„Åè„ÄÇ" (limit: 1) [105.89ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -114,11 +114,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,

- Expected  - 0
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Êé®„ÅóÊ¥ªÈÅ†ÂæÅË≤ªÁàÜÊï£„ÅßÁµ¶ÊñôÊó•„Åæ„ÅßÁØÄÁ¥Ñ„É¢„Éº„ÉâÁ™ÅÂÖ•„ÄÇ" (limit: 1) [77.72ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -112,11 +112,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -276,11 +283,11 @@
                      "gloss": "to be promoted",
                      "pos": "[v5r,vi]",
                    },
                    {
                      "gloss": "to do ...",
-                     "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                     "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                      "pos": "[aux-v,v5r]",
                    },
                  ],
                  "prop": [
                    {
@@ -293,11 +300,11 @@
                },
              ],
              "kana": "„Å™„Å£„Åü",
              "reading": "„Å™„Å£„Åü",
              "score": 40,
-             "seq": 10371749,
+             "seq": 25658501,
              "text": "„Å™„Å£„Åü",
            },
            [],
          ],
        ],

- Expected  - 2
+ Received  + 10

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÂêåÊé•ÊøÄÂ¢ó„Éê„Ç∞ÁñëÊÉë„ÅßÈÖç‰ø°„Ç¢„Éº„Ç´„Ç§„ÉñÈùûÂÖ¨Èñã„Å´„Å™„Å£„Åü„ÄÇ" (limit: 1) [28.18ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -56,11 +56,11 @@
                },
              ],
              "kana": "„Åô„Åë",
              "reading": "„Åô„Åë",
              "score": 12,
-             "seq": 10144128,
+             "seq": 25423610,
              "text": "„Åô„Åë",
            },
            [],
          ],
        ],
@@ -203,11 +203,11 @@
                    },
                  ],
                  "kana": "„Åó„Åü",
                  "reading": "„Åó„Åü",
                  "score": 0,
-                 "seq": 10150860,
+                 "seq": 25430291,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Åü",
                },
              ],
              "compound": [

- Expected  - 2
+ Received  + 2

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "‰∫àÂÆö„Çä„Åô„ÅëDMÁßíÈÄÅ‰ø°„Åó„Åü„ÅÆ„Å´Êó¢Ë™≠„Çπ„É´„ÉºÁ∂ôÁ∂ö‰∏≠„ÄÇ" (limit: 1) [93.09ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -96,11 +96,11 @@
                },
              ],
              "kana": "„Åô„Çä„Å¨„Åë",
              "reading": "„Åô„ÇäÊäú„Åë „Äê„Åô„Çä„Å¨„Åë„Äë",
              "score": 440,
-             "seq": 10548282,
+             "seq": 25840504,
              "text": "„Åô„ÇäÊäú„Åë",
            },
            [],
          ],
          [
@@ -156,11 +156,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,

- Expected  - 1
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Ç¨„ÉÅ„É£Â§©‰∫ïÁõÆÂâç„Åô„ÇäÊäú„Åë‰∫åÈÄ£„Åß„É°„É≥„Çø„É´„Åî„ÇäÊ∏õ„Çä„ÄÇ" (limit: 1) [74.64ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -181,11 +181,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,

- Expected  - 0
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Çø„Ç§„ÉëÈáçË¶ñ„Ç∑„Éß„Éº„ÉàÂãïÁîªÁÑ°ÈôêÂë®Âõû„ÅßÂØù‰∏çË∂≥Á¢∫ÂÆö„ÄÇ" (limit: 1) [64.41ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -33,11 +33,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "field": "{comp}",
-                 "gloss": "(computer) prompt",
+                 "gloss": "prompt",
                  "pos": "[n]",
                },
              ],
              "kana": "„Éó„É≠„É≥„Éó„Éà",
              "reading": "„Éó„É≠„É≥„Éó„Éà",
@@ -271,74 +271,135 @@
            [],
          ],
          [
            "nukerarenai",
            {
-             "conj": [
+             "alternative": [
                {
-                 "gloss": [
+                 "conj": [
                    {
-                     "gloss": "to come out; to fall out; to be omitted; to be missing; to escape; to come loose",
-                     "pos": "[v1,vi]",
-                   },
-                   {
-                     "gloss": "to fade; to discolour",
-                     "pos": "[v1,vi]",
-                   },
-                   {
-                     "gloss": "to wear a hole (e.g. clothes)",
-                     "pos": "[v1,vi]",
-                   },
-                   {
-                     "gloss": "to leave (e.g. a meeting)",
-                     "pos": "[v1,vi]",
-                   },
-                   {
-                     "gloss": "to be clear; to be transparent (e.g. of the sky)",
-                     "pos": "[v1,vi]",
-                   },
-                   {
-                     "gloss": "to be absentminded; to be careless; to be inattentive; to be foolish",
-                     "info": "usu. as Êäú„Åë„Åü or Êäú„Åë„Å¶„ÅÑ„Çã",
-                     "pos": "[v1,vi]",
-                   },
-                   {
-                     "field": "{comp}",
-                     "gloss": "to exit (a program loop)",
-                     "pos": "[v1,vi]",
-                   },
-                   {
-                     "gloss": "to go through; to pass through; to give way; to collapse",
-                     "pos": "[v1,vt]",
-                   },
-                   {
-                     "field": "{hanaf}",
-                     "gloss": "to finish a round with more than 88 points (not counting points gained from scoring combinations)",
-                     "pos": "[vt,v1]",
+                     "gloss": [
+                       {
+                         "gloss": "to come out; to fall out; to be omitted; to be missing; to escape; to come loose",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to fade; to discolour",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to wear a hole (e.g. clothes)",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to leave (e.g. a meeting)",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to be clear; to be transparent (e.g. of the sky)",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to be absentminded; to be careless; to be inattentive; to be foolish",
+                         "info": "usu. as Êäú„Åë„Åü or Êäú„Åë„Å¶„ÅÑ„Çã",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "field": "{comp}",
+                         "gloss": "to exit (a program loop)",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to go through; to pass through; to give way; to collapse",
+                         "pos": "[v1,vt]",
+                       },
+                       {
+                         "field": "{hanaf}",
+                         "gloss": "to finish a round with more than 88 points (not counting points gained from scoring combinations)",
+                         "pos": "[vt,v1]",
+                       },
+                     ],
+                     "prop": [
+                       {
+                         "neg": true,
+                         "pos": "v1",
+                         "type": "Potential",
+                       },
+                     ],
+                     "reading": "Êäú„Åë„Çã „Äê„Å¨„Åë„Çã„Äë",
+                     "readok": true,
                    },
                  ],
-                 "prop": [
+                 "kana": "„Å¨„Åë„Çâ„Çå„Å™„ÅÑ",
+                 "reading": "Êäú„Åë„Çâ„Çå„Å™„ÅÑ „Äê„Å¨„Åë„Çâ„Çå„Å™„ÅÑ„Äë",
+                 "score": 1656,
+                 "seq": 25724509,
+                 "text": "Êäú„Åë„Çâ„Çå„Å™„ÅÑ",
+               },
+               {
+                 "conj": [
                    {
-                     "neg": true,
-                     "pos": "v1",
-                     "type": "Potential",
-                   },
-                   {
-                     "neg": true,
-                     "pos": "v1",
-                     "type": "Passive",
+                     "gloss": [
+                       {
+                         "gloss": "to come out; to fall out; to be omitted; to be missing; to escape; to come loose",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to fade; to discolour",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to wear a hole (e.g. clothes)",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to leave (e.g. a meeting)",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to be clear; to be transparent (e.g. of the sky)",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to be absentminded; to be careless; to be inattentive; to be foolish",
+                         "info": "usu. as Êäú„Åë„Åü or Êäú„Åë„Å¶„ÅÑ„Çã",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "field": "{comp}",
+                         "gloss": "to exit (a program loop)",
+                         "pos": "[v1,vi]",
+                       },
+                       {
+                         "gloss": "to go through; to pass through; to give way; to collapse",
+                         "pos": "[v1,vt]",
+                       },
+                       {
+                         "field": "{hanaf}",
+                         "gloss": "to finish a round with more than 88 points (not counting points gained from scoring combinations)",
+                         "pos": "[vt,v1]",
+                       },
+                     ],
+                     "prop": [
+                       {
+                         "neg": true,
+                         "pos": "v1",
+                         "type": "Passive",
+                       },
+                     ],
+                     "reading": "Êäú„Åë„Çã „Äê„Å¨„Åë„Çã„Äë",
+                     "readok": true,
                    },
                  ],
-                 "reading": "Êäú„Åë„Çã „Äê„Å¨„Åë„Çã„Äë",
-                 "readok": true,
+                 "kana": "„Å¨„Åë„Çâ„Çå„Å™„ÅÑ",
+                 "reading": "Êäú„Åë„Çâ„Çå„Å™„ÅÑ „Äê„Å¨„Åë„Çâ„Çå„Å™„ÅÑ„Äë",
+                 "score": 1656,
+                 "seq": 25724602,
+                 "text": "Êäú„Åë„Çâ„Çå„Å™„ÅÑ",
                },
              ],
-             "kana": "„Å¨„Åë„Çâ„Çå„Å™„ÅÑ",
-             "reading": "Êäú„Åë„Çâ„Çå„Å™„ÅÑ „Äê„Å¨„Åë„Çâ„Çå„Å™„ÅÑ„Äë",
-             "score": 1656,
-             "seq": 10436181,
-             "text": "Êäú„Åë„Çâ„Çå„Å™„ÅÑ",
            },
            [],
          ],
        ],
        2774,

- Expected  - 56
+ Received  + 116

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÁîüÊàêAI„Éó„É≠„É≥„Éó„ÉàÁõõ„Çä„Åô„ÅéÂú∞ÁçÑ„Åã„ÇâÊäú„Åë„Çâ„Çå„Å™„ÅÑ„ÄÇ" (limit: 1) [188.22ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -51,11 +51,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -63,20 +63,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -334,11 +336,11 @@
                    },
                  ],
                  "kana": "„Åó„Å¶",
                  "reading": "„Åó„Å¶",
                  "score": 0,
-                 "seq": 10150864,
+                 "seq": 25430295,
                  "text": "„Åó„Å¶",
                },
                {
                  "conj": [
                    {
@@ -350,13 +352,18 @@
                        {
                          "gloss": "to stay",
                          "pos": "[v1,vi]",
                        },
                        {
-                         "gloss": "to be ...-ing; to have been ...-ing",
-                         "info": "after the -te form of a verb; indicates continuing action or state",
-                         "pos": "[v1,aux-v]",
+                         "gloss": "to be ...-ing",
+                         "info": "after the -te form of a verb; indicates continuing action",
+                         "pos": "[aux-v,v1]",
+                       },
+                       {
+                         "gloss": "to have ...-ed; to be ...-ed",
+                         "info": "after the -te form of a verb; indicates continuing state",
+                         "pos": "[aux-v,v1]",
                        },
                      ],
                      "prop": [
                        {
                          "pos": "v1",
@@ -368,11 +375,11 @@
                    },
                  ],
                  "kana": "„ÅÑ„Å¶",
                  "reading": "„ÅÑ„Å¶",
                  "score": 0,
-                 "seq": 10547541,
+                 "seq": 25839478,
                  "suffix": "indicates continuing action (to be ...ing)",
                  "text": "„ÅÑ„Å¶",
                },
              ],
              "compound": [
@@ -400,12 +407,12 @@
                      "gloss": "to smile",
                      "pos": "[v5u,vi]",
                    },
                    {
                      "gloss": "to sneer; to ridicule",
-                     "info": "occ. written as Âó§„ÅÜ",
-                     "pos": "[v5u,vt,vi]",
+                     "info": "esp. Âó§„ÅÜ",
+                     "pos": "[v5u,vt]",
                    },
                    {
                      "gloss": "to be dumbfounded; to be flabbergasted",
                      "info": "as Á¨ë„Å£„Å¶„Åó„Åæ„ÅÜ or Á¨ë„Å£„Å°„ÇÉ„ÅÜ",
                      "pos": "[v5u,vi]",
@@ -422,11 +429,11 @@
                },
              ],
              "kana": "„Çè„Çâ„Å£„Åü",
              "reading": "Á¨ë„Å£„Åü „Äê„Çè„Çâ„Å£„Åü„Äë",
              "score": 112,
-             "seq": 10162680,
+             "seq": 25443020,
              "text": "Á¨ë„Å£„Åü",
            },
            [],
          ],
        ],

- Expected  - 13
+ Received  + 20

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Ç®„Ç¥„ÇµÁµêÊûú„ÅÆÂàá„ÇäÊäú„Åç„Åå‰∫åÊ¨°„Éê„Ç∫„Åó„Å¶„Å¶Á¨ë„Å£„Åü„ÄÇ" (limit: 1) [116.12ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -8,11 +8,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -20,20 +20,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -323,11 +325,11 @@
                    },
                  ],
                  "kana": "„Åó",
                  "reading": "„Åó",
                  "score": 0,
-                 "seq": 10150906,
+                 "seq": 25430338,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó",
                },
              ],
              "compound": [
@@ -381,11 +383,11 @@
                },
              ],
              "gloss": [
                {
                  "gloss": "quite capable of ...; not unlikely to ...; may well ...; might ...; could ...; would not hesitate to ...",
-                 "info": "after the -masu stem of verb",
+                 "info": "after the -masu stem of a verb",
                  "pos": "[exp,suf]",
                },
              ],
              "kana": "„Åã„Å≠„Å™„ÅÑ",
              "reading": "„Åã„Å≠„Å™„ÅÑ",

- Expected  - 7
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "X„ÅÆÂºïÁî®„É™„Éù„Çπ„ÉàÂêàÊà¶„ÄÅÁÅ´Âäõ‰Ωé„ÇÅ„Åß„ÇÇÁÇé‰∏ä„Åó„Åã„Å≠„Å™„ÅÑ„ÄÇ" (limit: 1) [125.31ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -76,11 +76,11 @@
                },
              ],
              "kana": "„Çè„Åô„Çå",
              "reading": "Âøò„Çå „Äê„Çè„Åô„Çå„Äë",
              "score": 72,
-             "seq": 10524515,
+             "seq": 25816388,
              "text": "Âøò„Çå",
            },
            [],
          ],
          [
@@ -171,11 +171,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -206,11 +213,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -218,20 +225,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 6
+ Received  + 16

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Çµ„Éñ„Çπ„ÇØËß£Á¥ÑÂøò„ÇåÂÆöÊúüÁàÜËµ∞„ÅßÂè£Â∫ß„ÅÆHP„Çº„É≠„ÄÇ" (limit: 1) [28.67ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -155,11 +155,11 @@
                      "pos": "[v5r,vt]",
                    },
                    {
                      "field": "{go}",
                      "gloss": "to cut (the connection between two groups)",
+                     "info": "sometimes „Ç≠„Çã",
                      "pos": "[v5r,vt]",
                    },
                    {
                      "gloss": "to start a fire (with wood-wood friction or by striking a metal against stone)",
                      "info": "also written as ÈëΩ„Çã",
@@ -193,56 +193,15 @@
                  ],
                  "reading": "Âàá„Çã „Äê„Åç„Çã„Äë",
                  "readok": true,
                },
              ],
-             "gloss": [
-               {
-                 "gloss": "end; finish; place to stop",
-                 "pos": "[n]",
-               },
-               {
-                 "gloss": "bound; limit; end",
-                 "pos": "[n]",
-               },
-               {
-                 "gloss": "finale (of a noh song); end of an act (in j≈çruri or kabuki); final performance of the day (in vaudeville)",
-                 "pos": "[n]",
-               },
-               {
-                 "gloss": "trump card",
-                 "pos": "[n]",
-               },
-               {
-                 "field": "{cards}",
-                 "gloss": "king (court card; in mekuri karuta and unsun karuta)",
-                 "pos": "[n]",
-               },
-               {
-                 "gloss": "counter for slices (esp. thick slices); counter for cuts (of fish, meat, etc.)",
-                 "pos": "[ctr]",
-               },
-               {
-                 "gloss": "only; just",
-                 "info": "sometimes pronounced „Åé„Çä",
-                 "pos": "[prt]",
-               },
-               {
-                 "gloss": "(ever) since; after",
-                 "info": "usu. in a negative sentence; sometimes pronounced „Åé„Çä",
-                 "pos": "[prt]",
-               },
-               {
-                 "gloss": "continuously; remaining (in a particular state)",
-                 "info": "sometimes pronounced „Åé„Çä",
-                 "pos": "[prt]",
-               },
-             ],
              "kana": "„Åç„Çä",
              "reading": "Âàá„Çä „Äê„Åç„Çä„Äë",
-             "score": 56,
-             "seq": 1383800,
+             "score": 112,
+             "seq": 25863510,
              "text": "Âàá„Çä",
            },
            [],
          ],
          [
@@ -283,11 +242,11 @@
                },
              ],
              "kana": "„Çè„Åô„Çå",
              "reading": "Âøò„Çå „Äê„Çè„Åô„Çå„Äë",
              "score": 72,
-             "seq": 10524515,
+             "seq": 25816388,
              "text": "Âøò„Çå",
            },
            [],
          ],
          [
@@ -325,11 +284,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
@@ -430,10 +396,10 @@
              "text": "„Éê„ÉÅ„Éê„ÉÅ",
            },
            [],
          ],
        ],
-       1598,
+       1654,
      ],
    ],
    ". ",
  ]

- Expected  - 46
+ Received  + 13

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "‰ΩéÈÅÖÂª∂„É¢„Éº„ÉâÂàá„ÇäÂøò„Çå„Åß„Ç≥„É°Ê¨Ñ„Å®ÊôÇÂ∑Æ„Éê„ÉÅ„Éê„ÉÅ„ÄÇ" (limit: 1) [46.77ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -54,11 +54,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -66,20 +66,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -174,11 +176,16 @@
                {
                  "gloss": "continuously; remaining (in a particular state)",
                  "info": "sometimes pronounced „Åé„Çä",
                  "pos": "[prt]",
                },
+               {
+                 "field": "{go}",
+                 "gloss": "cut",
+                 "info": "usu. „Ç≠„É™",
+                 "pos": "[n]",
+               },
              ],
              "kana": "„Åç„Çä",
              "reading": "Èôê „Äê„Åç„Çä„Äë",
              "score": 5,
              "seq": 1383800,
@@ -257,11 +264,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
@@ -389,11 +403,11 @@
                },
              ],
              "kana": "„Åç„Åà„Åü",
              "reading": "Ê∂à„Åà„Åü „Äê„Åç„Åà„Åü„Äë",
              "score": 336,
-             "seq": 10057202,
+             "seq": 25334349,
              "text": "Ê∂à„Åà„Åü",
            },
            [],
          ],
        ],

- Expected  - 6
+ Received  + 22

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Êé®„Åó„ÅÆ„É°„É≥Èôê„Ç¢„Éº„Ç´„Ç§„Éñ‰æõÁµ¶ÈÅéÂ§ö„Åß‰ºëÊó•„ÅåÊ∂à„Åà„Åü„ÄÇ" (limit: 1) [35.40ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -335,11 +335,11 @@
                    },
                  ],
                  "kana": "„Åó„Å¶",
                  "reading": "„Åó„Å¶",
                  "score": 0,
-                 "seq": 10150864,
+                 "seq": 25430295,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Å¶",
                },
              ],
              "compound": [
@@ -375,11 +375,11 @@
                },
              ],
              "kana": "„Éê„Ç∫„Çä",
              "reading": "„Éê„Ç∫„Çä",
              "score": 96,
-             "seq": 10288583,
+             "seq": 25573007,
              "text": "„Éê„Ç∫„Çä",
            },
            [],
          ],
          [
@@ -395,11 +395,14 @@
                  "gloss": "(court) case",
                  "pos": "[n]",
                },
                {
                  "gloss": "project; enterprise",
+                 "pos": "[n]",
+               },
+               {
+                 "gloss": "advertisement; sponsorship spot; promotional",
                  "pos": "[n]",
                },
              ],
              "kana": "„ÅÇ„Çì„Åë„Çì",
              "reading": "Ê°à‰ª∂ „Äê„ÅÇ„Çì„Åë„Çì„Äë",

- Expected  - 2
+ Received  + 6

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÁΩÆ„ÅçÈÖç„Éú„ÉÉ„ÇØ„Çπ„ÇíÁå´„ÅåËá™ÂãïÈñãÂ∞Å„Åó„Å¶„Éê„Ç∫„ÇäÊ°à‰ª∂Âåñ„ÄÇ" (limit: 1) [57.91ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -70,11 +70,11 @@
                    },
                  ],
                  "kana": "„Å§„Åë„Å™„ÅÑ",
                  "reading": "„Å§„Åë„Å™„ÅÑ",
                  "score": 176,
-                 "seq": 10016426,
+                 "seq": 25291978,
                  "text": "„Å§„Åë„Å™„ÅÑ",
                },
                {
                  "conj": [
                    {
@@ -250,11 +250,11 @@
                    },
                  ],
                  "kana": "„Å§„Åë„Å™„ÅÑ",
                  "reading": "„Å§„Åë„Å™„ÅÑ",
                  "score": 176,
-                 "seq": 10101333,
+                 "seq": 25380006,
                  "text": "„Å§„Åë„Å™„ÅÑ",
                },
                {
                  "conj": [
                    {
@@ -292,11 +292,11 @@
                    },
                  ],
                  "kana": "„Å§„Åë„Å™„ÅÑ",
                  "reading": "„Å§„Åë„Å™„ÅÑ",
                  "score": 176,
-                 "seq": 10155892,
+                 "seq": 25435862,
                  "text": "„Å§„Åë„Å™„ÅÑ",
                },
                {
                  "conj": [
                    {
@@ -339,11 +339,11 @@
                    },
                  ],
                  "kana": "„Å§„Åë„Å™„ÅÑ",
                  "reading": "„Å§„Åë„Å™„ÅÑ",
                  "score": 176,
-                 "seq": 10547941,
+                 "seq": 25840278,
                  "text": "„Å§„Åë„Å™„ÅÑ",
                },
                {
                  "conj": [
                    {
@@ -373,11 +373,11 @@
                    },
                  ],
                  "kana": "„Å§„Åë„Å™„ÅÑ",
                  "reading": "„Å§„Åë„Å™„ÅÑ",
                  "score": 176,
-                 "seq": 10629123,
+                 "seq": 25924427,
                  "text": "„Å§„Åë„Å™„ÅÑ",
                },
                {
                  "conj": [
                    {
@@ -436,11 +436,11 @@
                    },
                  ],
                  "kana": "„Å§„Åë„Å™„ÅÑ",
                  "reading": "„Å§„Åë„Å™„ÅÑ",
                  "score": 176,
-                 "seq": 10632071,
+                 "seq": 25927233,
                  "text": "„Å§„Åë„Å™„ÅÑ",
                },
              ],
            },
            [],
@@ -547,11 +547,11 @@
                },
              ],
              "kana": "„Åä„Åº„Åà„Åü„Çâ",
              "reading": "Ë¶ö„Åà„Åü„Çâ „Äê„Åä„Åº„Åà„Åü„Çâ„Äë",
              "score": 840,
-             "seq": 10662147,
+             "seq": 25959028,
              "text": "Ë¶ö„Åà„Åü„Çâ",
            },
            [],
          ],
          [

- Expected  - 7
+ Received  + 7

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Êó¢Ë™≠„Å§„Åë„Å™„ÅÑË°ì„ÇíË¶ö„Åà„Åü„ÇâËøî‰ø°„Çø„Ç§„Éü„É≥„Ç∞Ëø∑Â≠ê„ÄÇ" (limit: 1) [165.31ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -24,11 +24,11 @@
              "text": "ÂíÄÂöº",
            },
            [],
          ],
          [
-           "oto/on/ne",
+           "oto/ne/on",
            {
              "alternative": [
                {
                  "conj": [],
                  "gloss": [

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ASMRÂíÄÂöºÈü≥„Å§„Çà„Å§„ÇàÈÖç‰ø°„ÄÅ„Ç§„É§„Éõ„É≥Ê¥æ„ÅØÊ≥®ÊÑè„ÄÇ" (limit: 1) [30.02ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -97,11 +97,11 @@
              "text": "„Éï„Ç£„É´„É†",
            },
            [],
          ],
          [
-           "f≈´/kaze",
+           "kaze/f≈´",
            {
              "alternative": [
                {
                  "conj": [],
                  "gloss": [

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÂÜôÁúü„Éó„É™„Çª„ÉÉ„ÉàÊ≤º„ÄÅ„Éï„Ç£„É´„É†È¢®„É¨„Ç∑„ÉîÁÑ°ÈôêÊõ¥Êñ∞‰∏≠„ÄÇ" (limit: 1) [67.99ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -79,11 +79,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -91,20 +91,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -181,11 +183,11 @@
                },
              ],
              "kana": "„Ç∫„É¨",
              "reading": "„Ç∫„É¨",
              "score": 24,
-             "seq": 10581565,
+             "seq": 25875118,
              "text": "„Ç∫„É¨",
            },
            [],
          ],
          [

- Expected  - 6
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„É™„Éº„É´Á∑®ÈõÜÊôÇ„ÅÆ„ÉÜ„É≠„ÉÉ„Éó‰ΩçÁΩÆ„Ç∫„É¨„ÅåËá¥ÂëΩÁöÑ„Å´Ê∞ó„Å´„Å™„Çã„ÄÇ" (limit: 1) [30.75ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -154,11 +154,11 @@
                    },
                  ],
                  "kana": "„Åô„Åé„Å¶",
                  "reading": "„Åô„Åé„Å¶",
                  "score": 0,
-                 "seq": 10639364,
+                 "seq": 25935047,
                  "suffix": "to be too (much) ...",
                  "text": "„Åô„Åé„Å¶",
                },
              ],
              "compound": [

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "‰∫àÂÆö„Ç¨„ÉÅ„É£ÈÅãÊÇ™„Åô„Åé„Å¶‰ºöË≠∞„ÅåÂÖ®ÈÉ®ÂêåÊôÇÈñìÂ∏Ø„Å´Âà∫„Åï„Çã„ÄÇ" (limit: 1) [68.64ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -128,11 +128,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -335,11 +342,11 @@
                },
              ],
              "kana": "„Åä„Å°„Åü",
              "reading": "ËêΩ„Å°„Åü „Äê„Åä„Å°„Åü„Äë",
              "score": 336,
-             "seq": 10478864,
+             "seq": 25768752,
              "text": "ËêΩ„Å°„Åü",
            },
            [],
          ],
        ],

- Expected  - 1
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Á´ØÊú´ÁÜ±„ÄÖ„Éê„ÉÉ„ÉÜ„É™„ÉºÊÄ•Èôç‰∏ã„Åß„É¢„Éê„Ç§„É´ÂõûÁ∑ö„Åæ„ÅßËêΩ„Å°„Åü„ÄÇ" (limit: 1) [39.40ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -7,19 +7,19 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "official; formal",
-                 "pos": "[adj-no,n]",
+                 "pos": "[adj-no,n,n-suf]",
                },
                {
                  "gloss": "formula (e.g. mathematical)",
                  "pos": "[n]",
                },
                {
                  "gloss": "official (social media) account (of a company, organization, etc.)",
-                 "pos": "[n]",
+                 "pos": "[n-suf,n]",
                },
              ],
              "kana": "„Åì„ÅÜ„Åó„Åç",
              "reading": "ÂÖ¨Âºè „Äê„Åì„ÅÜ„Åó„Åç„Äë",
              "score": 312,
@@ -33,11 +33,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -45,20 +45,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -116,11 +118,11 @@
                },
              ],
              "kana": "„Å´„Åä„Çè„Åõ",
              "reading": "ÂåÇ„Çè„Åõ „Äê„Å´„Åä„Çè„Åõ„Äë",
              "score": 120,
-             "seq": 10085297,
+             "seq": 25363166,
              "text": "ÂåÇ„Çè„Åõ",
            },
            [],
          ],
          [
@@ -242,11 +244,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 16,

- Expected  - 8
+ Received  + 18

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÂÖ¨Âºè„ÅÆÂåÇ„Çè„ÅõÂ∞èÂá∫„ÅóÂëäÁü•„ÄÅËß£Èáà‰∏ÄËá¥„ÅßTL„ÅåÂπ≥Âíå„ÄÇ" (limit: 1) [68.77ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -73,11 +73,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -85,20 +85,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -166,11 +168,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
@@ -405,11 +414,11 @@
                  "gloss": "to be promoted",
                  "pos": "[v5r,vi]",
                },
                {
                  "gloss": "to do ...",
-                 "info": "as „Åä + masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
+                 "info": "as „Åä + -masu stem + „Å´„Å™„Çã, or „Åî + noun + „Å´„Å™„Çã",
                  "pos": "[aux-v,v5r]",
                },
              ],
              "kana": "„Å™„Çã",
              "reading": "„Å™„Çã",

- Expected  - 6
+ Received  + 16

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "‰ΩéÊµÆ‰∏äÂÆ£Ë®Ä„Éù„Çπ„Éà„ÅÆÈÄ£Êäï„Åß‰ΩéÊµÆ‰∏ä„Å®„ÅØÔºü„Å£„Å¶„Å™„Çã„ÄÇ" (limit: 1) [80.37ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -30,11 +30,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -42,20 +42,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -144,11 +146,11 @@
                },
              ],
              "kana": "„Åø„Åä„Å®„Åó„Å¶",
              "reading": "Ë¶ãËêΩ„Å®„Åó„Å¶ „Äê„Åø„Åä„Å®„Åó„Å¶„Äë",
              "score": 1495,
-             "seq": 10311948,
+             "seq": 25596605,
              "text": "Ë¶ãËêΩ„Å®„Åó„Å¶",
            },
            [],
          ],
          [
@@ -156,11 +158,14 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "neighborhood; neighbourhood; vicinity",
+                 "pos": "[n,n-suf]",
+               },
+               {
+                 "gloss": "community (of people with a shared trait, members, fans, etc.); scene; enthusiasts",
                  "pos": "[n-suf,n]",
                },
              ],
              "kana": "„Åã„ÅÑ„Çè„ÅÑ",
              "reading": "ÁïåÈöà „Äê„Åã„ÅÑ„Çè„ÅÑ„Äë",
@@ -242,11 +247,11 @@
                },
              ],
              "kana": "„Åµ„Åø",
              "reading": "Ë∏è„Åø „Äê„Åµ„Åø„Äë",
              "score": 112,
-             "seq": 10433500,
+             "seq": 25721667,
              "text": "Ë∏è„Åø",
            },
            [],
          ],
          [
@@ -371,11 +376,11 @@
                },
              ],
              "kana": "„Åã„Åë„Åü",
              "reading": "„Åã„Åë„Åü",
              "score": 90,
-             "seq": 10661628,
+             "seq": 25958178,
              "text": "„Åã„Åë„Åü",
            },
            [],
          ],
        ],

- Expected  - 8
+ Received  + 14

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Éó„É≠„Éï„ÅÆÂú∞Èõ∑„Çø„Ç∞Ë¶ãËêΩ„Å®„Åó„Å¶ÁïåÈöàÂú∞Èõ∑Ë∏è„Åø„Åã„Åë„Åü„ÄÇ" (limit: 1) [134.68ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -65,11 +67,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "reminding; reminder",
-                 "pos": "[vs,n]",
+                 "pos": "[vt,vs,n]",
                },
              ],
              "kana": "„É™„Éû„Ç§„É≥„Éâ",
              "reading": "„É™„Éû„Ç§„É≥„Éâ",
              "score": 660,
@@ -158,11 +160,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
@@ -358,11 +367,11 @@
                    },
                  ],
                  "kana": "„Åó",
                  "reading": "„Åó",
                  "score": 0,
-                 "seq": 10150906,
+                 "seq": 25430338,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó",
                },
                {
                  "conj": [],

- Expected  - 7
+ Received  + 17

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "‰∫àÂÆö„ÅÆ„É™„Éû„Ç§„É≥„ÉâÂ§öÈáçÁô∫ÁÅ´„ÅßÈÄÜ„Å´ÁÑ°Ë¶ñ„Åó„Åå„Å°„ÄÇ" (limit: 1) [102.83ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -120,11 +120,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -132,20 +132,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -178,11 +180,11 @@
            {
              "conj": [
                {
                  "gloss": [
                    {
-                     "gloss": "to choose; to select",
+                     "gloss": "to choose; to select; to pick (out)",
                      "pos": "[vt,v5b]",
                    },
                  ],
                  "prop": [
                    {
@@ -195,11 +197,11 @@
                },
              ],
              "kana": "„Åà„Çâ„Å≥",
              "reading": "ÈÅ∏„Å≥ „Äê„Åà„Çâ„Å≥„Äë",
              "score": 112,
-             "seq": 10206774,
+             "seq": 25488470,
              "text": "ÈÅ∏„Å≥",
            },
            [],
          ],
          [
@@ -238,11 +240,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -272,11 +281,11 @@
                },
              ],
              "kana": "„Çà„Åå„ÅÇ„Åë„Åü",
              "reading": "Â§ú„ÅåÊòé„Åë„Åü „Äê„Çà„Åå„ÅÇ„Åë„Åü„Äë",
              "score": 845,
-             "seq": 10285943,
+             "seq": 25570169,
              "text": "Â§ú„ÅåÊòé„Åë„Åü",
            },
            [],
          ],
        ],

- Expected  - 8
+ Received  + 18

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Â∏ÉÊïôÁî®„Åæ„Å®„ÇÅÁîªÂÉè„ÅÆ„Éï„Ç©„É≥„ÉàÈÅ∏„Å≥„ÅßÂ§ú„ÅåÊòé„Åë„Åü„ÄÇ" (limit: 1) [46.88ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -83,11 +83,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -133,11 +140,11 @@
                },
              ],
              "kana": "„Åã„Å£„Åü",
              "reading": "Ë≤∑„Å£„Åü „Äê„Åã„Å£„Åü„Äë",
              "score": 112,
-             "seq": 10266552,
+             "seq": 25550076,
              "text": "Ë≤∑„Å£„Åü",
            },
            [],
          ],
          [

- Expected  - 1
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÉØ„É≥„ÉÅ„É£„É≥ÈÄÜÂºµ„Çä„ÅßË≤∑„Å£„Åü„Ç≥„Ç§„É≥„Åå„Åó„Å™„Åó„Å™‰∏ãËêΩ„ÄÇ" (limit: 1) [134.58ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -60,11 +60,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -72,20 +72,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -336,11 +338,11 @@
                    },
                  ],
                  "kana": "„Åó„Å¶",
                  "reading": "„Åó„Å¶",
                  "score": 0,
-                 "seq": 10150864,
+                 "seq": 25430295,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Å¶",
                },
                {
                  "conj": [],

- Expected  - 6
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Êó¢Ë¶ñÊÑüÂº∑„ÇÅ„ÅÆÂ∫ÉÂëä„Ç≥„Éî„Éº„ÄÅ„Åß„ÇÇ„Å™„Åú„Åã„Çø„ÉÉ„Éó„Åó„Å¶„Åó„Åæ„ÅÜ„ÄÇ" (limit: 1) [80.51ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -132,11 +132,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -144,20 +144,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -243,11 +245,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,

- Expected  - 5
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Ç®„Éä„Éâ„É™‰∫åÈÄ£„Ç≠„É°„Åã„Çâ„ÅÆÂøÉÊãçÊï∞ÈÄöÁü•„ÅßÂèçÁúÅ‰ºö„ÄÇ" (limit: 1) [44.77ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -130,11 +130,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -197,11 +204,11 @@
                },
              ],
              "kana": "„Åª„Çä„Åã„Åà„Åï„Çå„Å¶",
              "reading": "Êéò„ÇäËøî„Åï„Çå„Å¶ „Äê„Åª„Çä„Åã„Åà„Åï„Çå„Å¶„Äë",
              "score": 1309,
-             "seq": 11198040,
+             "seq": 26538175,
              "text": "Êéò„ÇäËøî„Åï„Çå„Å¶",
            },
            [],
          ],
          [

- Expected  - 1
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„É´„ÉÉ„ÇØ„Éê„ÉÉ„ÇØÊ©üËÉΩ„ÅßÈªíÊ≠¥Âè≤Êéò„ÇäËøî„Åï„Çå„Å¶„Åó„Çì„Å©„ÅÑ„ÄÇ" (limit: 1) [159.31ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -52,11 +52,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -64,20 +64,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -197,11 +199,11 @@
                    },
                  ],
                  "kana": "„Åç„Çä„Å†„Åó",
                  "reading": "Âàá„ÇäÂá∫„Åó „Äê„Åç„Çä„Å†„Åó„Äë",
                  "score": 1035,
-                 "seq": 10307758,
+                 "seq": 25592435,
                  "text": "Âàá„ÇäÂá∫„Åó",
                },
              ],
            },
            [],

- Expected  - 6
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„ÇØ„É™„Ç®„Ç§„Çø„Éº„ÉÑ„Éº„É´„ÅÆ„Çµ„É†„ÉçËá™ÂãïÂàá„ÇäÂá∫„ÅóÁ≤æÂ∫¶„Åà„Åê„ÅÑ„ÄÇ" (limit: 1) [64.99ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -42,11 +42,11 @@
              "text": "„Çº„É≠",
            },
            [],
          ],
          [
-           "f≈´/kaze",
+           "kaze/f≈´",
            {
              "alternative": [
                {
                  "conj": [],
                  "gloss": [
@@ -117,11 +117,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -129,20 +129,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -416,11 +418,11 @@
                    },
                  ],
                  "kana": "„Åó",
                  "reading": "„Åó",
                  "score": 0,
-                 "seq": 10150906,
+                 "seq": 25430338,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó",
                },
              ],
              "compound": [

- Expected  - 7
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÁîüÊ¥ªÊÑü„Çº„É≠È¢®Vlog„ÅÆÂ∞èÁâ©ÈÖçÁΩÆ„ÄÅËÄÉË®ºÁè≠„Åå‰ªï‰∫ã„Åó„Åô„Åé„ÄÇ" (limit: 1) [52.86ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -82,11 +82,11 @@
                },
              ],
              "kana": "„Åã„Å∂„Çä",
              "reading": "Ë¢´„Çä „Äê„Åã„Å∂„Çä„Äë",
              "score": 72,
-             "seq": 10560440,
+             "seq": 25853305,
              "text": "Ë¢´„Çä",
            },
            [],
          ],
          [
@@ -126,11 +126,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -138,20 +138,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 6
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "‰∫àÂÆöË¢´„ÇäÂú∞ÁçÑ„ÅÆ„É™„Çπ„Ç±„Çπ„Éó„É¨„ÉÉ„Éâ„Ç∑„Éº„Éà„ÅåÂ¥©Â£äÂØ∏Ââç„ÄÇ" (limit: 1) [72.91ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -50,16 +50,16 @@
            "renkei",
            {
              "conj": [],
              "gloss": [
                {
-                 "gloss": "cooperation; coordination; link",
+                 "gloss": "cooperation; coordination; collaboration; alignment",
                  "pos": "[n,vs,vi]",
                },
                {
                  "field": "{comp}",
-                 "gloss": "integration",
+                 "gloss": "integration; linking",
                  "pos": "[vi,vs,n]",
                },
              ],
              "kana": "„Çå„Çì„Åë„ÅÑ",
              "reading": "ÈÄ£Êê∫ „Äê„Çå„Çì„Åë„ÅÑ„Äë",
@@ -130,11 +130,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
@@ -239,51 +246,86 @@
            [],
          ],
          [
            "kirerareta",
            {
-             "conj": [
+             "alternative": [
                {
-                 "prop": [
-                   {
-                     "pos": "v1",
-                     "type": "Past (~ta)",
-                   },
-                 ],
-                 "readok": true,
-                 "via": [
+                 "conj": [
                    {
-                     "gloss": [
+                     "prop": [
                        {
-                         "gloss": "to get angry; to snap; to blow one's top; to lose one's temper; to flip",
-                         "pos": "[vi,v1]",
+                         "pos": "v1",
+                         "type": "Past (~ta)",
                        },
                      ],
-                     "prop": [
+                     "readok": true,
+                     "via": [
                        {
-                         "pos": "v1",
-                         "type": "Potential",
+                         "gloss": [
+                           {
+                             "gloss": "to get angry; to snap; to blow one's top; to lose one's temper; to flip",
+                             "pos": "[vi,v1]",
+                           },
+                         ],
+                         "prop": [
+                           {
+                             "pos": "v1",
+                             "type": "Potential",
+                           },
+                         ],
+                         "reading": "„Ç≠„É¨„Çã",
+                         "readok": true,
                        },
+                     ],
+                   },
+                 ],
+                 "kana": "„Ç≠„É¨„Çâ„Çå„Åü",
+                 "reading": "„Ç≠„É¨„Çâ„Çå„Åü",
+                 "score": 660,
+                 "seq": 27040594,
+                 "text": "„Ç≠„É¨„Çâ„Çå„Åü",
+               },
+               {
+                 "conj": [
+                   {
+                     "prop": [
                        {
                          "pos": "v1",
-                         "type": "Passive",
+                         "type": "Past (~ta)",
                        },
                      ],
-                     "reading": "„Ç≠„É¨„Çã",
                      "readok": true,
+                     "via": [
+                       {
+                         "gloss": [
+                           {
+                             "gloss": "to get angry; to snap; to blow one's top; to lose one's temper; to flip",
+                             "pos": "[vi,v1]",
+                           },
+                         ],
+                         "prop": [
+                           {
+                             "pos": "v1",
+                             "type": "Passive",
+                           },
+                         ],
+                         "reading": "„Ç≠„É¨„Çã",
+                         "readok": true,
+                       },
+                     ],
                    },
                  ],
+                 "kana": "„Ç≠„É¨„Çâ„Çå„Åü",
+                 "reading": "„Ç≠„É¨„Çâ„Çå„Åü",
+                 "score": 660,
+                 "seq": 27040623,
+                 "text": "„Ç≠„É¨„Çâ„Çå„Åü",
                },
              ],
-             "kana": "„Ç≠„É¨„Çâ„Çå„Åü",
-             "reading": "„Ç≠„É¨„Çâ„Çå„Åü",
-             "score": 660,
-             "seq": 11662773,
-             "text": "„Ç≠„É¨„Çâ„Çå„Åü",
            },
            [],
          ],
        ],
        2791,

- Expected  - 24
+ Received  + 68

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Çπ„Éû„Éº„ÉàÂÆ∂ÈõªÈÄ£Êê∫„Åê„Å†„Åê„Å†„ÅßÈü≥Â£∞„Ç¢„Ç∑„Çπ„Éà„Å´„Ç≠„É¨„Çâ„Çå„Åü„ÄÇ" (limit: 1) [101.84ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -214,11 +214,11 @@
                    },
                  ],
                  "kana": "„Åô„Åé„Å¶",
                  "reading": "„Åô„Åé„Å¶",
                  "score": 0,
-                 "seq": 10639364,
+                 "seq": 25935047,
                  "suffix": "to be too (much) ...",
                  "text": "„Åô„Åé„Å¶",
                },
              ],
              "compound": [

- Expected  - 1
+ Received  + 1

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Çø„Ç§„Éà„É´Ë©êÊ¨∫Ê∞óÂë≥„Ç∑„Éß„Éº„Éà„ÄÅ„Ç™„ÉÅÂº±„Åô„Åé„Å¶‰ΩéË©ï‰æ°„É©„ÉÉ„Ç∑„É•„ÄÇ" (limit: 1) [38.39ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -41,11 +41,11 @@
                },
              ],
              "kana": "„Åä„ÅÑ",
              "reading": "ËøΩ„ÅÑ „Äê„Åä„ÅÑ„Äë",
              "score": 112,
-             "seq": 10339469,
+             "seq": 25625504,
              "text": "ËøΩ„ÅÑ",
            },
            [],
          ],
          [
@@ -152,11 +152,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -187,11 +194,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -199,20 +206,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -315,11 +324,11 @@
                },
              ],
              "kana": "„Åã„Çå„Åü",
              "reading": "ÊûØ„Çå„Åü „Äê„Åã„Çå„Åü„Äë",
              "score": 336,
-             "seq": 10098060,
+             "seq": 25376200,
              "text": "ÊûØ„Çå„Åü",
            },
            [],
          ],
        ],

- Expected  - 7
+ Received  + 17

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ËøΩ„ÅÑ„Çπ„Éë„ÉÅ„É£ÂêàÊà¶„ÅßË≤°Â∏É„ÅÆMP„ÅåÊûØ„Çå„Åü„ÄÇ" (limit: 1) [62.90ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -6,11 +6,11 @@
            "hasshutagu",
            {
              "conj": [],
              "gloss": [
                {
-                 "field": "{comp}",
+                 "field": "{internet}",
                  "gloss": "hashtag (e.g. on Twitter)",
                  "pos": "[n]",
                },
              ],
              "kana": "„Éè„ÉÉ„Ç∑„É•„Çø„Ç∞",
@@ -188,11 +188,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,

- Expected  - 1
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Éè„ÉÉ„Ç∑„É•„Çø„Ç∞Â§ßÂñúÂà©„ÄÅÂàùÊâã„Åã„ÇâËß£Èáà‰∏ç‰∏ÄËá¥„ÅßËçí„Çå„Åü„ÄÇ" (limit: 1) [42.16ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -125,41 +127,170 @@
              "text": "ÊñáËÑà",
            },
            [],
          ],
          [
-           "moyashigachi",
+           "ÁáÉ",
+           {
+             "kana": "ÁáÉ",
+             "reading": "ÁáÉ",
+             "score": 0,
+             "text": "ÁáÉ",
+           },
+           [],
+         ],
+         [
+           "ya",
+           {
+             "conj": [],
+             "gloss": [
+               {
+                 "gloss": "such things as ...; and ... and",
+                 "info": "used for non-exhaustive lists related to a specific time and place",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "the minute (that) ...; no sooner than ...; as soon as",
+                 "info": "after the dictionary form of a verb",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "be; is",
+                 "pos": "[cop]",
+               },
+               {
+                 "gloss": "o; oh",
+                 "info": "punctuational exclamation in haiku, renga, etc.",
+                 "pos": "[int]",
+               },
+               {
+                 "gloss": "huh; what",
+                 "info": "interjection expressing surprise",
+                 "pos": "[int]",
+               },
+               {
+                 "gloss": "hi",
+                 "pos": "[int]",
+               },
+               {
+                 "gloss": "yes; what?",
+                 "pos": "[int]",
+               },
+               {
+                 "gloss": "yes?; no?; is it?; isn't it?",
+                 "info": "indicates a question",
+                 "pos": "[prt]",
+               },
+             ],
+             "kana": "„ÇÑ",
+             "reading": "„ÇÑ",
+             "score": 11,
+             "seq": 2028960,
+             "text": "„ÇÑ",
+           },
+           [],
+         ],
+         [
+           "shigachi",
            {
              "components": [
                {
                  "conj": [
                    {
                      "gloss": [
                        {
-                         "gloss": "to burn",
-                         "pos": "[v5s,vt]",
+                         "gloss": "to do; to carry out; to perform",
+                         "pos": "[vs-i]",
+                       },
+                       {
+                         "gloss": "to cause to become; to make (into); to turn (into)",
+                         "pos": "[vs-i]",
+                       },
+                       {
+                         "gloss": "to serve as; to act as; to work as",
+                         "pos": "[vs-i]",
+                       },
+                       {
+                         "gloss": "to wear (clothes, a facial expression, etc.)",
+                         "pos": "[vs-i]",
+                       },
+                       {
+                         "gloss": "to judge as being; to view as being; to think of as; to treat as; to use as",
+                         "info": "as „Äú„Å´„Åô„Çã,„Äú„Å®„Åô„Çã",
+                         "pos": "[vs-i]",
+                       },
+                       {
+                         "gloss": "to decide on; to choose",
+                         "info": "as „Äú„Å´„Åô„Çã",
+                         "pos": "[vs-i]",
+                       },
+                       {
+                         "gloss": "to be sensed (of a smell, noise, etc.)",
+                         "info": "as „Äú„Åå„Åô„Çã",
+                         "pos": "[vs-i,vi]",
+                       },
+                       {
+                         "gloss": "to be (in a state, condition, etc.)",
+                         "pos": "[vs-i,vi]",
+                       },
+                       {
+                         "gloss": "to be worth; to cost",
+                         "pos": "[vs-i,vi]",
+                       },
+                       {
+                         "gloss": "to pass (of time); to elapse",
+                         "pos": "[vs-i,vi]",
+                       },
+                       {
+                         "gloss": "to place, or raise, person A to a post or status B",
+                         "info": "as A„ÇíB„Å´„Åô„Çã",
+                         "pos": "[vs-i,vt]",
+                       },
+                       {
+                         "gloss": "to transform A to B; to make A into B; to exchange A for B",
+                         "info": "as A„ÇíB„Å´„Åô„Çã",
+                         "pos": "[vs-i,vt]",
+                       },
+                       {
+                         "gloss": "to make use of A for B; to view A as B; to handle A as if it were B",
+                         "info": "as A„ÇíB„Å´„Åô„Çã",
+                         "pos": "[vs-i,vt]",
+                       },
+                       {
+                         "gloss": "to feel A about B",
+                         "info": "as A„ÇíB„Å´„Åô„Çã",
+                         "pos": "[vs-i,vt]",
+                       },
+                       {
+                         "gloss": "verbalizing suffix (applies to nouns noted in this dictionary with the part of speech "vs")",
+                         "pos": "[suf,vs-i]",
                        },
                        {
-                         "gloss": "to burn with (emotion, feeling); to be fired up",
-                         "pos": "[vt,v5s]",
+                         "gloss": "creates a humble verb (after a noun prefixed with "o" or "go")",
+                         "pos": "[aux-v,vs-i]",
+                       },
+                       {
+                         "gloss": "to be just about to; to be just starting to; to try to; to attempt to",
+                         "info": "as „Äú„ÅÜ„Å®„Åô„Çã,„Äú„Çà„ÅÜ„Å®„Åô„Çã",
+                         "pos": "[aux-v,vs-i]",
                        },
                      ],
                      "prop": [
                        {
-                         "pos": "v5s",
+                         "pos": "vs-i",
                          "type": "Continuative (~i)",
                        },
                      ],
-                     "reading": "ÁáÉ„ÇÑ„Åô „Äê„ÇÇ„ÇÑ„Åô„Äë",
+                     "reading": "ÁÇ∫„Çã „Äê„Åô„Çã„Äë",
                      "readok": true,
                    },
                  ],
-                 "kana": "„ÇÇ„ÇÑ„Åó",
-                 "reading": "ÁáÉ„ÇÑ„Åó „Äê„ÇÇ„ÇÑ„Åó„Äë",
+                 "kana": "„Åó",
+                 "reading": "„Åó",
                  "score": 0,
-                 "seq": 10112605,
-                 "text": "ÁáÉ„ÇÑ„Åó",
+                 "seq": 25430338,
+                 "text": "„Åó",
                },
                {
                  "conj": [],
                  "gloss": [
                    {
@@ -183,17 +314,17 @@
                  "seq": 2016470,
                  "text": "„Åå„Å°",
                },
              ],
              "compound": [
-               "ÁáÉ„ÇÑ„Åó",
+               "„Åó",
                "„Åå„Å°",
              ],
-             "kana": "„ÇÇ„ÇÑ„Åó„Åå„Å°",
-             "reading": "ÁáÉ„ÇÑ„Åó„Åå„Å° „Äê„ÇÇ„ÇÑ„Åó„Åå„Å°„Äë",
-             "score": 903,
-             "text": "ÁáÉ„ÇÑ„Åó„Åå„Å°",
+             "kana": "„Åó„Åå„Å°",
+             "reading": "„Åó„Åå„Å°",
+             "score": 200,
+             "text": "„Åó„Åå„Å°",
            },
            [],
          ],
          [
            "de",
@@ -230,11 +361,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
@@ -290,10 +428,10 @@
              "text": "ÂÜçË™≠",
            },
            [],
          ],
        ],
-       1346,
+       154,
      ],
    ],
    ". ",
  ]

- Expected  - 22
+ Received  + 161

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÂèÇËÄÉË≥áÊñô„ÅÆÁîüÊàêË¶ÅÁ¥Ñ„ÄÅÊñáËÑàÁáÉ„ÇÑ„Åó„Åå„Å°„ÅßË¶ÅÂÜçË™≠„ÄÇ" (limit: 1) [46.36ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -52,11 +52,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -64,20 +64,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -282,11 +284,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -336,11 +345,11 @@
                },
              ],
              "kana": "„Åë„Åó„Åü",
              "reading": "Ê∂à„Åó„Åü „Äê„Åë„Åó„Åü„Äë",
              "score": 336,
-             "seq": 10107735,
+             "seq": 25386250,
              "text": "Ê∂à„Åó„Åü",
            },
            [],
          ],
        ],

- Expected  - 6
+ Received  + 16

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Ê∑±Â§ú„ÉÜ„É≥„Ç∑„Éß„É≥„ÅÆÈï∑Êñá„Éù„Çπ„Éà„ÄÅÊúùËµ∑„Åç„Å¶Áßí„ÅßÊ∂à„Åó„Åü„ÄÇ" (limit: 1) [61.17ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -176,11 +176,11 @@
                },
              ],
              "kana": "„Å§„ÅÑ„Å¶",
              "reading": "„Å§„ÅÑ„Å¶",
              "score": 90,
-             "seq": 10082286,
+             "seq": 25360399,
              "text": "„Å§„ÅÑ„Å¶",
            },
            [],
          ],
          [
@@ -287,11 +287,11 @@
                },
              ],
              "kana": "„Åø„Å¶",
              "reading": "Ë¶ã„Å¶ „Äê„Åø„Å¶„Äë",
              "score": 112,
-             "seq": 10312424,
+             "seq": 25597319,
              "text": "Ë¶ã„Å¶",
            },
            [],
          ],
          [
@@ -329,11 +329,11 @@
                },
              ],
              "kana": "„Åã„Åü„Åæ„Å£„Åü",
              "reading": "Âõ∫„Åæ„Å£„Åü „Äê„Åã„Åü„Åæ„Å£„Åü„Äë",
              "score": 336,
-             "seq": 10585586,
+             "seq": 25879447,
              "text": "Âõ∫„Åæ„Å£„Åü",
            },
            [],
          ],
        ],

- Expected  - 3
+ Received  + 3

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Éé„Éº„É´„ÉÉ„ÇØÊ±∫Ê∏à„ÇØ„Çª„Åå„Å§„ÅÑ„Å¶Ë´ãÊ±ÇÊõ∏„ÇíË¶ã„Å¶Âõ∫„Åæ„Å£„Åü„ÄÇ" (limit: 1) [38.77ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -184,11 +184,11 @@
                    },
                  ],
                  "kana": "„Åä„Å°",
                  "reading": "ËêΩ„Å° „Äê„Åä„Å°„Äë",
                  "score": 112,
-                 "seq": 10478908,
+                 "seq": 25768800,
                  "text": "ËêΩ„Å°",
                },
              ],
            },
            [],
@@ -251,11 +251,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -263,20 +263,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -461,11 +463,11 @@
                },
              ],
              "kana": "„Åô„Åô„Åæ„Å™„Åè„Å¶",
              "reading": "ÈÄ≤„Åæ„Å™„Åè„Å¶ „Äê„Åô„Åô„Åæ„Å™„Åè„Å¶„Äë",
              "score": 1380,
-             "seq": 10252928,
+             "seq": 25535907,
              "text": "ÈÄ≤„Åæ„Å™„Åè„Å¶",
            },
            [],
          ],
          [

- Expected  - 7
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Çµ„Éº„ÉêËêΩ„Å°ÂæÖÊ©üÂàó„ÅÆÈÄ≤Êçó„Éê„Éº„ÅåÂÖ®ÁÑ∂ÈÄ≤„Åæ„Å™„Åè„Å¶Ëçâ„ÄÇ" (limit: 1) [83.30ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -26,11 +26,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -38,20 +38,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -189,11 +191,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,

- Expected  - 5
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "VRÊ©üÂô®„ÅÆ„Éà„É©„ÉÉ„Ç≠„É≥„Ç∞Â§ñ„Çå„Å£„Å±„Å™„Åó„ÅßÈÖç‰ø°„Åå„Ç´„Ç™„Çπ„ÄÇ" (limit: 1) [73.51ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -177,11 +177,11 @@
                    },
                  ],
                  "kana": "„Åó„Åü„Çâ",
                  "reading": "„Åó„Åü„Çâ",
                  "score": 0,
-                 "seq": 10150898,
+                 "seq": 25430330,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Åü„Çâ",
                },
              ],
              "compound": [
@@ -432,11 +432,11 @@
                },
              ],
              "kana": "„Å®„Çì„Å†",
              "reading": "È£õ„Çì„Å† „Äê„Å®„Çì„Å†„Äë",
              "score": 336,
-             "seq": 10429427,
+             "seq": 25717480,
              "text": "È£õ„Çì„Å†",
            },
            [],
          ],
        ],

- Expected  - 2
+ Received  + 2

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Êé®„ÅóÁÆ±Êé®„ÅóÂÆ£Ë®Ä„Åó„Åü„ÇâÂçòÊé®„ÅóÂã¢„Åã„Çâ„ÉÑ„ÉÉ„Ç≥„Éü„ÅåÈ£õ„Çì„Å†„ÄÇ" (limit: 1) [114.55ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -83,11 +83,11 @@
                    },
                  ],
                  "kana": "„Å£„ÅΩ",
                  "reading": "„Å£„ÅΩ",
                  "score": 0,
-                 "seq": 10095993,
+                 "seq": 25374318,
                  "text": "„Å£„ÅΩ",
                },
                {
                  "conj": [],
                  "kana": "„ÇÅ",
@@ -114,11 +114,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -126,20 +126,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -304,11 +306,11 @@
                        },
                      ],
                      "kana": "„Åï„Åã„Çå„Å¶",
                      "reading": "Áõõ„Çå„Å¶ „Äê„Åï„Åã„Çå„Å¶„Äë",
                      "score": 0,
-                     "seq": 10935177,
+                     "seq": 26253775,
                      "text": "Áõõ„Çå„Å¶",
                    },
                    {
                      "conj": [
                        {
@@ -320,13 +322,18 @@
                            {
                              "gloss": "to stay",
                              "pos": "[v1,vi]",
                            },
                            {
-                             "gloss": "to be ...-ing; to have been ...-ing",
-                             "info": "after the -te form of a verb; indicates continuing action or state",
-                             "pos": "[v1,aux-v]",
+                             "gloss": "to be ...-ing",
+                             "info": "after the -te form of a verb; indicates continuing action",
+                             "pos": "[aux-v,v1]",
+                           },
+                           {
+                             "gloss": "to have ...-ed; to be ...-ed",
+                             "info": "after the -te form of a verb; indicates continuing state",
+                             "pos": "[aux-v,v1]",
                            },
                          ],
                          "prop": [
                            {
                              "pos": "v1",
@@ -338,11 +345,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Å¶",
                      "reading": "„ÅÑ„Å¶",
                      "score": 0,
-                     "seq": 10547541,
+                     "seq": 25839478,
                      "suffix": "indicates continuing action (to be ...ing)",
                      "text": "„ÅÑ„Å¶",
                    },
                  ],
                  "compound": [
@@ -423,11 +430,11 @@
                        },
                      ],
                      "kana": "„ÇÇ„Çå„Å¶",
                      "reading": "Áõõ„Çå„Å¶ „Äê„ÇÇ„Çå„Å¶„Äë",
                      "score": 0,
-                     "seq": 10268706,
+                     "seq": 25552495,
                      "text": "Áõõ„Çå„Å¶",
                    },
                    {
                      "conj": [
                        {
@@ -439,13 +446,18 @@
                            {
                              "gloss": "to stay",
                              "pos": "[v1,vi]",
                            },
                            {
-                             "gloss": "to be ...-ing; to have been ...-ing",
-                             "info": "after the -te form of a verb; indicates continuing action or state",
-                             "pos": "[v1,aux-v]",
+                             "gloss": "to be ...-ing",
+                             "info": "after the -te form of a verb; indicates continuing action",
+                             "pos": "[aux-v,v1]",
+                           },
+                           {
+                             "gloss": "to have ...-ed; to be ...-ed",
+                             "info": "after the -te form of a verb; indicates continuing state",
+                             "pos": "[aux-v,v1]",
                            },
                          ],
                          "prop": [
                            {
                              "pos": "v1",
@@ -457,11 +469,11 @@
                        },
                      ],
                      "kana": "„ÅÑ„Å¶",
                      "reading": "„ÅÑ„Å¶",
                      "score": 0,
-                     "seq": 10547541,
+                     "seq": 25839478,
                      "suffix": "indicates continuing action (to be ...ing)",
                      "text": "„ÅÑ„Å¶",
                    },
                  ],
                  "compound": [

- Expected  - 16
+ Received  + 28

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÈáèÁî£Âûã„Å£„ÅΩ„ÇÅ„ÅÆY2K„Ç≥„Éº„Éá„ÄÅÂÜôÁúü„Å†„Å®Áõõ„Çå„Å¶„Å¶„Çà„Åç„ÄÇ" (limit: 1) [90.44ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -79,11 +79,70 @@
                },
                {
                  "gloss": "indicates „Å™-adjective",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
+               {
+                 "gloss": "indicates „Å™-adjective",
+                 "pos": "[prt]",
+               },
              ],
              "kana": "„Å™",
              "reading": "„Å™",
              "score": 6,
              "seq": 2029110,
@@ -247,11 +306,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -290,11 +356,11 @@
                },
              ],
              "kana": "„Ç®„É¢",
              "reading": "„Ç®„É¢",
              "score": 8,
-             "seq": 10532637,
+             "seq": 25824379,
              "text": "„Ç®„É¢",
            },
            [],
          ],
          [
@@ -341,11 +407,11 @@
                },
              ],
              "kana": "„Åø",
              "reading": "„Åø",
              "score": 10,
-             "seq": 10312464,
+             "seq": 25597363,
              "text": "„Åø",
            },
            [],
          ],
          [

- Expected  - 2
+ Received  + 70

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Å¶„ÅÑ„Å≠„ÅÑ„Å™ÊöÆ„Çâ„ÅóÁ≥ª„É™„Éº„É´„ÄÅBGM„Å†„Åë„Åß„Ç®„É¢„Åø„ÅåÂ¢ó„Åô„ÄÇ" (limit: 1) [65.73ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -48,11 +48,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -60,20 +60,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -191,11 +193,11 @@
                },
              ],
              "kana": "„Åã„Åà„Åó„Åü„Çâ",
              "reading": "Ëøî„Åó„Åü„Çâ „Äê„Åã„Åà„Åó„Åü„Çâ„Äë",
              "score": 840,
-             "seq": 10576791,
+             "seq": 25870411,
              "text": "Ëøî„Åó„Åü„Çâ",
            },
            [],
          ],
          [
@@ -308,11 +310,11 @@
                    },
                  ],
                  "kana": "„Åó„Åü",
                  "reading": "„Åó„Åü",
                  "score": 0,
-                 "seq": 10150860,
+                 "seq": 25430291,
                  "suffix": "makes a verb from a noun",
                  "text": "„Åó„Åü",
                },
              ],
              "compound": [

- Expected  - 7
+ Received  + 9

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Êó¢Ë™≠„Çπ„É´„ÉºÂõûÈÅø„ÅÆ„Åü„ÇÅ„Å´Áßí„É™„ÉóËøî„Åó„Åü„ÇâË™§ÁàÜ„Åó„Åü„ÄÇ" (limit: 1) [108.32ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -102,11 +102,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -114,20 +114,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",

- Expected  - 5
+ Received  + 7

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Éï„Ç©„É≠„ÉêÁõÆÁöÑÊÑüÂº∑„ÇÅ„ÅÆÊå®Êã∂„Éù„Çπ„Éà„ÄÅÈÄÜ„Å´„Åì„Çè„ÅÑ„ÄÇ" (limit: 1) [49.51ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -3,14 +3,21 @@
      [
        [
          [
            "pomodoro",
            {
+             "conj": [],
+             "gloss": [
+               {
+                 "gloss": "tomato",
+                 "pos": "[n]",
+               },
+             ],
              "kana": "„Éù„É¢„Éâ„Éº„É≠",
              "reading": "„Éù„É¢„Éâ„Éº„É≠",
-             "score": 0,
+             "score": 440,
+             "seq": 2863785,
              "text": "„Éù„É¢„Éâ„Éº„É≠",
            },
            [],
          ],
          [
@@ -18,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -30,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -147,11 +156,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -232,11 +248,11 @@
                },
              ],
              "kana": "„Åô„Åô„Åæ„Å™„ÅÑ",
              "reading": "„Åô„Åô„Åæ„Å™„ÅÑ",
              "score": 275,
-             "seq": 10252921,
+             "seq": 25535900,
              "text": "„Åô„Åô„Åæ„Å™„ÅÑ",
            },
            [],
          ],
          [
@@ -272,10 +288,10 @@
              "text": "ÂïèÈ°å",
            },
            [],
          ],
        ],
-       -1291,
+       1663,
      ],
    ],
    ". ",
  ]

- Expected  - 8
+ Received  + 26

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Éù„É¢„Éâ„Éº„É≠„ÅÆ‰ºëÊÜ©„Å†„ÅëÂé≥ÂÆà„ÅßÊú¨Á∑®„Åô„Åô„Åæ„Å™„ÅÑÂïèÈ°å„ÄÇ" (limit: 1) [51.86ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -34,11 +34,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -46,20 +46,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -136,11 +138,11 @@
                },
              ],
              "kana": "„Çè„Åô„Çå„Å¶",
              "reading": "Âøò„Çå„Å¶ „Äê„Çè„Åô„Çå„Å¶„Äë",
              "score": 216,
-             "seq": 10524475,
+             "seq": 25816348,
              "text": "Âøò„Çå„Å¶",
            },
            [],
          ],
          [

- Expected  - 6
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Á´ØÊú´„ÅÆ2FA„Éà„Éº„ÇØ„É≥Êõ¥Êñ∞Âøò„Çå„Å¶„É≠„Ç∞„Ç§„É≥Êà¶‰∫âÂãÉÁô∫„ÄÇ" (limit: 1) [37.33ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -145,11 +145,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,
@@ -241,11 +248,16 @@
                    {
                      "gloss": "to forcibly ...; to strongly ...",
                      "info": "before a verb",
                      "pos": "[pref]",
                    },
+                   {
+                     "field": "{go}",
+                     "gloss": "push; pushing; extending your stones forward by pushing against opponent's stones",
+                     "info": "usu. „Ç™„Ç∑",
+                     "pos": "[n]",
+                   },
                  ],
                  "kana": "„Åä„Åó",
                  "reading": "Êäº„Åó „Äê„Åä„Åó„Äë",
                  "score": 144,
                  "seq": 1180130,
@@ -295,11 +307,15 @@
                          "gloss": "to make sure",
                          "pos": "[v5s,vt]",
                        },
                        {
                          "gloss": "to fall behind schedule",
+                         "pos": "[v5s,vi]",
+                       },
+                       {
+                         "field": "{go}",
+                         "gloss": "to push; to extend one's stones forward by pushing against opponent's stones",
                          "pos": "[vi,v5s]",
                        },
                      ],
                      "prop": [
                        {
@@ -312,11 +328,11 @@
                    },
                  ],
                  "kana": "„Åä„Åó",
                  "reading": "Êäº„Åó „Äê„Åä„Åó„Äë",
                  "score": 112,
-                 "seq": 10258840,
+                 "seq": 25542231,
                  "text": "Êäº„Åó",
                },
              ],
            },
            [],

- Expected  - 1
+ Received  + 20

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÊäΩÈÅ∏„Éï„Ç©„Éº„É†ÂêåÊôÇ„Ç¢„ÇØ„Çª„ÇπÈõÜ‰∏≠„ÅßÈÄÅ‰ø°„Éú„Çø„É≥ÁÑ°ÈôêÊäº„Åó„ÄÇ" (limit: 1) [47.34ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -161,11 +161,18 @@
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
                },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
+               },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
              "seq": 2028980,

- Expected  - 0
+ Received  + 8

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "„Ç∑„Çß„Ç¢„Çµ„Ç§„ÇØ„É´ËøîÂç¥Êû†„Çº„É≠„ÅßÈßÖÂâç„Åê„Çã„Åê„ÇãÂë®Âõû„ÄÇ" (limit: 1) [30.54ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -25,11 +25,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -37,20 +37,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -279,11 +281,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -291,20 +293,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -340,11 +344,11 @@
                },
              ],
              "kana": "„ÇÑ„ÇÅ„Å¶",
              "reading": "„ÇÑ„ÇÅ„Å¶",
              "score": 90,
-             "seq": 10103535,
+             "seq": 25381783,
              "text": "„ÇÑ„ÇÅ„Å¶",
            },
            [],
          ],
        ],

- Expected  - 11
+ Received  + 15

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "ÁΩÆ„ÅçÂúüÁî£„ÅÆË¨é„Éù„Çπ„Éà„ÄÅË£èÂû¢„Åã„ÇâÂåÇ„Çè„Åõ„Çã„ÅÆ„ÇÑ„ÇÅ„Å¶„ÄÇ" (limit: 1) [49.40ms]
44 |     // Normalize both outputs to sort alternatives deterministically before comparing
45 |     // This handles the case where alternatives have equal precedence and can appear in any order
46 |     const normalizedTs = normalizeJson(tsJson);
47 |     const normalizedExpected = normalizeJson(expectedJson);
48 | 
49 |     expect(normalizedTs).toEqual(normalizedExpected);
                              ^
error: expect(received).toEqual(expected)

@@ -54,11 +54,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -66,20 +66,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -183,11 +185,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -195,20 +197,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -298,11 +302,11 @@
                },
              ],
              "kana": "„Åø",
              "reading": "„Åø",
              "score": 10,
-             "seq": 10312464,
+             "seq": 25597363,
              "text": "„Åø",
            },
            [],
          ],
        ],
@@ -340,11 +344,11 @@
            {
              "conj": [],
              "gloss": [
                {
                  "gloss": "indicates possessive",
-                 "info": "occasionally „Çì, orig. written ‰πÉ or ‰πã",
+                 "info": "orig. written ‰πÉ or ‰πã",
                  "pos": "[prt]",
                },
                {
                  "gloss": "nominalizes verbs and adjectives",
                  "pos": "[prt]",
@@ -352,20 +356,22 @@
                {
                  "gloss": "substitutes for "ga" in subordinate phrases",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, falling tone) indicates a confident conclusion",
-                 "info": "often „Çì",
+                 "gloss": "indicates a confident conclusion",
+                 "info": "at sentence-end; falling tone",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end) indicates emotional emphasis",
+                 "gloss": "indicates emotional emphasis",
+                 "info": "at sentence-end",
                  "pos": "[prt]",
                },
                {
-                 "gloss": "(at sentence-end, rising tone) indicates question",
+                 "gloss": "indicates question",
+                 "info": "at sentence-end; rising tone",
                  "pos": "[prt]",
                },
              ],
              "kana": "„ÅÆ",
              "reading": "„ÅÆ",
@@ -428,11 +434,18 @@
                },
                {
                  "gloss": "by; with",
                  "info": "indicates means of action",
                  "pos": "[prt]",
+               },
+               {
+                 "gloss": "so; therefore; (and) then; accordingly",
+                 "pos": "[conj]",
+               },
+               {
+                 "gloss": "by the way; incidentally; now then; well",
+                 "pos": "[conj]",
                },
              ],
              "kana": "„Åß",
              "reading": "„Åß",
              "score": 11,
@@ -584,11 +597,11 @@
                    },
                  ],
                  "kana": "„Åó„Å¨",
                  "reading": "„Åó„Å¨",
                  "score": 16,
-                 "seq": 10286623,
+                 "seq": 25570839,
                  "text": "„Åó„Å¨",
                },
              ],
            },
            [],

- Expected  - 17
+ Received  + 31

      at <anonymous> (/home/tiger/ichiran-node/packages/cli/tests/cli-parity.test.ts:49:26)
(fail) CLI Full JSON Comparison (-f flag) > full JSON matches for: "Êé®„Åó„ÅÆÊñ∞Ë°£Ë£ÖÁâ©ÁêÜÊºîÁÆó„ÅÆË¢ñ„Å≤„Çâ„Åø„ÄÅÁèæÂú∞„ÅÆÊ≠ìÂ£∞„ÅßËÄ≥„Åå„Åó„Å¨„ÄÇ" (limit: 1) [101.66ms]

 14 pass
 246 fail
 260 expect() calls
Ran 260 tests across 1 file. [28.56s]
